2025-05-27 01:34:29,974 - INFO - Starting comprehensive query validation test
2025-05-27 01:34:29,974 - INFO - Testing AWS::EC2::Instance in us-east-1
2025-05-27 01:34:29,974 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:29,979 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:30,157 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:34:30,158 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0104","unit":"Hrs","description":"$0.0104 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:30,158 - INFO - ✅ AWS::EC2::Instance in us-east-1: Query successful
2025-05-27 01:34:30,158 - INFO - Testing AWS::EC2::Instance in ca-central-1
2025-05-27 01:34:30,158 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:30,160 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:30,339 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:34:30,340 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0116","unit":"Hrs","description":"$0.0116 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:30,341 - INFO - ✅ AWS::EC2::Instance in ca-central-1: Query successful
2025-05-27 01:34:30,342 - INFO - Testing AWS::EC2::Volume in us-east-1
2025-05-27 01:34:30,342 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "volumeApiName", value: "gp3" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:30,346 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:30,523 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 217
2025-05-27 01:34:30,525 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.08","unit":"GB-Mo","description":"$0.08 per GB-month of General Purpose (gp3) provisioned storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:30,526 - INFO - ✅ AWS::EC2::Volume in us-east-1: Query successful
2025-05-27 01:34:30,526 - INFO - Testing AWS::EC2::Volume in ca-central-1
2025-05-27 01:34:30,526 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "volumeApiName", value: "gp3" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:30,530 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:30,702 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 214
2025-05-27 01:34:30,704 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.088","unit":"GB-Mo","description":"$0.088 per GB-month of General Purpose (gp3) provisioned storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:30,704 - INFO - ✅ AWS::EC2::Volume in ca-central-1: Query successful
2025-05-27 01:34:30,705 - INFO - Testing AWS::EC2::EIP in us-east-1
2025-05-27 01:34:30,705 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "IP Address",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ElasticIP:IdleAddress/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:30,709 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:30,865 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 381
2025-05-27 01:34:30,865 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Hrs","description":"$0.00 per Elastic IP address not attached to a running instance for the first hour","startUsageAmount":"0","endUsageAmount":"1"},{"USD":"0.005","unit":"Hrs","description":"$0.005 per Elastic IP address not attached to a running instance per hour (prorated)","startUsageAmount":"1","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:30,865 - INFO - ✅ AWS::EC2::EIP in us-east-1: Query successful
2025-05-27 01:34:30,865 - INFO - Testing AWS::EC2::EIP in ca-central-1
2025-05-27 01:34:30,865 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "IP Address",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ElasticIP:IdleAddress/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:30,867 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:31,037 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 381
2025-05-27 01:34:31,037 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Hrs","description":"$0.00 per Elastic IP address not attached to a running instance for the first hour","startUsageAmount":"0","endUsageAmount":"1"},{"USD":"0.005","unit":"Hrs","description":"$0.005 per Elastic IP address not attached to a running instance per hour (prorated)","startUsageAmount":"1","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:31,037 - INFO - ✅ AWS::EC2::EIP in ca-central-1: Query successful
2025-05-27 01:34:31,037 - INFO - Testing AWS::EC2::Snapshot in us-east-1
2025-05-27 01:34:31,037 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage Snapshot",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EBS:SnapshotUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:31,040 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:31,213 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 202
2025-05-27 01:34:31,213 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"GB-Mo","description":"$0.05 per GB-Month of snapshot data stored - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:31,214 - INFO - ✅ AWS::EC2::Snapshot in us-east-1: Query successful
2025-05-27 01:34:31,214 - INFO - Testing AWS::EC2::Snapshot in ca-central-1
2025-05-27 01:34:31,214 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage Snapshot",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EBS:SnapshotUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:31,217 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:31,386 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 193
2025-05-27 01:34:31,386 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.055","unit":"GB-Mo","description":"$0.055 per GB-Month of snapshot data stored - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:31,387 - INFO - ✅ AWS::EC2::Snapshot in ca-central-1: Query successful
2025-05-27 01:34:31,387 - INFO - Testing AWS::RDS::DBInstance in us-east-1
2025-05-27 01:34:31,387 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.micro" },
                { key: "databaseEngine", value: "MySQL" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:31,388 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:31,546 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 395
2025-05-27 01:34:31,546 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.034","unit":"Hrs","description":"USD 0.034 per db.t3.micro Multi-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.017","unit":"Hrs","description":"USD 0.017 per db.t3.micro Single-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:31,547 - INFO - ✅ AWS::RDS::DBInstance in us-east-1: Query successful
2025-05-27 01:34:31,547 - INFO - Testing AWS::RDS::DBInstance in ca-central-1
2025-05-27 01:34:31,547 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.micro" },
                { key: "databaseEngine", value: "MySQL" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:31,550 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:31,715 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 395
2025-05-27 01:34:31,716 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.019","unit":"Hrs","description":"USD 0.019 per db.t3.micro Single-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.037","unit":"Hrs","description":"USD 0.037 per db.t3.micro Multi-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:31,717 - INFO - ✅ AWS::RDS::DBInstance in ca-central-1: Query successful
2025-05-27 01:34:31,717 - INFO - Testing AWS::RDS::DBCluster in us-east-1
2025-05-27 01:34:31,717 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "databaseEngine", value: "Any" },
                { key: "usagetype", value_regex: "/Aurora.*StorageUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:31,721 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:31,898 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 354
2025-05-27 01:34:31,898 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.225","unit":"GB-Mo","description":"USD 0.225 per GB-month of I/O-Optimized consumed storage (Aurora MySQL)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.10 per GB-month of consumed storage (Aurora)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:31,898 - INFO - ✅ AWS::RDS::DBCluster in us-east-1: Query successful
2025-05-27 01:34:31,898 - INFO - Testing AWS::RDS::DBCluster in ca-central-1
2025-05-27 01:34:31,899 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "databaseEngine", value: "Any" },
                { key: "usagetype", value_regex: "/Aurora.*StorageUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:31,901 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:32,079 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 366
2025-05-27 01:34:32,080 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.11","unit":"GB-Mo","description":"USD 0.11 per GB-month of consumed storage for Aurora MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.248","unit":"GB-Mo","description":"USD 0.248 per GB-month of I/O-Optimized consumed storage (Aurora MySQL)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:32,080 - INFO - ✅ AWS::RDS::DBCluster in ca-central-1: Query successful
2025-05-27 01:34:32,081 - INFO - Testing AWS::S3::Bucket in us-east-1
2025-05-27 01:34:32,081 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonS3",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/TimedStorage-ByteHrs/" },
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:32,083 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:32,252 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 483
2025-05-27 01:34:32,253 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.023","unit":"GB-Mo","description":"$0.023 per GB - first 50 TB / month of storage used","startUsageAmount":"0","endUsageAmount":"51200"},{"USD":"0.022","unit":"GB-Mo","description":"$0.022 per GB - next 450 TB / month of storage used","startUsageAmount":"51200","endUsageAmount":"512000"},{"USD":"0.021","unit":"GB-Mo","description":"$0.021 per GB - storage used / month over 500 TB","startUsageAmount":"512000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:32,254 - INFO - ✅ AWS::S3::Bucket in us-east-1: Query successful
2025-05-27 01:34:32,254 - INFO - Testing AWS::S3::Bucket in ca-central-1
2025-05-27 01:34:32,254 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonS3",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/TimedStorage-ByteHrs/" },
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:32,258 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:32,429 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 483
2025-05-27 01:34:32,430 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.025","unit":"GB-Mo","description":"$0.025 per GB - first 50 TB / month of storage used","startUsageAmount":"0","endUsageAmount":"51200"},{"USD":"0.024","unit":"GB-Mo","description":"$0.024 per GB - next 450 TB / month of storage used","startUsageAmount":"51200","endUsageAmount":"512000"},{"USD":"0.023","unit":"GB-Mo","description":"$0.023 per GB - storage used / month over 500 TB","startUsageAmount":"512000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:32,430 - INFO - ✅ AWS::S3::Bucket in ca-central-1: Query successful
2025-05-27 01:34:32,430 - INFO - Testing AWS::Lambda::Function in us-east-1
2025-05-27 01:34:32,430 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSLambda",
              productFamily: "Serverless",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/GB-Second/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:32,435 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:32,618 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 2069
2025-05-27 01:34:32,619 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"3.09e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage for ARM - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000166667","unit":"seconds","description":"AWS Lambda - Total Compute - US East (Northern Virginia)-Tier-1","startUsageAmount":"0","endUsageAmount":"6000000000"},{"USD":"0.000015","unit":"seconds","description":"AWS Lambda - Total Compute - US East (Northern Virginia)-Tier-2","startUsageAmount":"6000000000","endUsageAmount":"15000000000"},{"USD":"0.0000133334","unit":"seconds","description":"AWS Lambda - Total Compute - US East (Northern Virginia)-Tier-3","startUsageAmount":"15000000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00005001","unit":"Lambda-GB-Second","description":"AWS Lambda Edge - Total Compute - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000133334","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - US East (Northern Virginia)-Tier-1","startUsageAmount":"0","endUsageAmount":"7500000000"},{"USD":"0.0000120001","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - US East (Northern Virginia)-Tier-2","startUsageAmount":"7500000000","endUsageAmount":"18750000000"},{"USD":"0.0000106667","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - US East (Northern Virginia)-Tier-3","startUsageAmount":"18750000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000077778","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute (Provisioned) for ARM - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3.09e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000097222","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute (Provisioned) - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:32,621 - INFO - ✅ AWS::Lambda::Function in us-east-1: Query successful
2025-05-27 01:34:32,621 - INFO - Testing AWS::Lambda::Function in ca-central-1
2025-05-27 01:34:32,621 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSLambda",
              productFamily: "Serverless",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/GB-Second/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:32,626 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:32,803 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 2003
2025-05-27 01:34:32,804 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000166667","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute - Canada (Central)-Tier-1","startUsageAmount":"0","endUsageAmount":"6000000000"},{"USD":"0.000015","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute - Canada (Central)-Tier-2","startUsageAmount":"6000000000","endUsageAmount":"15000000000"},{"USD":"0.0000133334","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute - Canada (Central)-Tier-3","startUsageAmount":"15000000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000133334","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - Canada (Central)-Tier-1","startUsageAmount":"0","endUsageAmount":"7500000000"},{"USD":"0.0000120001","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - Canada (Central)-Tier-2","startUsageAmount":"7500000000","endUsageAmount":"18750000000"},{"USD":"0.0000106667","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - Canada (Central)-Tier-3","startUsageAmount":"18750000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3.4e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage for ARM - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00005001","unit":"Lambda-GB-Second","description":"AWS Lambda Edge - Total Compute - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3.4e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000108407","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute (Provisioned) - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000086726","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM (Provisioned) - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:32,805 - INFO - ✅ AWS::Lambda::Function in ca-central-1: Query successful
2025-05-27 01:34:32,805 - INFO - Testing AWS::ElasticLoadBalancingV2::LoadBalancer in us-east-1
2025-05-27 01:34:32,806 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" },
                { key: "operation", value: "LoadBalancing" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:32,810 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:32,981 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:34:32,983 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.025","unit":"Hrs","description":"$0.025 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:32,984 - INFO - ✅ AWS::ElasticLoadBalancingV2::LoadBalancer in us-east-1: Query successful
2025-05-27 01:34:32,984 - INFO - Testing AWS::ElasticLoadBalancingV2::LoadBalancer in ca-central-1
2025-05-27 01:34:32,984 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" },
                { key: "operation", value: "LoadBalancing" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:32,989 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:33,147 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:34:33,148 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0275","unit":"Hrs","description":"$0.0275 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:33,149 - INFO - ✅ AWS::ElasticLoadBalancingV2::LoadBalancer in ca-central-1: Query successful
2025-05-27 01:34:33,149 - INFO - Testing AWS::ElasticLoadBalancing::LoadBalancer in us-east-1
2025-05-27 01:34:33,149 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "us-east-1",
              attributeFilters: [
                { key: "locationType", value: "AWS Region" },
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:33,154 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:33,331 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:34:33,333 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.025","unit":"Hrs","description":"$0.025 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:33,334 - INFO - ✅ AWS::ElasticLoadBalancing::LoadBalancer in us-east-1: Query successful
2025-05-27 01:34:33,334 - INFO - Testing AWS::ElasticLoadBalancing::LoadBalancer in ca-central-1
2025-05-27 01:34:33,335 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "ca-central-1",
              attributeFilters: [
                { key: "locationType", value: "AWS Region" },
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:33,339 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:33,509 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:34:33,510 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0275","unit":"Hrs","description":"$0.0275 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:33,511 - INFO - ✅ AWS::ElasticLoadBalancing::LoadBalancer in ca-central-1: Query successful
2025-05-27 01:34:33,511 - INFO - Testing AWS::Logs::LogGroup in us-east-1
2025-05-27 01:34:33,511 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Data Payload",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/DataProcessing-Bytes/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:33,515 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:33,688 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 406
2025-05-27 01:34:33,689 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.5","unit":"GB","description":"$0.50 per GB custom log data ingested in Standard log class - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.5","unit":"GB","description":"$0.50 per GB custom log data ingested in Standard log class - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:33,690 - INFO - ✅ AWS::Logs::LogGroup in us-east-1: Query successful
2025-05-27 01:34:33,691 - INFO - Testing AWS::Logs::LogGroup in ca-central-1
2025-05-27 01:34:33,691 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Data Payload",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/DataProcessing-Bytes/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:33,695 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:33,862 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 205
2025-05-27 01:34:33,863 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.55","unit":"GB","description":"$0.55 per GB custom log data ingested in Standard log class - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:33,864 - INFO - ✅ AWS::Logs::LogGroup in ca-central-1: Query successful
2025-05-27 01:34:33,865 - INFO - Testing AWS::CloudWatch::Dashboard in us-east-1
2025-05-27 01:34:33,865 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Dashboard",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Dashboard/" },
                { key: "operation", value: "CreateDashboard" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:33,870 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:34,045 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:34,047 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:34,047 - ERROR - ❌ AWS::CloudWatch::Dashboard in us-east-1: No products found in response
2025-05-27 01:34:34,048 - INFO - Testing AWS::CloudWatch::Dashboard in ca-central-1
2025-05-27 01:34:34,048 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Dashboard",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Dashboard/" },
                { key: "operation", value: "CreateDashboard" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:34,052 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:34,236 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:34,237 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:34,238 - ERROR - ❌ AWS::CloudWatch::Dashboard in ca-central-1: No products found in response
2025-05-27 01:34:34,238 - INFO - Testing AWS::CloudWatch::Alarm in us-east-1
2025-05-27 01:34:34,238 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Alarm",
              region: "us-east-1",
              attributeFilters: [
                { key: "alarmType", value_regex: "/Standard/" },
                { key: "usagetype", value_regex: "/AlarmMonitorUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:34,242 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:34,411 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 210
2025-05-27 01:34:34,413 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Alarms","description":"$0.10 per alarm metric month (standard resolution) - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:34,413 - INFO - ✅ AWS::CloudWatch::Alarm in us-east-1: Query successful
2025-05-27 01:34:34,414 - INFO - Testing AWS::CloudWatch::Alarm in ca-central-1
2025-05-27 01:34:34,414 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Alarm",
              region: "ca-central-1",
              attributeFilters: [
                { key: "alarmType", value_regex: "/Standard/" },
                { key: "usagetype", value_regex: "/AlarmMonitorUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:34,420 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:34,596 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 199
2025-05-27 01:34:34,597 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Alarms","description":"$0.10 per alarm metric month (standard resolution) - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:34,598 - INFO - ✅ AWS::CloudWatch::Alarm in ca-central-1: Query successful
2025-05-27 01:34:34,598 - INFO - Testing AWS::DynamoDB::Table in us-east-1
2025-05-27 01:34:34,598 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDynamoDB",
              productFamily: "Amazon DynamoDB PayPerRequest Throughput",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value: "DDB-ReadUnits" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:34,603 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:34,779 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 195
2025-05-27 01:34:34,780 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1.25e-7","unit":"ReadRequestUnits","description":"$0.125 per million read request units (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:34,780 - INFO - ✅ AWS::DynamoDB::Table in us-east-1: Query successful
2025-05-27 01:34:34,781 - INFO - Testing AWS::DynamoDB::Table in ca-central-1
2025-05-27 01:34:34,781 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDynamoDB",
              productFamily: "Amazon DynamoDB PayPerRequest Throughput",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value: "DDB-ReadUnits" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:34,784 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:34,956 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 202
2025-05-27 01:34:34,957 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1.375e-7","unit":"ReadRequestUnits","description":"$0.1375 per million read request units (Canada (Central))","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:34,958 - INFO - ✅ AWS::DynamoDB::Table in ca-central-1: Query successful
2025-05-27 01:34:34,958 - INFO - Testing AWS::ApiGateway::RestApi in us-east-1
2025-05-27 01:34:34,958 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:34,960 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:35,141 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1475
2025-05-27 01:34:35,142 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"Requests","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"Requests","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"Requests","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"USE1-AmazonApiGateway-Request","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"USE1-AmazonApiGateway-Request","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"USE1-AmazonApiGateway-Request","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"USE1-AmazonApiGateway-Request","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:35,142 - INFO - ✅ AWS::ApiGateway::RestApi in us-east-1: Query successful
2025-05-27 01:34:35,142 - INFO - Testing AWS::ApiGateway::RestApi in ca-central-1
2025-05-27 01:34:35,142 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:35,145 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:35,334 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1473
2025-05-27 01:34:35,334 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"CAN1-AmazonApiGatewayRequest","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"CAN1-AmazonApiGatewayRequest","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"Requests","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"Requests","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"Requests","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:35,335 - INFO - ✅ AWS::ApiGateway::RestApi in ca-central-1: Query successful
2025-05-27 01:34:35,335 - INFO - Testing AWS::ApiGatewayV2::Api in us-east-1
2025-05-27 01:34:35,335 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayHttpRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:35,337 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:35,495 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 377
2025-05-27 01:34:35,496 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"Requests","description":"$1/million requests - API Gateway HTTP API (first 300 million)","startUsageAmount":"0","endUsageAmount":"300000000"},{"USD":"9e-7","unit":"Requests","description":"$0.9/million requests - API Gateway HTTP API (more than 300 million)","startUsageAmount":"300000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:35,496 - INFO - ✅ AWS::ApiGatewayV2::Api in us-east-1: Query successful
2025-05-27 01:34:35,496 - INFO - Testing AWS::ApiGatewayV2::Api in ca-central-1
2025-05-27 01:34:35,496 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayHttpRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:35,499 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:35,679 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 384
2025-05-27 01:34:35,679 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00000111","unit":"Requests","description":"$1.11/million requests - API Gateway HTTP API (first 300 million)","startUsageAmount":"0","endUsageAmount":"300000000"},{"USD":"0.000001","unit":"Requests","description":"$1/million requests - API Gateway HTTP API (more than 300 million)","startUsageAmount":"300000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:35,679 - INFO - ✅ AWS::ApiGatewayV2::Api in ca-central-1: Query successful
2025-05-27 01:34:35,679 - INFO - Testing AWS::KMS::Key in us-east-1
2025-05-27 01:34:35,679 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awskms",
              productFamily: "Encryption Key",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "us-east-1-KMS-Keys" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:35,682 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:35,855 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 190
2025-05-27 01:34:35,856 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1","unit":"Keys","description":"$1 per customer managed KMS key version in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:35,856 - INFO - ✅ AWS::KMS::Key in us-east-1: Query successful
2025-05-27 01:34:35,856 - INFO - Testing AWS::KMS::Key in ca-central-1
2025-05-27 01:34:35,856 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awskms",
              productFamily: "Encryption Key",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "ca-central-1-KMS-Keys" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:35,857 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:36,037 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 185
2025-05-27 01:34:36,037 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1","unit":"Keys","description":"$1 per customer managed KMS key version in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:36,037 - INFO - ✅ AWS::KMS::Key in ca-central-1: Query successful
2025-05-27 01:34:36,037 - INFO - Testing AWS::EKS::Cluster in us-east-1
2025-05-27 01:34:36,037 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EKS.*Cluster/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:36,040 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:36,224 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 329
2025-05-27 01:34:36,225 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Hours","description":"Amazon EKS cluster usage in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.1","unit":"hours","description":"Amazon EKS local cluster usage on AWS Outposts","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:36,225 - INFO - ✅ AWS::EKS::Cluster in us-east-1: Query successful
2025-05-27 01:34:36,225 - INFO - Testing AWS::EKS::Cluster in ca-central-1
2025-05-27 01:34:36,225 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EKS.*Cluster/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:36,228 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:36,395 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 324
2025-05-27 01:34:36,396 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Hours","description":"Amazon EKS cluster usage in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.1","unit":"hours","description":"Amazon EKS local cluster usage on AWS Outposts","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:36,396 - INFO - ✅ AWS::EKS::Cluster in ca-central-1: Query successful
2025-05-27 01:34:36,396 - INFO - Testing AWS::EKS::Nodegroup in us-east-1
2025-05-27 01:34:36,396 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.medium" },
                { key: "tenancy", value: "Shared" },
                { key: "operatingSystem", value: "Linux" },
                { key: "preInstalledSw", value: "NA" },
                { key: "licenseModel", value: "No License required" },
                { key: "capacitystatus", value: "Used" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:36,399 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:36,583 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 181
2025-05-27 01:34:36,584 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0416","unit":"Hrs","description":"$0.0416 per On Demand Linux t3.medium Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:36,584 - INFO - ✅ AWS::EKS::Nodegroup in us-east-1: Query successful
2025-05-27 01:34:36,584 - INFO - Testing AWS::EKS::Nodegroup in ca-central-1
2025-05-27 01:34:36,584 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.medium" },
                { key: "tenancy", value: "Shared" },
                { key: "operatingSystem", value: "Linux" },
                { key: "preInstalledSw", value: "NA" },
                { key: "licenseModel", value: "No License required" },
                { key: "capacitystatus", value: "Used" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:36,587 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:36,765 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 181
2025-05-27 01:34:36,765 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0464","unit":"Hrs","description":"$0.0464 per On Demand Linux t3.medium Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:36,766 - INFO - ✅ AWS::EKS::Nodegroup in ca-central-1: Query successful
2025-05-27 01:34:36,766 - INFO - Testing AWS::ElastiCache::CacheCluster in us-east-1
2025-05-27 01:34:36,766 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:36,769 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:36,936 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:34:36,936 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.017","unit":"Hrs","description":"$0.017 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:36,936 - INFO - ✅ AWS::ElastiCache::CacheCluster in us-east-1: Query successful
2025-05-27 01:34:36,936 - INFO - Testing AWS::ElastiCache::CacheCluster in ca-central-1
2025-05-27 01:34:36,937 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:36,939 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:37,115 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:34:37,117 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.019","unit":"Hrs","description":"$0.019 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:37,117 - INFO - ✅ AWS::ElastiCache::CacheCluster in ca-central-1: Query successful
2025-05-27 01:34:37,117 - INFO - Testing AWS::ElastiCache::ReplicationGroup in us-east-1
2025-05-27 01:34:37,118 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:37,120 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:37,294 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:34:37,295 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.017","unit":"Hrs","description":"$0.017 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:37,296 - INFO - ✅ AWS::ElastiCache::ReplicationGroup in us-east-1: Query successful
2025-05-27 01:34:37,296 - INFO - Testing AWS::ElastiCache::ReplicationGroup in ca-central-1
2025-05-27 01:34:37,296 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:37,300 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:37,486 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:34:37,487 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.019","unit":"Hrs","description":"$0.019 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:37,487 - INFO - ✅ AWS::ElastiCache::ReplicationGroup in ca-central-1: Query successful
2025-05-27 01:34:37,487 - INFO - Testing AWS::Redshift::Cluster in us-east-1
2025-05-27 01:34:37,487 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRedshift",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "dc2.large" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:37,490 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:37,655 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 211
2025-05-27 01:34:37,656 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.25","unit":"Hrs","description":"$0.250 per Redshift Dense Compute Large (DC2.L) Compute Node-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:37,657 - INFO - ✅ AWS::Redshift::Cluster in us-east-1: Query successful
2025-05-27 01:34:37,658 - INFO - Testing AWS::Redshift::Cluster in ca-central-1
2025-05-27 01:34:37,658 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRedshift",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "dc2.large" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:37,662 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:37,836 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 212
2025-05-27 01:34:37,837 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.275","unit":"Hrs","description":"$0.275 per Redshift Dense Compute Large (DC2.L) Compute Node-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:37,837 - INFO - ✅ AWS::Redshift::Cluster in ca-central-1: Query successful
2025-05-27 01:34:37,837 - INFO - Testing AWS::Route53::HostedZone in us-east-1
2025-05-27 01:34:37,838 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Zone",
              attributeFilters: [
                { key: "usagetype", value: "HostedZone" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:37,842 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:38,015 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 331
2025-05-27 01:34:38,017 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.5","unit":"HostedZone","description":"$0.50 per Hosted Zone for the first 25 Hosted Zones","startUsageAmount":"0","endUsageAmount":"25"},{"USD":"0.1","unit":"HostedZone","description":"$0.10 per Hosted Zone for additional Hosted Zones","startUsageAmount":"25","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:38,017 - INFO - ✅ AWS::Route53::HostedZone in us-east-1: Query successful
2025-05-27 01:34:38,017 - INFO - Testing AWS::Route53::HostedZone in ca-central-1
2025-05-27 01:34:38,018 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Zone",
              attributeFilters: [
                { key: "usagetype", value: "HostedZone" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:38,021 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:38,188 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 331
2025-05-27 01:34:38,189 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.5","unit":"HostedZone","description":"$0.50 per Hosted Zone for the first 25 Hosted Zones","startUsageAmount":"0","endUsageAmount":"25"},{"USD":"0.1","unit":"HostedZone","description":"$0.10 per Hosted Zone for additional Hosted Zones","startUsageAmount":"25","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:38,190 - INFO - ✅ AWS::Route53::HostedZone in ca-central-1: Query successful
2025-05-27 01:34:38,191 - INFO - Testing AWS::Route53::HealthCheck in us-east-1
2025-05-27 01:34:38,191 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Health Check",
              attributeFilters: [
                { key: "usagetype", value: "Health-Check-AWS" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:38,195 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:38,365 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 339
2025-05-27 01:34:38,366 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Mo","description":"First 50 Health Checks of AWS endpoints are free of charge","startUsageAmount":"0","endUsageAmount":"50"},{"USD":"0.5","unit":"Mo","description":"$0.50 per Health Check for additional Health Checks of AWS endpoints","startUsageAmount":"50","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:38,367 - INFO - ✅ AWS::Route53::HealthCheck in us-east-1: Query successful
2025-05-27 01:34:38,367 - INFO - Testing AWS::Route53::HealthCheck in ca-central-1
2025-05-27 01:34:38,367 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Health Check",
              attributeFilters: [
                { key: "usagetype", value: "Health-Check-AWS" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:38,370 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:38,549 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 339
2025-05-27 01:34:38,550 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Mo","description":"First 50 Health Checks of AWS endpoints are free of charge","startUsageAmount":"0","endUsageAmount":"50"},{"USD":"0.5","unit":"Mo","description":"$0.50 per Health Check for additional Health Checks of AWS endpoints","startUsageAmount":"50","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:38,551 - INFO - ✅ AWS::Route53::HealthCheck in ca-central-1: Query successful
2025-05-27 01:34:38,551 - INFO - Testing AWS::SNS::Topic in us-east-1
2025-05-27 01:34:38,551 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:38,554 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:38,721 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:34:38,721 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:38,722 - INFO - ✅ AWS::SNS::Topic in us-east-1: Query successful
2025-05-27 01:34:38,722 - INFO - Testing AWS::SNS::Topic in ca-central-1
2025-05-27 01:34:38,722 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:38,724 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:38,910 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:34:38,912 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:38,912 - INFO - ✅ AWS::SNS::Topic in ca-central-1: Query successful
2025-05-27 01:34:38,912 - INFO - Testing AWS::SQS::Queue in us-east-1
2025-05-27 01:34:38,912 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:38,916 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:39,094 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:34:39,095 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:39,095 - INFO - ✅ AWS::SQS::Queue in us-east-1: Query successful
2025-05-27 01:34:39,096 - INFO - Testing AWS::SQS::Queue in ca-central-1
2025-05-27 01:34:39,096 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:39,099 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:39,265 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:34:39,266 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:39,267 - INFO - ✅ AWS::SQS::Queue in ca-central-1: Query successful
2025-05-27 01:34:39,267 - INFO - Testing AWS::SecretsManager::Secret in us-east-1
2025-05-27 01:34:39,268 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSecretsManager",
              productFamily: "Secret",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:39,272 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:39,440 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 147
2025-05-27 01:34:39,442 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.4","unit":"Secrets","description":"$0.40 per Secret","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:39,443 - INFO - ✅ AWS::SecretsManager::Secret in us-east-1: Query successful
2025-05-27 01:34:39,443 - INFO - Testing AWS::SecretsManager::Secret in ca-central-1
2025-05-27 01:34:39,443 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSecretsManager",
              productFamily: "Secret",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:39,447 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:39,621 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 147
2025-05-27 01:34:39,622 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.4","unit":"Secrets","description":"$0.40 per Secret","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:39,623 - INFO - ✅ AWS::SecretsManager::Secret in ca-central-1: Query successful
2025-05-27 01:34:39,623 - INFO - Testing AWS::StepFunctions::StateMachine in us-east-1
2025-05-27 01:34:39,623 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonStates",
              productFamily: "AWS Step Functions",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/StateTransition/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:39,628 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:39,816 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:34:39,817 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000025","unit":"StateTransitions","description":"$0.000025 per state transition","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:39,818 - INFO - ✅ AWS::StepFunctions::StateMachine in us-east-1: Query successful
2025-05-27 01:34:39,818 - INFO - Testing AWS::StepFunctions::StateMachine in ca-central-1
2025-05-27 01:34:39,819 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonStates",
              productFamily: "AWS Step Functions",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/StateTransition/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:39,822 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:40,003 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:34:40,004 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000025","unit":"StateTransitions","description":"$0.000025 per state transition","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:40,005 - INFO - ✅ AWS::StepFunctions::StateMachine in ca-central-1: Query successful
2025-05-27 01:34:40,005 - INFO - Testing AWS::EC2::NatGateway in us-east-1
2025-05-27 01:34:40,005 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "NAT Gateway",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/NatGateway-Hours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:40,010 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:40,182 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 156
2025-05-27 01:34:40,183 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.045","unit":"Hrs","description":"$0.045 per NAT Gateway Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:40,184 - INFO - ✅ AWS::EC2::NatGateway in us-east-1: Query successful
2025-05-27 01:34:40,184 - INFO - Testing AWS::EC2::NatGateway in ca-central-1
2025-05-27 01:34:40,185 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "NAT Gateway",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/NatGateway-Hours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:40,189 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:40,368 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 154
2025-05-27 01:34:40,370 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per NAT Gateway Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:40,371 - INFO - ✅ AWS::EC2::NatGateway in ca-central-1: Query successful
2025-05-27 01:34:40,371 - INFO - Testing AWS::EC2::VPNConnection in us-east-1
2025-05-27 01:34:40,371 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "Cloud Connectivity",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:40,378 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:40,555 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 157
2025-05-27 01:34:40,556 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per VPN Connection-Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:40,556 - INFO - ✅ AWS::EC2::VPNConnection in us-east-1: Query successful
2025-05-27 01:34:40,557 - INFO - Testing AWS::EC2::VPNConnection in ca-central-1
2025-05-27 01:34:40,557 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "Cloud Connectivity",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:40,560 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:40,736 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 157
2025-05-27 01:34:40,737 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per VPN Connection-Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:40,737 - INFO - ✅ AWS::EC2::VPNConnection in ca-central-1: Query successful
2025-05-27 01:34:40,737 - INFO - Testing AWS::EC2::VPCEndpoint in us-east-1
2025-05-27 01:34:40,737 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "VpcEndpoint",
              region: "us-east-1",
              attributeFilters: [
                { key: "endpointType", value: "PrivateLink" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:40,740 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:40,913 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 689
2025-05-27 01:34:40,914 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.01","unit":"GB","description":"$0.01 per GB for upto 1 PB monthly data processed by VPC Endpoints","startUsageAmount":"0","endUsageAmount":"1048576"},{"USD":"0.006","unit":"GB","description":"$0.006 per GB for more than 1 PB and less than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"1048576","endUsageAmount":"5242880"},{"USD":"0.004","unit":"GB","description":"$0.004 per GB for more than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"5242880","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.01","unit":"Hrs","description":"$0.01 per VPC Endpoint Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:40,914 - INFO - ✅ AWS::EC2::VPCEndpoint in us-east-1: Query successful
2025-05-27 01:34:40,914 - INFO - Testing AWS::EC2::VPCEndpoint in ca-central-1
2025-05-27 01:34:40,914 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "VpcEndpoint",
              region: "ca-central-1",
              attributeFilters: [
                { key: "endpointType", value: "PrivateLink" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:40,915 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:41,105 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 691
2025-05-27 01:34:41,106 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.011","unit":"Hrs","description":"$0.011 per VPC Endpoint Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.01","unit":"GB","description":"$0.01 per GB for upto 1 PB monthly data processed by VPC Endpoints","startUsageAmount":"0","endUsageAmount":"1048576"},{"USD":"0.006","unit":"GB","description":"$0.006 per GB for more than 1 PB and less than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"1048576","endUsageAmount":"5242880"},{"USD":"0.004","unit":"GB","description":"$0.004 per GB for more than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"5242880","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:41,106 - INFO - ✅ AWS::EC2::VPCEndpoint in ca-central-1: Query successful
2025-05-27 01:34:41,106 - INFO - Testing AWS::WAF::WebACL in us-east-1
2025-05-27 01:34:41,107 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:41,109 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:41,286 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:34:41,287 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:41,287 - INFO - ✅ AWS::WAF::WebACL in us-east-1: Query successful
2025-05-27 01:34:41,287 - INFO - Testing AWS::WAF::WebACL in ca-central-1
2025-05-27 01:34:41,287 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:41,290 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:41,472 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:34:41,473 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:41,473 - INFO - ✅ AWS::WAF::WebACL in ca-central-1: Query successful
2025-05-27 01:34:41,473 - INFO - Testing AWS::WAFv2::WebACL in us-east-1
2025-05-27 01:34:41,473 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:41,476 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:41,654 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:34:41,655 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:41,655 - INFO - ✅ AWS::WAFv2::WebACL in us-east-1: Query successful
2025-05-27 01:34:41,655 - INFO - Testing AWS::WAFv2::WebACL in ca-central-1
2025-05-27 01:34:41,655 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:41,658 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:41,851 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:34:41,852 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:41,853 - INFO - ✅ AWS::WAFv2::WebACL in ca-central-1: Query successful
2025-05-27 01:34:41,853 - INFO - Testing AWS::AutoScaling::AutoScalingGroup in us-east-1
2025-05-27 01:34:41,853 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:41,856 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:42,031 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:34:42,032 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0104","unit":"Hrs","description":"$0.0104 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:42,033 - INFO - ✅ AWS::AutoScaling::AutoScalingGroup in us-east-1: Query successful
2025-05-27 01:34:42,033 - INFO - Testing AWS::AutoScaling::AutoScalingGroup in ca-central-1
2025-05-27 01:34:42,034 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:42,037 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:42,205 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:34:42,206 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0116","unit":"Hrs","description":"$0.0116 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:42,209 - INFO - ✅ AWS::AutoScaling::AutoScalingGroup in ca-central-1: Query successful
2025-05-27 01:34:42,209 - INFO - Testing AWS::ECR::Repository in us-east-1
2025-05-27 01:34:42,209 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECR",
              productFamily: "EC2 Container Registry",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:42,213 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:42,396 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 163
2025-05-27 01:34:42,397 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.10 per GB-month of data storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:42,398 - INFO - ✅ AWS::ECR::Repository in us-east-1: Query successful
2025-05-27 01:34:42,398 - INFO - Testing AWS::ECR::Repository in ca-central-1
2025-05-27 01:34:42,399 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECR",
              productFamily: "EC2 Container Registry",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:42,403 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:42,576 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 163
2025-05-27 01:34:42,576 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.10 per GB-month of data storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:42,577 - INFO - ✅ AWS::ECR::Repository in ca-central-1: Query successful
2025-05-27 01:34:42,577 - INFO - Testing AWS::EFS::FileSystem in us-east-1
2025-05-27 01:34:42,577 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEFS",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:42,579 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:42,754 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 176
2025-05-27 01:34:42,755 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.3","unit":"GB-Mo","description":"USD $0.30 per GB-Mo for Standard storage (USE1)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:42,756 - INFO - ✅ AWS::EFS::FileSystem in us-east-1: Query successful
2025-05-27 01:34:42,756 - INFO - Testing AWS::EFS::FileSystem in ca-central-1
2025-05-27 01:34:42,756 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEFS",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:42,761 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:42,943 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:34:42,945 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.33","unit":"GB-Mo","description":"USD $0.33 per GB-Mo for Standard storage (CAN1)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:42,945 - INFO - ✅ AWS::EFS::FileSystem in ca-central-1: Query successful
2025-05-27 01:34:42,946 - INFO - Testing AWS::CodeBuild::Project in us-east-1
2025-05-27 01:34:42,946 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "CodeBuild",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Linux:g1.small/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:42,950 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:43,118 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 587
2025-05-27 01:34:43,119 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Docker-Sec:Linux:g1.small in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.005","unit":"minutes","description":"AWS CodeBuild - Build minutes on build.general1.small - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Sandbox-Sec:Linux:g1.small in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:43,119 - INFO - ✅ AWS::CodeBuild::Project in us-east-1: Query successful
2025-05-27 01:34:43,119 - INFO - Testing AWS::CodeBuild::Project in ca-central-1
2025-05-27 01:34:43,120 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "CodeBuild",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Linux:g1.small/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:43,123 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:43,302 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 566
2025-05-27 01:34:43,303 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.005","unit":"minutes","description":"AWS CodeBuild - Build minutes on build.general1.small - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Docker-Sec:Linux:g1.small in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Sandbox-Sec:Linux:g1.small in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:43,304 - INFO - ✅ AWS::CodeBuild::Project in ca-central-1: Query successful
2025-05-27 01:34:43,304 - INFO - Testing AWS::Kinesis::Stream in us-east-1
2025-05-27 01:34:43,305 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesis",
              productFamily: "Kinesis Streams",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ShardHour/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:43,309 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:43,488 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 308
2025-05-27 01:34:43,490 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.02","unit":"ShardHour","description":"$0.020 per extended shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.015","unit":"ShardHour","description":"$0.015 per provisioned shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:43,491 - INFO - ✅ AWS::Kinesis::Stream in us-east-1: Query successful
2025-05-27 01:34:43,491 - INFO - Testing AWS::Kinesis::Stream in ca-central-1
2025-05-27 01:34:43,492 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesis",
              productFamily: "Kinesis Streams",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ShardHour/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:43,496 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:43,675 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 311
2025-05-27 01:34:43,676 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0165","unit":"ShardHour","description":"$0.0165 per provisioned shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.022","unit":"ShardHour","description":"$0.022 per extended shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:43,677 - INFO - ✅ AWS::Kinesis::Stream in ca-central-1: Query successful
2025-05-27 01:34:43,677 - INFO - Testing AWS::CloudTrail::Trail in us-east-1
2025-05-27 01:34:43,677 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCloudTrail",
              productFamily: "Management Tools - AWS CloudTrail Data Events Recorded",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:43,681 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:43,859 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 198
2025-05-27 01:34:43,861 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"Events","description":"0.000001 per data event recorded in US East (N.Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:43,861 - INFO - ✅ AWS::CloudTrail::Trail in us-east-1: Query successful
2025-05-27 01:34:43,861 - INFO - Testing AWS::CloudTrail::Trail in ca-central-1
2025-05-27 01:34:43,862 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCloudTrail",
              productFamily: "Management Tools - AWS CloudTrail Data Events Recorded",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:43,866 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:44,048 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:34:44,048 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"Events","description":"0.000001 per data event recorded in Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:44,049 - INFO - ✅ AWS::CloudTrail::Trail in ca-central-1: Query successful
2025-05-27 01:34:44,049 - INFO - Testing AWS::Backup::BackupVault in us-east-1
2025-05-27 01:34:44,049 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSBackup",
              productFamily: "AWS Backup Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/WarmStorage-ByteHrs-EFS$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:44,052 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:44,232 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 183
2025-05-27 01:34:44,233 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"GB-month","description":"$0.05 per GB-month for warm backup storage for EFS","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:44,233 - INFO - ✅ AWS::Backup::BackupVault in us-east-1: Query successful
2025-05-27 01:34:44,234 - INFO - Testing AWS::Backup::BackupVault in ca-central-1
2025-05-27 01:34:44,234 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSBackup",
              productFamily: "AWS Backup Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/WarmStorage-ByteHrs-EFS$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:44,236 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:44,405 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 185
2025-05-27 01:34:44,406 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.055","unit":"GB-month","description":"$0.055 per GB-month for warm backup storage for EFS","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:44,406 - INFO - ✅ AWS::Backup::BackupVault in ca-central-1: Query successful
2025-05-27 01:34:44,406 - INFO - Testing AWS::Transfer::Server in us-east-1
2025-05-27 01:34:44,406 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSTransfer",
              productFamily: "AWS Transfer Family",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-ProtocolHours$/" },
                { key: "operation", value_regex: "/^FTP:S3$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:44,409 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:44,579 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 176
2025-05-27 01:34:44,579 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.3","unit":"Hourly","description":"$0.3 per Hour for FTP in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:44,580 - INFO - ✅ AWS::Transfer::Server in us-east-1: Query successful
2025-05-27 01:34:44,580 - INFO - Testing AWS::Transfer::Server in ca-central-1
2025-05-27 01:34:44,580 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSTransfer",
              productFamily: "AWS Transfer Family",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-ProtocolHours$/" },
                { key: "operation", value_regex: "/^FTP:S3$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:44,583 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:44,756 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 171
2025-05-27 01:34:44,758 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.3","unit":"Hourly","description":"$0.3 per Hour for FTP in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:44,758 - INFO - ✅ AWS::Transfer::Server in ca-central-1: Query successful
2025-05-27 01:34:44,758 - INFO - Testing AWS::SSM::Parameter in us-east-1
2025-05-27 01:34:44,758 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/PS-Advanced-Param-Tier1/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:44,761 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:44,934 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 195
2025-05-27 01:34:44,934 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00007","unit":"Hour","description":"$0.05 per Advanced Parameter per Month in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:44,935 - INFO - ✅ AWS::SSM::Parameter in us-east-1: Query successful
2025-05-27 01:34:44,935 - INFO - Testing AWS::SSM::Parameter in ca-central-1
2025-05-27 01:34:44,935 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/PS-Advanced-Param-Tier1/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:44,937 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:45,109 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 190
2025-05-27 01:34:45,110 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00007","unit":"Hour","description":"$0.05 per Advanced Parameter per Month in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:45,110 - INFO - ✅ AWS::SSM::Parameter in ca-central-1: Query successful
2025-05-27 01:34:45,110 - INFO - Testing AWS::SSM::Activation in us-east-1
2025-05-27 01:34:45,110 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/MI-AdvInstances-Hrs/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:45,111 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:45,264 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:34:45,264 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00695","unit":"Hrs","description":"$0.00695 per Advanced Instance Hr in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:45,265 - INFO - ✅ AWS::SSM::Activation in us-east-1: Query successful
2025-05-27 01:34:45,265 - INFO - Testing AWS::SSM::Activation in ca-central-1
2025-05-27 01:34:45,265 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/MI-AdvInstances-Hrs/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:45,268 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:45,436 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 184
2025-05-27 01:34:45,437 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00695","unit":"Hrs","description":"$0.00695 per Advanced Instance Hr in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:45,438 - INFO - ✅ AWS::SSM::Activation in ca-central-1: Query successful
2025-05-27 01:34:45,438 - INFO - Testing AWS::CloudFront::Distribution in us-east-1
2025-05-27 01:34:45,439 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:45,439 - INFO - Testing AWS::CloudFront::Distribution in ca-central-1
2025-05-27 01:34:45,439 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:45,439 - INFO - Testing AWS::CloudFront::Function in us-east-1
2025-05-27 01:34:45,439 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:45,439 - INFO - Testing AWS::CloudFront::Function in ca-central-1
2025-05-27 01:34:45,439 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:45,440 - INFO - Testing AWS::DocDB::DBCluster in us-east-1
2025-05-27 01:34:45,440 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Storage Snapshot",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/(^|-)BackupUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:45,445 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:45,617 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 227
2025-05-27 01:34:45,618 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.021","unit":"GB-Mo","description":"$0.021 per additional GB-month of backup storage exceeding free allocation for Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:45,618 - INFO - ✅ AWS::DocDB::DBCluster in us-east-1: Query successful
2025-05-27 01:34:45,618 - INFO - Testing AWS::DocDB::DBCluster in ca-central-1
2025-05-27 01:34:45,618 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Storage Snapshot",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/(^|-)BackupUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:45,621 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:45,789 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 227
2025-05-27 01:34:45,791 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.023","unit":"GB-Mo","description":"$0.023 per additional GB-month of backup storage exceeding free allocation for Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:45,792 - INFO - ✅ AWS::DocDB::DBCluster in ca-central-1: Query successful
2025-05-27 01:34:45,792 - INFO - Testing AWS::DocDB::DBInstance in us-east-1
2025-05-27 01:34:45,793 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Database Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "volumeType", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:45,797 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:45,963 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 210
2025-05-27 01:34:45,963 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.078","unit":"Hrs","description":"$0.078 per db.t3.medium instance hour (or partial hour) running Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:45,963 - INFO - ✅ AWS::DocDB::DBInstance in us-east-1: Query successful
2025-05-27 01:34:45,963 - INFO - Testing AWS::DocDB::DBInstance in ca-central-1
2025-05-27 01:34:45,963 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Database Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "volumeType", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:45,965 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:46,139 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 210
2025-05-27 01:34:46,140 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.086","unit":"Hrs","description":"$0.086 per db.t3.medium instance hour (or partial hour) running Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:46,141 - INFO - ✅ AWS::DocDB::DBInstance in ca-central-1: Query successful
2025-05-27 01:34:46,141 - INFO - Testing AWS::Neptune::DBCluster in us-east-1
2025-05-27 01:34:46,141 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:46,142 - INFO - Testing AWS::Neptune::DBCluster in ca-central-1
2025-05-27 01:34:46,142 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:46,142 - INFO - Testing AWS::Neptune::DBInstance in us-east-1
2025-05-27 01:34:46,143 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:46,143 - INFO - Testing AWS::Neptune::DBInstance in ca-central-1
2025-05-27 01:34:46,143 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:46,143 - INFO - Testing AWS::Elasticsearch::Domain in us-east-1
2025-05-27 01:34:46,143 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonES",
              productFamily: "Amazon OpenSearch Service Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ESInstance/" },
                { key: "instanceType", value: "m4.large.search" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:46,147 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:46,325 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 187
2025-05-27 01:34:46,327 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.151","unit":"Hrs","description":"$0.151 per m4.large.search instance hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:46,327 - INFO - ✅ AWS::Elasticsearch::Domain in us-east-1: Query successful
2025-05-27 01:34:46,328 - INFO - Testing AWS::Elasticsearch::Domain in ca-central-1
2025-05-27 01:34:46,328 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonES",
              productFamily: "Amazon OpenSearch Service Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ESInstance/" },
                { key: "instanceType", value: "m4.large.search" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:46,331 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:46,505 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:34:46,506 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.176","unit":"Hrs","description":"$0.176 per m4.large.search instance hour (or partial hour) - CAN1","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:46,506 - INFO - ✅ AWS::Elasticsearch::Domain in ca-central-1: Query successful
2025-05-27 01:34:46,506 - INFO - Testing AWS::Lightsail::Instance in us-east-1
2025-05-27 01:34:46,506 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonLightsail",
              productFamily: "Lightsail Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/-BundleUsage:0.5GB$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:46,508 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:46,674 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:34:46,676 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00672","unit":"Hrs","description":"$0.00672 / Hour of 0.5GB bundle Instance including public IPv4 address","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:46,677 - INFO - ✅ AWS::Lightsail::Instance in us-east-1: Query successful
2025-05-27 01:34:46,677 - INFO - Testing AWS::Lightsail::Instance in ca-central-1
2025-05-27 01:34:46,677 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonLightsail",
              productFamily: "Lightsail Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/-BundleUsage:0.5GB$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:46,682 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:46,852 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:34:46,855 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00672","unit":"Hrs","description":"$0.00672 / Hour of 0.5GB bundle Instance including public IPv4 address","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:46,855 - INFO - ✅ AWS::Lightsail::Instance in ca-central-1: Query successful
2025-05-27 01:34:46,855 - INFO - Testing AWS::MQ::Broker in us-east-1
2025-05-27 01:34:46,855 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMQ",
              productFamily: "Broker Instances",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/mq.t3.micro/" },
                { key: "brokerEngine", value_regex: "/ActiveMQ/" },
                { key: "deploymentOption", value_regex: "/Single-AZ/" },
                { key: "operation", value_regex: "/CreateBroker/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:46,859 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:47,032 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 223
2025-05-27 01:34:47,033 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.02704","unit":"Hrs","description":"single-instance mq.t3.micro hour (or partial hour) running ActiveMQ in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:47,033 - INFO - ✅ AWS::MQ::Broker in us-east-1: Query successful
2025-05-27 01:34:47,034 - INFO - Testing AWS::MQ::Broker in ca-central-1
2025-05-27 01:34:47,034 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMQ",
              productFamily: "Broker Instances",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/mq.t3.micro/" },
                { key: "brokerEngine", value_regex: "/ActiveMQ/" },
                { key: "deploymentOption", value_regex: "/Single-AZ/" },
                { key: "operation", value_regex: "/CreateBroker/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:47,038 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:47,218 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 218
2025-05-27 01:34:47,219 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.03016","unit":"Hrs","description":"single-instance mq.t3.micro hour (or partial hour) running ActiveMQ in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:47,220 - INFO - ✅ AWS::MQ::Broker in ca-central-1: Query successful
2025-05-27 01:34:47,220 - INFO - Testing AWS::MSK::Cluster in us-east-1
2025-05-27 01:34:47,220 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMSK",
              productFamily: "Managed Streaming for Apache Kafka (MSK)",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/kafka.t3.small/i" },
                { key: "locationType", value: "AWS Region" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:47,223 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:47,384 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 198
2025-05-27 01:34:47,385 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0456","unit":"hours","description":"USD 0.0456 per Kafka.t3.small broker hour in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:47,386 - INFO - ✅ AWS::MSK::Cluster in us-east-1: Query successful
2025-05-27 01:34:47,386 - INFO - Testing AWS::MSK::Cluster in ca-central-1
2025-05-27 01:34:47,386 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMSK",
              productFamily: "Managed Streaming for Apache Kafka (MSK)",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/kafka.t3.small/i" },
                { key: "locationType", value: "AWS Region" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:47,390 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:47,566 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 193
2025-05-27 01:34:47,566 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0508","unit":"hours","description":"USD 0.0508 per Kafka.t3.small broker hour in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:47,566 - INFO - ✅ AWS::MSK::Cluster in ca-central-1: Query successful
2025-05-27 01:34:47,567 - INFO - Testing AWS::Config::ConfigRule in us-east-1
2025-05-27 01:34:47,567 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:47,569 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:47,729 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 220
2025-05-27 01:34:47,730 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"ConfigurationItemRecorded","description":"$0.003 per Configuration Item recorded in US East (N.Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:47,730 - INFO - ✅ AWS::Config::ConfigRule in us-east-1: Query successful
2025-05-27 01:34:47,730 - INFO - Testing AWS::Config::ConfigRule in ca-central-1
2025-05-27 01:34:47,730 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:47,733 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:47,903 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 222
2025-05-27 01:34:47,904 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"CAN1-ConfigurationItemRecorded","description":"$0.003 per  Configuration Item recorded in Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:47,904 - INFO - ✅ AWS::Config::ConfigRule in ca-central-1: Query successful
2025-05-27 01:34:47,904 - INFO - Testing AWS::Config::ConfigurationRecorder in us-east-1
2025-05-27 01:34:47,905 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:47,907 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:48,074 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 220
2025-05-27 01:34:48,076 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"ConfigurationItemRecorded","description":"$0.003 per Configuration Item recorded in US East (N.Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:48,077 - INFO - ✅ AWS::Config::ConfigurationRecorder in us-east-1: Query successful
2025-05-27 01:34:48,078 - INFO - Testing AWS::Config::ConfigurationRecorder in ca-central-1
2025-05-27 01:34:48,078 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:48,082 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:48,246 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 222
2025-05-27 01:34:48,247 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"CAN1-ConfigurationItemRecorded","description":"$0.003 per  Configuration Item recorded in Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:48,247 - INFO - ✅ AWS::Config::ConfigurationRecorder in ca-central-1: Query successful
2025-05-27 01:34:48,247 - INFO - Testing AWS::DMS::ReplicationInstance in us-east-1
2025-05-27 01:34:48,247 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:48,247 - INFO - Testing AWS::DMS::ReplicationInstance in ca-central-1
2025-05-27 01:34:48,247 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:48,248 - INFO - Testing AWS::ACMPCA::CertificateAuthority in us-east-1
2025-05-27 01:34:48,248 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSACMPCA",
              productFamily: "Certificate Authority",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "PrivateCA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:48,251 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:48,430 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:48,431 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:48,431 - ERROR - ❌ AWS::ACMPCA::CertificateAuthority in us-east-1: No products found in response
2025-05-27 01:34:48,431 - INFO - Testing AWS::ACMPCA::CertificateAuthority in ca-central-1
2025-05-27 01:34:48,431 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSACMPCA",
              productFamily: "Certificate Authority",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "PrivateCA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:48,434 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:48,608 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:48,609 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:48,609 - ERROR - ❌ AWS::ACMPCA::CertificateAuthority in ca-central-1: No products found in response
2025-05-27 01:34:48,609 - INFO - Testing AWS::ApiGateway::Stage in us-east-1
2025-05-27 01:34:48,609 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "USE1-ApiGatewayRequest" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:48,612 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:48,788 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1475
2025-05-27 01:34:48,789 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"Requests","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"Requests","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"Requests","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"USE1-AmazonApiGateway-Request","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"USE1-AmazonApiGateway-Request","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"USE1-AmazonApiGateway-Request","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"USE1-AmazonApiGateway-Request","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:48,789 - INFO - ✅ AWS::ApiGateway::Stage in us-east-1: Query successful
2025-05-27 01:34:48,789 - INFO - Testing AWS::ApiGateway::Stage in ca-central-1
2025-05-27 01:34:48,789 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "CAN1-ApiGatewayRequest" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:48,792 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:48,955 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1473
2025-05-27 01:34:48,956 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"CAN1-AmazonApiGatewayRequest","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"CAN1-AmazonApiGatewayRequest","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"Requests","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"Requests","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"Requests","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:48,956 - INFO - ✅ AWS::ApiGateway::Stage in ca-central-1: Query successful
2025-05-27 01:34:48,956 - INFO - Testing AWS::ApplicationAutoScaling::ScalableTarget in us-east-1
2025-05-27 01:34:48,956 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSApplicationAutoScaling",
              productFamily: "Scaling",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: ""}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:48,958 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:49,138 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:49,139 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:49,139 - ERROR - ❌ AWS::ApplicationAutoScaling::ScalableTarget in us-east-1: No products found in response
2025-05-27 01:34:49,139 - INFO - Testing AWS::ApplicationAutoScaling::ScalableTarget in ca-central-1
2025-05-27 01:34:49,139 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSApplicationAutoScaling",
              productFamily: "Scaling",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: ""}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:49,142 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:49,301 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:49,303 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:49,303 - ERROR - ❌ AWS::ApplicationAutoScaling::ScalableTarget in ca-central-1: No products found in response
2025-05-27 01:34:49,303 - INFO - Testing AWS::CertificateManager::Certificate in us-east-1
2025-05-27 01:34:49,303 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCertificateManager",
              productFamily: "AWS Certificate Manager",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: ""}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:49,308 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:49,485 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 122
2025-05-27 01:34:49,485 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]}]}}

2025-05-27 01:34:49,485 - ERROR - ❌ AWS::CertificateManager::Certificate in us-east-1: No prices found in products
2025-05-27 01:34:49,486 - INFO - Testing AWS::CertificateManager::Certificate in ca-central-1
2025-05-27 01:34:49,486 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCertificateManager",
              productFamily: "AWS Certificate Manager",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: ""}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:49,488 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:49,971 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 122
2025-05-27 01:34:49,972 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]}]}}

2025-05-27 01:34:49,973 - ERROR - ❌ AWS::CertificateManager::Certificate in ca-central-1: No prices found in products
2025-05-27 01:34:49,974 - INFO - Testing AWS::CloudFormation::Stack in us-east-1
2025-05-27 01:34:49,974 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCloudFormation",
              productFamily: "Stack",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: ""}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:49,979 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:50,152 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:50,153 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:50,154 - ERROR - ❌ AWS::CloudFormation::Stack in us-east-1: No products found in response
2025-05-27 01:34:50,154 - INFO - Testing AWS::CloudFormation::Stack in ca-central-1
2025-05-27 01:34:50,154 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCloudFormation",
              productFamily: "Stack",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: ""}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:50,158 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:50,320 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:50,321 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:50,322 - ERROR - ❌ AWS::CloudFormation::Stack in ca-central-1: No products found in response
2025-05-27 01:34:50,322 - INFO - Testing AWS::CloudFormation::StackSet in us-east-1
2025-05-27 01:34:50,322 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCloudFormation",
              productFamily: "StackSet",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: ""}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:50,327 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:50,496 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:50,497 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:50,498 - ERROR - ❌ AWS::CloudFormation::StackSet in us-east-1: No products found in response
2025-05-27 01:34:50,499 - INFO - Testing AWS::CloudFormation::StackSet in ca-central-1
2025-05-27 01:34:50,499 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCloudFormation",
              productFamily: "StackSet",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: ""}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:50,503 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:50,686 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:50,687 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:50,688 - ERROR - ❌ AWS::CloudFormation::StackSet in ca-central-1: No products found in response
2025-05-27 01:34:50,688 - INFO - Testing AWS::DirectConnect::Connection in us-east-1
2025-05-27 01:34:50,689 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Direct Connect",
              region: "us-east-1",
              attributeFilters: [
                { key: "capacity", value: "1G" },
                { key: "usagetype", value_regex: "/us-east-1/" },
                { key: "connectionType", value_regex: "/dedicated/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:50,694 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:50,872 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:50,872 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:50,873 - ERROR - ❌ AWS::DirectConnect::Connection in us-east-1: No products found in response
2025-05-27 01:34:50,873 - INFO - Testing AWS::DirectConnect::Connection in ca-central-1
2025-05-27 01:34:50,873 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Direct Connect",
              region: "ca-central-1",
              attributeFilters: [
                { key: "capacity", value: "1G" },
                { key: "usagetype", value_regex: "/us-east-1/" },
                { key: "connectionType", value_regex: "/dedicated/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:50,875 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:51,061 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:51,062 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:51,062 - ERROR - ❌ AWS::DirectConnect::Connection in ca-central-1: No products found in response
2025-05-27 01:34:51,062 - INFO - Testing AWS::DirectConnect::VirtualInterface in us-east-1
2025-05-27 01:34:51,062 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Virtual Interface",
              region: "us-east-1",
              attributeFilters: [
                { key: "operation", value: "VirtualInterface" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:51,065 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:51,231 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:51,232 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:51,233 - ERROR - ❌ AWS::DirectConnect::VirtualInterface in us-east-1: No products found in response
2025-05-27 01:34:51,233 - INFO - Testing AWS::DirectConnect::VirtualInterface in ca-central-1
2025-05-27 01:34:51,233 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Virtual Interface",
              region: "ca-central-1",
              attributeFilters: [
                { key: "operation", value: "VirtualInterface" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:51,236 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:51,403 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:51,403 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:51,404 - ERROR - ❌ AWS::DirectConnect::VirtualInterface in ca-central-1: No products found in response
2025-05-27 01:34:51,404 - INFO - Testing AWS::DirectoryService::MicrosoftAD in us-east-1
2025-05-27 01:34:51,404 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "us-east-1",
              attributeFilters: [
                { key: "directoryType", value: "Microsoft AD" },
                { key: "directorySize", value: "Standard" },
                { key: "location", value: "US East (N. Virginia)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:51,406 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:51,579 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 234
2025-05-27 01:34:51,580 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.06","unit":"Hrs","description":"$0.060 per hour for Microsoft AD (Standard Edition) domain controllers in the US East (N. Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:51,581 - INFO - ✅ AWS::DirectoryService::MicrosoftAD in us-east-1: Query successful
2025-05-27 01:34:51,581 - INFO - Testing AWS::DirectoryService::MicrosoftAD in ca-central-1
2025-05-27 01:34:51,581 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "ca-central-1",
              attributeFilters: [
                { key: "directoryType", value: "Microsoft AD" },
                { key: "directorySize", value: "Standard" },
                { key: "location", value: "Canada (Central)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:51,584 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:51,762 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 230
2025-05-27 01:34:51,763 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.064","unit":"Hrs","description":"$0.064 per hour for Microsoft AD (Standard Edition) domain controllers in the Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:51,763 - INFO - ✅ AWS::DirectoryService::MicrosoftAD in ca-central-1: Query successful
2025-05-27 01:34:51,763 - INFO - Testing AWS::DirectoryService::SimpleAD in us-east-1
2025-05-27 01:34:51,763 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "us-east-1",
              attributeFilters: [
                { key: "directoryType", value_regex: "/Simple AD/i" },
                { key: "directorySize", value: "Small" },
                { key: "location", value: "US East (N. Virginia)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:51,766 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:51,945 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 206
2025-05-27 01:34:51,945 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per hour for a small directory in the US East (Northern Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:51,945 - INFO - ✅ AWS::DirectoryService::SimpleAD in us-east-1: Query successful
2025-05-27 01:34:51,945 - INFO - Testing AWS::DirectoryService::SimpleAD in ca-central-1
2025-05-27 01:34:51,946 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "ca-central-1",
              attributeFilters: [
                { key: "directoryType", value_regex: "/Simple AD/i" },
                { key: "directorySize", value: "Small" },
                { key: "location", value: "Canada (Central)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:51,948 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:52,108 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:52,109 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:52,109 - ERROR - ❌ AWS::DirectoryService::SimpleAD in ca-central-1: No products found in response
2025-05-27 01:34:52,109 - INFO - Testing AWS::EC2::ClientVpnEndpoint in us-east-1
2025-05-27 01:34:52,109 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:52,109 - INFO - Testing AWS::EC2::ClientVpnEndpoint in ca-central-1
2025-05-27 01:34:52,109 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:52,109 - INFO - Testing AWS::EC2::DedicatedHost in us-east-1
2025-05-27 01:34:52,109 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Dedicated Host",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/HostUsage:m5$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:52,112 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:52,282 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 186
2025-05-27 01:34:52,283 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5.069","unit":"Hrs","description":"$5.069 per On Demand M5 Dedicated Host Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]}]}}

2025-05-27 01:34:52,283 - INFO - ✅ AWS::EC2::DedicatedHost in us-east-1: Query successful
2025-05-27 01:34:52,283 - INFO - Testing AWS::EC2::DedicatedHost in ca-central-1
2025-05-27 01:34:52,283 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Dedicated Host",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/HostUsage:m5$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:52,286 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:52,451 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 184
2025-05-27 01:34:52,452 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5.65","unit":"Hrs","description":"$5.65 per On Demand M5 Dedicated Host Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]}]}}

2025-05-27 01:34:52,452 - INFO - ✅ AWS::EC2::DedicatedHost in ca-central-1: Query successful
2025-05-27 01:34:52,452 - INFO - Testing AWS::EC2::SpotFleet in us-east-1
2025-05-27 01:34:52,452 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "m5.large" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "spot"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:52,454 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:52,618 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 662
2025-05-27 01:34:52,619 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[{"USD":"0.0434","unit":"Hrs","description":"","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]},{"prices":[]}]}}

2025-05-27 01:34:52,620 - INFO - ✅ AWS::EC2::SpotFleet in us-east-1: Query successful
2025-05-27 01:34:52,620 - INFO - Testing AWS::EC2::SpotFleet in ca-central-1
2025-05-27 01:34:52,621 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "m5.large" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "spot"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:52,625 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:52,805 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 662
2025-05-27 01:34:52,806 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[{"USD":"0.0481","unit":"Hrs","description":"","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]},{"prices":[]}]}}

2025-05-27 01:34:52,806 - INFO - ✅ AWS::EC2::SpotFleet in ca-central-1: Query successful
2025-05-27 01:34:52,806 - INFO - Testing AWS::EC2::TransitGateway in us-east-1
2025-05-27 01:34:52,806 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:52,806 - INFO - Testing AWS::EC2::TransitGateway in ca-central-1
2025-05-27 01:34:52,807 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:52,807 - INFO - Testing AWS::EC2::TransitGatewayVpcAttachment in us-east-1
2025-05-27 01:34:52,807 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:52,807 - INFO - Testing AWS::EC2::TransitGatewayVpcAttachment in ca-central-1
2025-05-27 01:34:52,807 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:52,807 - INFO - Testing AWS::ECS::Service in us-east-1
2025-05-27 01:34:52,807 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECS",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:52,810 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:52,986 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 174
2025-05-27 01:34:52,987 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04048","unit":"hours","description":"AWS Fargate - vCPU - US East (N.Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:52,987 - INFO - ✅ AWS::ECS::Service in us-east-1: Query successful
2025-05-27 01:34:52,987 - INFO - Testing AWS::ECS::Service in ca-central-1
2025-05-27 01:34:52,988 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECS",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:52,991 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:53,163 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 171
2025-05-27 01:34:53,164 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04456","unit":"hours","description":"AWS Fargate - vCPU  - Central (Canada)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:53,164 - INFO - ✅ AWS::ECS::Service in ca-central-1: Query successful
2025-05-27 01:34:53,164 - INFO - Testing AWS::EKS::FargateProfile in us-east-1
2025-05-27 01:34:53,164 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:53,166 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:53,339 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:34:53,340 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04048","unit":"hours","description":"AWS Fargate - vCPU - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:53,340 - INFO - ✅ AWS::EKS::FargateProfile in us-east-1: Query successful
2025-05-27 01:34:53,340 - INFO - Testing AWS::EKS::FargateProfile in ca-central-1
2025-05-27 01:34:53,340 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:53,343 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:53,492 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 170
2025-05-27 01:34:53,493 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04456","unit":"hours","description":"AWS Fargate - vCPU - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:53,494 - INFO - ✅ AWS::EKS::FargateProfile in ca-central-1: Query successful
2025-05-27 01:34:53,494 - INFO - Testing AWS::ElasticBeanstalk::Environment in us-east-1
2025-05-27 01:34:53,494 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSElasticBeanstalk",
              productFamily: "Environment",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: ""}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:53,498 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:53,687 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:53,688 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:53,688 - ERROR - ❌ AWS::ElasticBeanstalk::Environment in us-east-1: No products found in response
2025-05-27 01:34:53,688 - INFO - Testing AWS::ElasticBeanstalk::Environment in ca-central-1
2025-05-27 01:34:53,688 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSElasticBeanstalk",
              productFamily: "Environment",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: ""}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:53,690 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:53,848 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:34:53,849 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:34:53,849 - ERROR - ❌ AWS::ElasticBeanstalk::Environment in ca-central-1: No products found in response
2025-05-27 01:34:53,850 - INFO - Testing AWS::Events::EventBus in us-east-1
2025-05-27 01:34:53,850 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSEvents",
              productFamily: "EventBridge",
              region: "us-east-1",
              attributeFilters: [
                { key: "eventType", value: "Custom Event" },
                { key: "usagetype", value_regex: "/Event-64K-Chunks/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:53,854 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:54,028 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 216
2025-05-27 01:34:54,029 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"64K-Chunks","description":"$1.00 per million EventBridge custom events received in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:54,030 - INFO - ✅ AWS::Events::EventBus in us-east-1: Query successful
2025-05-27 01:34:54,030 - INFO - Testing AWS::Events::EventBus in ca-central-1
2025-05-27 01:34:54,030 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSEvents",
              productFamily: "EventBridge",
              region: "ca-central-1",
              attributeFilters: [
                { key: "eventType", value: "Custom Event" },
                { key: "usagetype", value_regex: "/Event-64K-Chunks/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:54,035 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:54,203 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 211
2025-05-27 01:34:54,204 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"64K-Chunks","description":"$1.00 per million EventBridge custom events received in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:54,205 - INFO - ✅ AWS::Events::EventBus in ca-central-1: Query successful
2025-05-27 01:34:54,205 - INFO - Testing AWS::FSx::FileSystem in us-east-1
2025-05-27 01:34:54,205 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonFSx",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "deploymentOption", value: "Single-AZ" },
                { key: "fileSystemType", value: "Windows" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:54,209 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:54,383 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 609
2025-05-27 01:34:54,383 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.13","unit":"GB-Mo","description":"$0.130 per GB-Month of provisioned Windows File Server storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.05","unit":"GB-Mo","description":"$0.05 per GB-Month of Windows File Server backup storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.013","unit":"GB-Mo","description":"$0.013 per GB-Month of provisioned Windows File Server Single-AZ HDD storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:54,384 - INFO - ✅ AWS::FSx::FileSystem in us-east-1: Query successful
2025-05-27 01:34:54,384 - INFO - Testing AWS::FSx::FileSystem in ca-central-1
2025-05-27 01:34:54,384 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonFSx",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "deploymentOption", value: "Single-AZ" },
                { key: "fileSystemType", value: "Windows" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:54,386 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:54,562 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 597
2025-05-27 01:34:54,562 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.014","unit":"GB-Mo","description":"$0.014 per GB-Month of provisioned Windows File Server Single-AZ HDD storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.143","unit":"GB-Mo","description":"$0.143 per GB-Month of provisioned Windows File Server storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.055","unit":"GB-Mo","description":"$0.055 per GB-Month of Windows File Server backup storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:54,563 - INFO - ✅ AWS::FSx::FileSystem in ca-central-1: Query successful
2025-05-27 01:34:54,563 - INFO - Testing AWS::GlobalAccelerator::Accelerator in us-east-1
2025-05-27 01:34:54,563 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:54,563 - INFO - Testing AWS::GlobalAccelerator::Accelerator in ca-central-1
2025-05-27 01:34:54,563 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:54,563 - INFO - Testing AWS::GlobalAccelerator::EndpointGroup in us-east-1
2025-05-27 01:34:54,563 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:54,563 - INFO - Testing AWS::GlobalAccelerator::EndpointGroup in ca-central-1
2025-05-27 01:34:54,563 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:54,563 - INFO - Testing AWS::Glue::Crawler in us-east-1
2025-05-27 01:34:54,563 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "us-east-1",
              attributeFilters: [
                { key: "operation", value_regex: "/^crawlerrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:54,566 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:54,726 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:34:54,727 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue crawler","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:54,728 - INFO - ✅ AWS::Glue::Crawler in us-east-1: Query successful
2025-05-27 01:34:54,728 - INFO - Testing AWS::Glue::Crawler in ca-central-1
2025-05-27 01:34:54,728 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "ca-central-1",
              attributeFilters: [
                { key: "operation", value_regex: "/^crawlerrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:54,732 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:54,901 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:34:54,901 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue crawler","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:54,902 - INFO - ✅ AWS::Glue::Crawler in ca-central-1: Query successful
2025-05-27 01:34:54,902 - INFO - Testing AWS::Glue::Database in us-east-1
2025-05-27 01:34:54,902 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value_regex: "/^data catalog storage$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:54,904 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:55,074 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 203
2025-05-27 01:34:55,076 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00001","unit":"Obj-Month","description":"$1 per 100,000 objects per month for AWS Glue Data Catalog storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:55,077 - INFO - ✅ AWS::Glue::Database in us-east-1: Query successful
2025-05-27 01:34:55,077 - INFO - Testing AWS::Glue::Database in ca-central-1
2025-05-27 01:34:55,077 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value_regex: "/^data catalog storage$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:55,082 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:55,270 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 203
2025-05-27 01:34:55,270 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00001","unit":"Obj-Month","description":"$1 per 100,000 objects per month for AWS Glue Data Catalog storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:55,270 - INFO - ✅ AWS::Glue::Database in ca-central-1: Query successful
2025-05-27 01:34:55,271 - INFO - Testing AWS::Glue::Job in us-east-1
2025-05-27 01:34:55,271 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value: "ETL Job run" },
                { key: "operation", value_regex: "/^jobrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:55,273 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:55,445 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:34:55,446 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue ETL job","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:55,446 - INFO - ✅ AWS::Glue::Job in us-east-1: Query successful
2025-05-27 01:34:55,446 - INFO - Testing AWS::Glue::Job in ca-central-1
2025-05-27 01:34:55,446 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value: "ETL Job run" },
                { key: "operation", value_regex: "/^jobrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:55,449 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:55,637 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:34:55,638 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue ETL job","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:55,638 - INFO - ✅ AWS::Glue::Job in ca-central-1: Query successful
2025-05-27 01:34:55,638 - INFO - Testing AWS::KinesisAnalytics::Application in us-east-1
2025-05-27 01:34:55,638 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisAnalytics",
              productFamily: "Kinesis Analytics",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/KPU-Hour-Java/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:55,641 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:55,820 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:34:55,820 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.11","unit":"KPU-Hour","description":"$0.11 per Kinesis Processing Unit-hour for Apache Flink applications","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:55,821 - INFO - ✅ AWS::KinesisAnalytics::Application in us-east-1: Query successful
2025-05-27 01:34:55,821 - INFO - Testing AWS::KinesisAnalytics::Application in ca-central-1
2025-05-27 01:34:55,821 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisAnalytics",
              productFamily: "Kinesis Analytics",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/KPU-Hour-Java/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:55,823 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:56,000 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 203
2025-05-27 01:34:56,000 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.123","unit":"KPU-Hour","description":"$0.123 per Kinesis Processing Unit-hour for Apache Flink applications","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:56,000 - INFO - ✅ AWS::KinesisAnalytics::Application in ca-central-1: Query successful
2025-05-27 01:34:56,000 - INFO - Testing AWS::KinesisFirehose::DeliveryStream in us-east-1
2025-05-27 01:34:56,000 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisFirehose",
              productFamily: "Kinesis Firehose",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value: "Event-by-Event Processing" },
                { key: "sourcetype", value: "" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:56,002 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:56,171 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 994
2025-05-27 01:34:56,172 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.075","unit":"GB","description":"Tier 1 $0.075 per GB of data ingested ","startUsageAmount":"0","endUsageAmount":"256000"},{"USD":"0.064","unit":"GB","description":"Tier 2 $0.064 per GB of data ingested ","startUsageAmount":"256000","endUsageAmount":"1024000"},{"USD":"0.053","unit":"GB","description":"Tier 3 $0.053 per GB of data ingested","startUsageAmount":"1024000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.08","unit":"GB","description":"Per GB of data ingested or delivered","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.029","unit":"GB","description":"Tier 1 $0.029 per GB of data ingested","startUsageAmount":"0","endUsageAmount":"512000"},{"USD":"0.025","unit":"GB","description":"Tier 2 $0.025 per GB of data ingested","startUsageAmount":"512000","endUsageAmount":"2048000"},{"USD":"0.02","unit":"GB","description":"Tier 3 $0.020 per GB of data ingested","startUsageAmount":"2048000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:56,172 - INFO - ✅ AWS::KinesisFirehose::DeliveryStream in us-east-1: Query successful
2025-05-27 01:34:56,172 - INFO - Testing AWS::KinesisFirehose::DeliveryStream in ca-central-1
2025-05-27 01:34:56,172 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisFirehose",
              productFamily: "Kinesis Firehose",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value: "Event-by-Event Processing" },
                { key: "sourcetype", value: "" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:56,175 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:56,352 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 996
2025-05-27 01:34:56,353 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.083","unit":"GB","description":"Tier 1 $0.083 per GB of data ingested ","startUsageAmount":"0","endUsageAmount":"256000"},{"USD":"0.07","unit":"GB","description":"Tier 2 $0.070 per GB of data ingested ","startUsageAmount":"256000","endUsageAmount":"1024000"},{"USD":"0.058","unit":"GB","description":"Tier 3 $0.058 per GB of data ingested","startUsageAmount":"1024000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.032","unit":"GB","description":"Tier 1 $0.032 per GB of data ingested","startUsageAmount":"0","endUsageAmount":"512000"},{"USD":"0.028","unit":"GB","description":"Tier 2 $0.028 per GB of data ingested","startUsageAmount":"512000","endUsageAmount":"2048000"},{"USD":"0.022","unit":"GB","description":"Tier 3 $0.022 per GB of data ingested","startUsageAmount":"2048000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0883","unit":"GB","description":"Per GB of data ingested or delivered","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:56,353 - INFO - ✅ AWS::KinesisFirehose::DeliveryStream in ca-central-1: Query successful
2025-05-27 01:34:56,353 - INFO - Testing AWS::MWAA::Environment in us-east-1
2025-05-27 01:34:56,353 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:56,353 - INFO - Testing AWS::MWAA::Environment in ca-central-1
2025-05-27 01:34:56,353 - WARNING - Missing required element in query: productFamily
2025-05-27 01:34:56,353 - INFO - Testing AWS::NetworkFirewall::Firewall in us-east-1
2025-05-27 01:34:56,353 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSNetworkFirewall",
              productFamily: "AWS Firewall",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-Endpoint-Hour$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:56,356 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:56,518 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 206
2025-05-27 01:34:56,519 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.395","unit":"Hourly","description":"$0.395 per endpoint hour for AWS Network Firewall in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:56,519 - INFO - ✅ AWS::NetworkFirewall::Firewall in us-east-1: Query successful
2025-05-27 01:34:56,519 - INFO - Testing AWS::NetworkFirewall::Firewall in ca-central-1
2025-05-27 01:34:56,519 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSNetworkFirewall",
              productFamily: "AWS Firewall",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-Endpoint-Hour$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:56,521 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:56,697 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:34:56,697 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.395","unit":"Hourly","description":"$0.395 per endpoint hour for AWS Network Firewall in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:56,697 - INFO - ✅ AWS::NetworkFirewall::Firewall in ca-central-1: Query successful
2025-05-27 01:34:56,698 - INFO - Testing AWS::Route53::RecordSet in us-east-1
2025-05-27 01:34:56,698 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              attributeFilters: [
                { key: "usagetype", value: "DNS-Queries" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:56,700 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:56,887 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 352
2025-05-27 01:34:56,887 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"4e-7","unit":"Queries","description":"$0.40 per 1,000,000 queries for the first 1 Billion queries","startUsageAmount":"0","endUsageAmount":"1000000000"},{"USD":"2e-7","unit":"Queries","description":"$0.20 per 1,000,000 queries over 1 Billion queries","startUsageAmount":"1000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:56,887 - INFO - ✅ AWS::Route53::RecordSet in us-east-1: Query successful
2025-05-27 01:34:56,887 - INFO - Testing AWS::Route53::RecordSet in ca-central-1
2025-05-27 01:34:56,888 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              attributeFilters: [
                { key: "usagetype", value: "DNS-Queries" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:56,890 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:57,061 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 352
2025-05-27 01:34:57,062 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"4e-7","unit":"Queries","description":"$0.40 per 1,000,000 queries for the first 1 Billion queries","startUsageAmount":"0","endUsageAmount":"1000000000"},{"USD":"2e-7","unit":"Queries","description":"$0.20 per 1,000,000 queries over 1 Billion queries","startUsageAmount":"1000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:57,062 - INFO - ✅ AWS::Route53::RecordSet in ca-central-1: Query successful
2025-05-27 01:34:57,062 - INFO - Testing AWS::Route53Resolver::ResolverEndpoint in us-east-1
2025-05-27 01:34:57,062 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ResolverNetworkInterface$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:57,065 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:57,233 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:34:57,233 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.125","unit":"Hours","description":"$0.125 per hour per Resolver Network Interface","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:57,234 - INFO - ✅ AWS::Route53Resolver::ResolverEndpoint in us-east-1: Query successful
2025-05-27 01:34:57,234 - INFO - Testing AWS::Route53Resolver::ResolverEndpoint in ca-central-1
2025-05-27 01:34:57,234 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ResolverNetworkInterface$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:57,237 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:57,401 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:34:57,401 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.125","unit":"Hours","description":"$0.125 per hour per Resolver Network Interface","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:57,401 - INFO - ✅ AWS::Route53Resolver::ResolverEndpoint in ca-central-1: Query successful
2025-05-27 01:34:57,401 - INFO - Testing AWS::SNS::Subscription in us-east-1
2025-05-27 01:34:57,401 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "Requests-Tier1" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:57,404 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:57,573 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:34:57,573 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:57,573 - INFO - ✅ AWS::SNS::Subscription in us-east-1: Query successful
2025-05-27 01:34:57,573 - INFO - Testing AWS::SNS::Subscription in ca-central-1
2025-05-27 01:34:57,574 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "CAN1-Requests-Tier1" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:34:57,576 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:34:57,761 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:34:57,761 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:34:57,762 - INFO - ✅ AWS::SNS::Subscription in ca-central-1: Query successful
2025-05-27 01:34:57,774 - INFO - Test completed. Detailed results saved to comprehensive_test_results.json
2025-05-27 01:37:10,854 - INFO - Starting comprehensive query validation test
2025-05-27 01:37:10,854 - INFO - Testing AWS::EC2::Instance in us-east-1
2025-05-27 01:37:10,855 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:10,860 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:11,042 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:37:11,043 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0104","unit":"Hrs","description":"$0.0104 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:11,043 - INFO - ✅ AWS::EC2::Instance in us-east-1: Query successful
2025-05-27 01:37:11,043 - INFO - Testing AWS::EC2::Instance in ca-central-1
2025-05-27 01:37:11,043 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:11,045 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:11,243 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:37:11,243 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0116","unit":"Hrs","description":"$0.0116 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:11,244 - INFO - ✅ AWS::EC2::Instance in ca-central-1: Query successful
2025-05-27 01:37:11,244 - INFO - Testing AWS::EC2::Volume in us-east-1
2025-05-27 01:37:11,244 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "volumeApiName", value: "gp3" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:11,246 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:11,417 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 217
2025-05-27 01:37:11,417 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.08","unit":"GB-Mo","description":"$0.08 per GB-month of General Purpose (gp3) provisioned storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:11,417 - INFO - ✅ AWS::EC2::Volume in us-east-1: Query successful
2025-05-27 01:37:11,417 - INFO - Testing AWS::EC2::Volume in ca-central-1
2025-05-27 01:37:11,418 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "volumeApiName", value: "gp3" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:11,420 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:11,591 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 214
2025-05-27 01:37:11,592 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.088","unit":"GB-Mo","description":"$0.088 per GB-month of General Purpose (gp3) provisioned storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:11,592 - INFO - ✅ AWS::EC2::Volume in ca-central-1: Query successful
2025-05-27 01:37:11,592 - INFO - Testing AWS::EC2::EIP in us-east-1
2025-05-27 01:37:11,592 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "IP Address",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ElasticIP:IdleAddress/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:11,595 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:11,754 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 381
2025-05-27 01:37:11,754 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Hrs","description":"$0.00 per Elastic IP address not attached to a running instance for the first hour","startUsageAmount":"0","endUsageAmount":"1"},{"USD":"0.005","unit":"Hrs","description":"$0.005 per Elastic IP address not attached to a running instance per hour (prorated)","startUsageAmount":"1","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:11,755 - INFO - ✅ AWS::EC2::EIP in us-east-1: Query successful
2025-05-27 01:37:11,755 - INFO - Testing AWS::EC2::EIP in ca-central-1
2025-05-27 01:37:11,755 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "IP Address",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ElasticIP:IdleAddress/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:11,757 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:11,937 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 381
2025-05-27 01:37:11,938 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Hrs","description":"$0.00 per Elastic IP address not attached to a running instance for the first hour","startUsageAmount":"0","endUsageAmount":"1"},{"USD":"0.005","unit":"Hrs","description":"$0.005 per Elastic IP address not attached to a running instance per hour (prorated)","startUsageAmount":"1","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:11,938 - INFO - ✅ AWS::EC2::EIP in ca-central-1: Query successful
2025-05-27 01:37:11,938 - INFO - Testing AWS::EC2::Snapshot in us-east-1
2025-05-27 01:37:11,938 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage Snapshot",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EBS:SnapshotUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:11,941 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:12,119 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 202
2025-05-27 01:37:12,120 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"GB-Mo","description":"$0.05 per GB-Month of snapshot data stored - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:12,120 - INFO - ✅ AWS::EC2::Snapshot in us-east-1: Query successful
2025-05-27 01:37:12,120 - INFO - Testing AWS::EC2::Snapshot in ca-central-1
2025-05-27 01:37:12,120 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage Snapshot",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EBS:SnapshotUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:12,123 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:12,306 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 193
2025-05-27 01:37:12,306 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.055","unit":"GB-Mo","description":"$0.055 per GB-Month of snapshot data stored - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:12,307 - INFO - ✅ AWS::EC2::Snapshot in ca-central-1: Query successful
2025-05-27 01:37:12,307 - INFO - Testing AWS::RDS::DBInstance in us-east-1
2025-05-27 01:37:12,307 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.micro" },
                { key: "databaseEngine", value: "MySQL" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:12,309 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:12,485 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 395
2025-05-27 01:37:12,485 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.034","unit":"Hrs","description":"USD 0.034 per db.t3.micro Multi-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.017","unit":"Hrs","description":"USD 0.017 per db.t3.micro Single-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:12,486 - INFO - ✅ AWS::RDS::DBInstance in us-east-1: Query successful
2025-05-27 01:37:12,486 - INFO - Testing AWS::RDS::DBInstance in ca-central-1
2025-05-27 01:37:12,486 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.micro" },
                { key: "databaseEngine", value: "MySQL" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:12,488 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:12,671 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 395
2025-05-27 01:37:12,672 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.019","unit":"Hrs","description":"USD 0.019 per db.t3.micro Single-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.037","unit":"Hrs","description":"USD 0.037 per db.t3.micro Multi-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:12,672 - INFO - ✅ AWS::RDS::DBInstance in ca-central-1: Query successful
2025-05-27 01:37:12,672 - INFO - Testing AWS::RDS::DBCluster in us-east-1
2025-05-27 01:37:12,672 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "databaseEngine", value: "Any" },
                { key: "usagetype", value_regex: "/Aurora.*StorageUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:12,674 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:12,851 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 354
2025-05-27 01:37:12,852 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.225","unit":"GB-Mo","description":"USD 0.225 per GB-month of I/O-Optimized consumed storage (Aurora MySQL)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.10 per GB-month of consumed storage (Aurora)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:12,852 - INFO - ✅ AWS::RDS::DBCluster in us-east-1: Query successful
2025-05-27 01:37:12,852 - INFO - Testing AWS::RDS::DBCluster in ca-central-1
2025-05-27 01:37:12,852 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "databaseEngine", value: "Any" },
                { key: "usagetype", value_regex: "/Aurora.*StorageUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:12,854 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:13,015 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 366
2025-05-27 01:37:13,015 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.11","unit":"GB-Mo","description":"USD 0.11 per GB-month of consumed storage for Aurora MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.248","unit":"GB-Mo","description":"USD 0.248 per GB-month of I/O-Optimized consumed storage (Aurora MySQL)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:13,016 - INFO - ✅ AWS::RDS::DBCluster in ca-central-1: Query successful
2025-05-27 01:37:13,016 - INFO - Testing AWS::S3::Bucket in us-east-1
2025-05-27 01:37:13,016 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonS3",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/TimedStorage-ByteHrs/" },
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:13,018 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:13,185 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 483
2025-05-27 01:37:13,186 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.023","unit":"GB-Mo","description":"$0.023 per GB - first 50 TB / month of storage used","startUsageAmount":"0","endUsageAmount":"51200"},{"USD":"0.022","unit":"GB-Mo","description":"$0.022 per GB - next 450 TB / month of storage used","startUsageAmount":"51200","endUsageAmount":"512000"},{"USD":"0.021","unit":"GB-Mo","description":"$0.021 per GB - storage used / month over 500 TB","startUsageAmount":"512000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:13,186 - INFO - ✅ AWS::S3::Bucket in us-east-1: Query successful
2025-05-27 01:37:13,186 - INFO - Testing AWS::S3::Bucket in ca-central-1
2025-05-27 01:37:13,186 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonS3",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/TimedStorage-ByteHrs/" },
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:13,187 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:13,356 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 483
2025-05-27 01:37:13,356 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.025","unit":"GB-Mo","description":"$0.025 per GB - first 50 TB / month of storage used","startUsageAmount":"0","endUsageAmount":"51200"},{"USD":"0.024","unit":"GB-Mo","description":"$0.024 per GB - next 450 TB / month of storage used","startUsageAmount":"51200","endUsageAmount":"512000"},{"USD":"0.023","unit":"GB-Mo","description":"$0.023 per GB - storage used / month over 500 TB","startUsageAmount":"512000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:13,357 - INFO - ✅ AWS::S3::Bucket in ca-central-1: Query successful
2025-05-27 01:37:13,357 - INFO - Testing AWS::Lambda::Function in us-east-1
2025-05-27 01:37:13,357 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSLambda",
              productFamily: "Serverless",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/GB-Second/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:13,359 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:13,530 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 2069
2025-05-27 01:37:13,531 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"3.09e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage for ARM - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000166667","unit":"seconds","description":"AWS Lambda - Total Compute - US East (Northern Virginia)-Tier-1","startUsageAmount":"0","endUsageAmount":"6000000000"},{"USD":"0.000015","unit":"seconds","description":"AWS Lambda - Total Compute - US East (Northern Virginia)-Tier-2","startUsageAmount":"6000000000","endUsageAmount":"15000000000"},{"USD":"0.0000133334","unit":"seconds","description":"AWS Lambda - Total Compute - US East (Northern Virginia)-Tier-3","startUsageAmount":"15000000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00005001","unit":"Lambda-GB-Second","description":"AWS Lambda Edge - Total Compute - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000133334","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - US East (Northern Virginia)-Tier-1","startUsageAmount":"0","endUsageAmount":"7500000000"},{"USD":"0.0000120001","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - US East (Northern Virginia)-Tier-2","startUsageAmount":"7500000000","endUsageAmount":"18750000000"},{"USD":"0.0000106667","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - US East (Northern Virginia)-Tier-3","startUsageAmount":"18750000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000077778","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute (Provisioned) for ARM - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3.09e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000097222","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute (Provisioned) - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:13,531 - INFO - ✅ AWS::Lambda::Function in us-east-1: Query successful
2025-05-27 01:37:13,531 - INFO - Testing AWS::Lambda::Function in ca-central-1
2025-05-27 01:37:13,531 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSLambda",
              productFamily: "Serverless",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/GB-Second/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:13,534 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:13,721 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 2003
2025-05-27 01:37:13,721 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000166667","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute - Canada (Central)-Tier-1","startUsageAmount":"0","endUsageAmount":"6000000000"},{"USD":"0.000015","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute - Canada (Central)-Tier-2","startUsageAmount":"6000000000","endUsageAmount":"15000000000"},{"USD":"0.0000133334","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute - Canada (Central)-Tier-3","startUsageAmount":"15000000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000133334","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - Canada (Central)-Tier-1","startUsageAmount":"0","endUsageAmount":"7500000000"},{"USD":"0.0000120001","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - Canada (Central)-Tier-2","startUsageAmount":"7500000000","endUsageAmount":"18750000000"},{"USD":"0.0000106667","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - Canada (Central)-Tier-3","startUsageAmount":"18750000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3.4e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage for ARM - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00005001","unit":"Lambda-GB-Second","description":"AWS Lambda Edge - Total Compute - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3.4e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000108407","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute (Provisioned) - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000086726","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM (Provisioned) - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:13,722 - INFO - ✅ AWS::Lambda::Function in ca-central-1: Query successful
2025-05-27 01:37:13,722 - INFO - Testing AWS::ElasticLoadBalancingV2::LoadBalancer in us-east-1
2025-05-27 01:37:13,722 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" },
                { key: "operation", value: "LoadBalancing" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:13,724 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:13,901 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:37:13,901 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.025","unit":"Hrs","description":"$0.025 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:13,902 - INFO - ✅ AWS::ElasticLoadBalancingV2::LoadBalancer in us-east-1: Query successful
2025-05-27 01:37:13,902 - INFO - Testing AWS::ElasticLoadBalancingV2::LoadBalancer in ca-central-1
2025-05-27 01:37:13,902 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" },
                { key: "operation", value: "LoadBalancing" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:13,904 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:14,084 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:37:14,084 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0275","unit":"Hrs","description":"$0.0275 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:14,085 - INFO - ✅ AWS::ElasticLoadBalancingV2::LoadBalancer in ca-central-1: Query successful
2025-05-27 01:37:14,085 - INFO - Testing AWS::ElasticLoadBalancing::LoadBalancer in us-east-1
2025-05-27 01:37:14,085 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "us-east-1",
              attributeFilters: [
                { key: "locationType", value: "AWS Region" },
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:14,087 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:14,280 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:37:14,280 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.025","unit":"Hrs","description":"$0.025 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:14,281 - INFO - ✅ AWS::ElasticLoadBalancing::LoadBalancer in us-east-1: Query successful
2025-05-27 01:37:14,281 - INFO - Testing AWS::ElasticLoadBalancing::LoadBalancer in ca-central-1
2025-05-27 01:37:14,281 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "ca-central-1",
              attributeFilters: [
                { key: "locationType", value: "AWS Region" },
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:14,283 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:14,478 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:37:14,479 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0275","unit":"Hrs","description":"$0.0275 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:14,479 - INFO - ✅ AWS::ElasticLoadBalancing::LoadBalancer in ca-central-1: Query successful
2025-05-27 01:37:14,480 - INFO - Testing AWS::Logs::LogGroup in us-east-1
2025-05-27 01:37:14,480 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Data Payload",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/DataProcessing-Bytes/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:14,484 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:14,676 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 406
2025-05-27 01:37:14,677 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.5","unit":"GB","description":"$0.50 per GB custom log data ingested in Standard log class - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.5","unit":"GB","description":"$0.50 per GB custom log data ingested in Standard log class - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:14,677 - INFO - ✅ AWS::Logs::LogGroup in us-east-1: Query successful
2025-05-27 01:37:14,677 - INFO - Testing AWS::Logs::LogGroup in ca-central-1
2025-05-27 01:37:14,678 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Data Payload",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/DataProcessing-Bytes/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:14,681 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:14,869 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 205
2025-05-27 01:37:14,870 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.55","unit":"GB","description":"$0.55 per GB custom log data ingested in Standard log class - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:14,871 - INFO - ✅ AWS::Logs::LogGroup in ca-central-1: Query successful
2025-05-27 01:37:14,872 - INFO - Testing AWS::CloudWatch::Dashboard in us-east-1
2025-05-27 01:37:14,872 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Dashboard",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Dashboard/" },
                { key: "operation", value: "CreateDashboard" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:14,877 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:15,070 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:15,071 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:15,072 - ERROR - ❌ AWS::CloudWatch::Dashboard in us-east-1: No products found in response
2025-05-27 01:37:15,072 - INFO - Testing AWS::CloudWatch::Dashboard in ca-central-1
2025-05-27 01:37:15,072 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Dashboard",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Dashboard/" },
                { key: "operation", value: "CreateDashboard" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:15,078 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:15,245 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:15,246 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:15,247 - ERROR - ❌ AWS::CloudWatch::Dashboard in ca-central-1: No products found in response
2025-05-27 01:37:15,247 - INFO - Testing AWS::CloudWatch::Alarm in us-east-1
2025-05-27 01:37:15,247 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Alarm",
              region: "us-east-1",
              attributeFilters: [
                { key: "alarmType", value_regex: "/Standard/" },
                { key: "usagetype", value_regex: "/AlarmMonitorUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:15,252 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:15,429 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 210
2025-05-27 01:37:15,429 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Alarms","description":"$0.10 per alarm metric month (standard resolution) - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:15,430 - INFO - ✅ AWS::CloudWatch::Alarm in us-east-1: Query successful
2025-05-27 01:37:15,430 - INFO - Testing AWS::CloudWatch::Alarm in ca-central-1
2025-05-27 01:37:15,430 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Alarm",
              region: "ca-central-1",
              attributeFilters: [
                { key: "alarmType", value_regex: "/Standard/" },
                { key: "usagetype", value_regex: "/AlarmMonitorUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:15,433 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:15,600 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 199
2025-05-27 01:37:15,601 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Alarms","description":"$0.10 per alarm metric month (standard resolution) - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:15,602 - INFO - ✅ AWS::CloudWatch::Alarm in ca-central-1: Query successful
2025-05-27 01:37:15,602 - INFO - Testing AWS::DynamoDB::Table in us-east-1
2025-05-27 01:37:15,602 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDynamoDB",
              productFamily: "Amazon DynamoDB PayPerRequest Throughput",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value: "DDB-ReadUnits" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:15,606 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:15,779 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 195
2025-05-27 01:37:15,780 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1.25e-7","unit":"ReadRequestUnits","description":"$0.125 per million read request units (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:15,780 - INFO - ✅ AWS::DynamoDB::Table in us-east-1: Query successful
2025-05-27 01:37:15,780 - INFO - Testing AWS::DynamoDB::Table in ca-central-1
2025-05-27 01:37:15,780 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDynamoDB",
              productFamily: "Amazon DynamoDB PayPerRequest Throughput",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value: "DDB-ReadUnits" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:15,783 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:15,950 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 202
2025-05-27 01:37:15,951 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1.375e-7","unit":"ReadRequestUnits","description":"$0.1375 per million read request units (Canada (Central))","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:15,951 - INFO - ✅ AWS::DynamoDB::Table in ca-central-1: Query successful
2025-05-27 01:37:15,951 - INFO - Testing AWS::ApiGateway::RestApi in us-east-1
2025-05-27 01:37:15,951 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:15,954 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:16,128 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1475
2025-05-27 01:37:16,128 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"Requests","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"Requests","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"Requests","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"USE1-AmazonApiGateway-Request","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"USE1-AmazonApiGateway-Request","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"USE1-AmazonApiGateway-Request","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"USE1-AmazonApiGateway-Request","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:16,129 - INFO - ✅ AWS::ApiGateway::RestApi in us-east-1: Query successful
2025-05-27 01:37:16,129 - INFO - Testing AWS::ApiGateway::RestApi in ca-central-1
2025-05-27 01:37:16,129 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:16,132 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:16,305 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1473
2025-05-27 01:37:16,306 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"CAN1-AmazonApiGatewayRequest","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"CAN1-AmazonApiGatewayRequest","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"Requests","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"Requests","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"Requests","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:16,307 - INFO - ✅ AWS::ApiGateway::RestApi in ca-central-1: Query successful
2025-05-27 01:37:16,307 - INFO - Testing AWS::ApiGatewayV2::Api in us-east-1
2025-05-27 01:37:16,307 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayHttpRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:16,310 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:16,479 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 377
2025-05-27 01:37:16,480 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"Requests","description":"$1/million requests - API Gateway HTTP API (first 300 million)","startUsageAmount":"0","endUsageAmount":"300000000"},{"USD":"9e-7","unit":"Requests","description":"$0.9/million requests - API Gateway HTTP API (more than 300 million)","startUsageAmount":"300000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:16,481 - INFO - ✅ AWS::ApiGatewayV2::Api in us-east-1: Query successful
2025-05-27 01:37:16,481 - INFO - Testing AWS::ApiGatewayV2::Api in ca-central-1
2025-05-27 01:37:16,481 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayHttpRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:16,489 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:16,664 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 384
2025-05-27 01:37:16,665 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00000111","unit":"Requests","description":"$1.11/million requests - API Gateway HTTP API (first 300 million)","startUsageAmount":"0","endUsageAmount":"300000000"},{"USD":"0.000001","unit":"Requests","description":"$1/million requests - API Gateway HTTP API (more than 300 million)","startUsageAmount":"300000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:16,665 - INFO - ✅ AWS::ApiGatewayV2::Api in ca-central-1: Query successful
2025-05-27 01:37:16,665 - INFO - Testing AWS::KMS::Key in us-east-1
2025-05-27 01:37:16,665 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awskms",
              productFamily: "Encryption Key",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "us-east-1-KMS-Keys" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:16,667 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:16,824 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 190
2025-05-27 01:37:16,824 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1","unit":"Keys","description":"$1 per customer managed KMS key version in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:16,825 - INFO - ✅ AWS::KMS::Key in us-east-1: Query successful
2025-05-27 01:37:16,825 - INFO - Testing AWS::KMS::Key in ca-central-1
2025-05-27 01:37:16,825 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awskms",
              productFamily: "Encryption Key",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "ca-central-1-KMS-Keys" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:16,826 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:17,003 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 185
2025-05-27 01:37:17,003 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1","unit":"Keys","description":"$1 per customer managed KMS key version in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:17,003 - INFO - ✅ AWS::KMS::Key in ca-central-1: Query successful
2025-05-27 01:37:17,004 - INFO - Testing AWS::EKS::Cluster in us-east-1
2025-05-27 01:37:17,004 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EKS.*Cluster/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:17,006 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:17,176 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 329
2025-05-27 01:37:17,178 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Hours","description":"Amazon EKS cluster usage in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.1","unit":"hours","description":"Amazon EKS local cluster usage on AWS Outposts","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:17,178 - INFO - ✅ AWS::EKS::Cluster in us-east-1: Query successful
2025-05-27 01:37:17,178 - INFO - Testing AWS::EKS::Cluster in ca-central-1
2025-05-27 01:37:17,178 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EKS.*Cluster/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:17,182 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:17,343 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 324
2025-05-27 01:37:17,344 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Hours","description":"Amazon EKS cluster usage in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.1","unit":"hours","description":"Amazon EKS local cluster usage on AWS Outposts","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:17,344 - INFO - ✅ AWS::EKS::Cluster in ca-central-1: Query successful
2025-05-27 01:37:17,345 - INFO - Testing AWS::EKS::Nodegroup in us-east-1
2025-05-27 01:37:17,345 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.medium" },
                { key: "tenancy", value: "Shared" },
                { key: "operatingSystem", value: "Linux" },
                { key: "preInstalledSw", value: "NA" },
                { key: "licenseModel", value: "No License required" },
                { key: "capacitystatus", value: "Used" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:17,348 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:17,519 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 181
2025-05-27 01:37:17,520 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0416","unit":"Hrs","description":"$0.0416 per On Demand Linux t3.medium Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:17,521 - INFO - ✅ AWS::EKS::Nodegroup in us-east-1: Query successful
2025-05-27 01:37:17,521 - INFO - Testing AWS::EKS::Nodegroup in ca-central-1
2025-05-27 01:37:17,521 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.medium" },
                { key: "tenancy", value: "Shared" },
                { key: "operatingSystem", value: "Linux" },
                { key: "preInstalledSw", value: "NA" },
                { key: "licenseModel", value: "No License required" },
                { key: "capacitystatus", value: "Used" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:17,526 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:17,708 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 181
2025-05-27 01:37:17,708 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0464","unit":"Hrs","description":"$0.0464 per On Demand Linux t3.medium Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:17,709 - INFO - ✅ AWS::EKS::Nodegroup in ca-central-1: Query successful
2025-05-27 01:37:17,709 - INFO - Testing AWS::ElastiCache::CacheCluster in us-east-1
2025-05-27 01:37:17,709 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:17,711 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:17,888 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:37:17,889 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.017","unit":"Hrs","description":"$0.017 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:17,889 - INFO - ✅ AWS::ElastiCache::CacheCluster in us-east-1: Query successful
2025-05-27 01:37:17,889 - INFO - Testing AWS::ElastiCache::CacheCluster in ca-central-1
2025-05-27 01:37:17,889 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:17,892 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:18,054 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:37:18,054 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.019","unit":"Hrs","description":"$0.019 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:18,054 - INFO - ✅ AWS::ElastiCache::CacheCluster in ca-central-1: Query successful
2025-05-27 01:37:18,054 - INFO - Testing AWS::ElastiCache::ReplicationGroup in us-east-1
2025-05-27 01:37:18,054 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:18,057 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:18,235 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:37:18,235 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.017","unit":"Hrs","description":"$0.017 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:18,236 - INFO - ✅ AWS::ElastiCache::ReplicationGroup in us-east-1: Query successful
2025-05-27 01:37:18,236 - INFO - Testing AWS::ElastiCache::ReplicationGroup in ca-central-1
2025-05-27 01:37:18,236 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:18,238 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:18,412 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:37:18,413 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.019","unit":"Hrs","description":"$0.019 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:18,413 - INFO - ✅ AWS::ElastiCache::ReplicationGroup in ca-central-1: Query successful
2025-05-27 01:37:18,413 - INFO - Testing AWS::Redshift::Cluster in us-east-1
2025-05-27 01:37:18,413 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRedshift",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "dc2.large" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:18,415 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:18,647 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 211
2025-05-27 01:37:18,648 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.25","unit":"Hrs","description":"$0.250 per Redshift Dense Compute Large (DC2.L) Compute Node-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:18,648 - INFO - ✅ AWS::Redshift::Cluster in us-east-1: Query successful
2025-05-27 01:37:18,648 - INFO - Testing AWS::Redshift::Cluster in ca-central-1
2025-05-27 01:37:18,648 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRedshift",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "dc2.large" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:18,651 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:18,829 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 212
2025-05-27 01:37:18,829 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.275","unit":"Hrs","description":"$0.275 per Redshift Dense Compute Large (DC2.L) Compute Node-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:18,830 - INFO - ✅ AWS::Redshift::Cluster in ca-central-1: Query successful
2025-05-27 01:37:18,830 - INFO - Testing AWS::Route53::HostedZone in us-east-1
2025-05-27 01:37:18,830 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Zone",
              attributeFilters: [
                { key: "usagetype", value: "HostedZone" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:18,833 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:19,000 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 331
2025-05-27 01:37:19,000 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.5","unit":"HostedZone","description":"$0.50 per Hosted Zone for the first 25 Hosted Zones","startUsageAmount":"0","endUsageAmount":"25"},{"USD":"0.1","unit":"HostedZone","description":"$0.10 per Hosted Zone for additional Hosted Zones","startUsageAmount":"25","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:19,001 - INFO - ✅ AWS::Route53::HostedZone in us-east-1: Query successful
2025-05-27 01:37:19,001 - INFO - Testing AWS::Route53::HostedZone in ca-central-1
2025-05-27 01:37:19,001 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Zone",
              attributeFilters: [
                { key: "usagetype", value: "HostedZone" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:19,003 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:19,168 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 331
2025-05-27 01:37:19,169 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.5","unit":"HostedZone","description":"$0.50 per Hosted Zone for the first 25 Hosted Zones","startUsageAmount":"0","endUsageAmount":"25"},{"USD":"0.1","unit":"HostedZone","description":"$0.10 per Hosted Zone for additional Hosted Zones","startUsageAmount":"25","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:19,169 - INFO - ✅ AWS::Route53::HostedZone in ca-central-1: Query successful
2025-05-27 01:37:19,169 - INFO - Testing AWS::Route53::HealthCheck in us-east-1
2025-05-27 01:37:19,169 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Health Check",
              attributeFilters: [
                { key: "usagetype", value: "Health-Check-AWS" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:19,171 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:19,338 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 339
2025-05-27 01:37:19,339 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Mo","description":"First 50 Health Checks of AWS endpoints are free of charge","startUsageAmount":"0","endUsageAmount":"50"},{"USD":"0.5","unit":"Mo","description":"$0.50 per Health Check for additional Health Checks of AWS endpoints","startUsageAmount":"50","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:19,340 - INFO - ✅ AWS::Route53::HealthCheck in us-east-1: Query successful
2025-05-27 01:37:19,340 - INFO - Testing AWS::Route53::HealthCheck in ca-central-1
2025-05-27 01:37:19,340 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Health Check",
              attributeFilters: [
                { key: "usagetype", value: "Health-Check-AWS" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:19,343 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:19,519 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 339
2025-05-27 01:37:19,519 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Mo","description":"First 50 Health Checks of AWS endpoints are free of charge","startUsageAmount":"0","endUsageAmount":"50"},{"USD":"0.5","unit":"Mo","description":"$0.50 per Health Check for additional Health Checks of AWS endpoints","startUsageAmount":"50","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:19,519 - INFO - ✅ AWS::Route53::HealthCheck in ca-central-1: Query successful
2025-05-27 01:37:19,520 - INFO - Testing AWS::SNS::Topic in us-east-1
2025-05-27 01:37:19,520 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:19,522 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:19,680 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:37:19,680 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:19,680 - INFO - ✅ AWS::SNS::Topic in us-east-1: Query successful
2025-05-27 01:37:19,681 - INFO - Testing AWS::SNS::Topic in ca-central-1
2025-05-27 01:37:19,681 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:19,683 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:19,844 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:37:19,845 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:19,845 - INFO - ✅ AWS::SNS::Topic in ca-central-1: Query successful
2025-05-27 01:37:19,845 - INFO - Testing AWS::SQS::Queue in us-east-1
2025-05-27 01:37:19,845 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:19,847 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:20,014 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:37:20,014 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:20,015 - INFO - ✅ AWS::SQS::Queue in us-east-1: Query successful
2025-05-27 01:37:20,015 - INFO - Testing AWS::SQS::Queue in ca-central-1
2025-05-27 01:37:20,015 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:20,017 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:20,193 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:37:20,193 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:20,194 - INFO - ✅ AWS::SQS::Queue in ca-central-1: Query successful
2025-05-27 01:37:20,194 - INFO - Testing AWS::SecretsManager::Secret in us-east-1
2025-05-27 01:37:20,194 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSecretsManager",
              productFamily: "Secret",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:20,196 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:20,367 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 147
2025-05-27 01:37:20,367 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.4","unit":"Secrets","description":"$0.40 per Secret","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:20,367 - INFO - ✅ AWS::SecretsManager::Secret in us-east-1: Query successful
2025-05-27 01:37:20,367 - INFO - Testing AWS::SecretsManager::Secret in ca-central-1
2025-05-27 01:37:20,367 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSecretsManager",
              productFamily: "Secret",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:20,370 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:20,547 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 147
2025-05-27 01:37:20,548 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.4","unit":"Secrets","description":"$0.40 per Secret","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:20,548 - INFO - ✅ AWS::SecretsManager::Secret in ca-central-1: Query successful
2025-05-27 01:37:20,548 - INFO - Testing AWS::StepFunctions::StateMachine in us-east-1
2025-05-27 01:37:20,548 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonStates",
              productFamily: "AWS Step Functions",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/StateTransition/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:20,550 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:20,703 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:37:20,704 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000025","unit":"StateTransitions","description":"$0.000025 per state transition","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:20,704 - INFO - ✅ AWS::StepFunctions::StateMachine in us-east-1: Query successful
2025-05-27 01:37:20,704 - INFO - Testing AWS::StepFunctions::StateMachine in ca-central-1
2025-05-27 01:37:20,704 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonStates",
              productFamily: "AWS Step Functions",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/StateTransition/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:20,706 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:20,900 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:37:20,900 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000025","unit":"StateTransitions","description":"$0.000025 per state transition","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:20,900 - INFO - ✅ AWS::StepFunctions::StateMachine in ca-central-1: Query successful
2025-05-27 01:37:20,901 - INFO - Testing AWS::EC2::NatGateway in us-east-1
2025-05-27 01:37:20,901 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "NAT Gateway",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/NatGateway-Hours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:20,903 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:21,071 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 156
2025-05-27 01:37:21,072 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.045","unit":"Hrs","description":"$0.045 per NAT Gateway Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:21,072 - INFO - ✅ AWS::EC2::NatGateway in us-east-1: Query successful
2025-05-27 01:37:21,072 - INFO - Testing AWS::EC2::NatGateway in ca-central-1
2025-05-27 01:37:21,072 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "NAT Gateway",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/NatGateway-Hours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:21,074 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:21,240 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 154
2025-05-27 01:37:21,240 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per NAT Gateway Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:21,241 - INFO - ✅ AWS::EC2::NatGateway in ca-central-1: Query successful
2025-05-27 01:37:21,241 - INFO - Testing AWS::EC2::VPNConnection in us-east-1
2025-05-27 01:37:21,241 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "Cloud Connectivity",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:21,243 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:21,417 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 157
2025-05-27 01:37:21,418 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per VPN Connection-Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:21,418 - INFO - ✅ AWS::EC2::VPNConnection in us-east-1: Query successful
2025-05-27 01:37:21,418 - INFO - Testing AWS::EC2::VPNConnection in ca-central-1
2025-05-27 01:37:21,418 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "Cloud Connectivity",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:21,420 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:21,598 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 157
2025-05-27 01:37:21,598 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per VPN Connection-Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:21,598 - INFO - ✅ AWS::EC2::VPNConnection in ca-central-1: Query successful
2025-05-27 01:37:21,598 - INFO - Testing AWS::EC2::VPCEndpoint in us-east-1
2025-05-27 01:37:21,599 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "VpcEndpoint",
              region: "us-east-1",
              attributeFilters: [
                { key: "endpointType", value: "PrivateLink" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:21,601 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:21,772 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 689
2025-05-27 01:37:21,772 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.01","unit":"GB","description":"$0.01 per GB for upto 1 PB monthly data processed by VPC Endpoints","startUsageAmount":"0","endUsageAmount":"1048576"},{"USD":"0.006","unit":"GB","description":"$0.006 per GB for more than 1 PB and less than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"1048576","endUsageAmount":"5242880"},{"USD":"0.004","unit":"GB","description":"$0.004 per GB for more than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"5242880","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.01","unit":"Hrs","description":"$0.01 per VPC Endpoint Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:21,773 - INFO - ✅ AWS::EC2::VPCEndpoint in us-east-1: Query successful
2025-05-27 01:37:21,773 - INFO - Testing AWS::EC2::VPCEndpoint in ca-central-1
2025-05-27 01:37:21,773 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "VpcEndpoint",
              region: "ca-central-1",
              attributeFilters: [
                { key: "endpointType", value: "PrivateLink" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:21,774 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:21,950 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 691
2025-05-27 01:37:21,951 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.011","unit":"Hrs","description":"$0.011 per VPC Endpoint Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.01","unit":"GB","description":"$0.01 per GB for upto 1 PB monthly data processed by VPC Endpoints","startUsageAmount":"0","endUsageAmount":"1048576"},{"USD":"0.006","unit":"GB","description":"$0.006 per GB for more than 1 PB and less than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"1048576","endUsageAmount":"5242880"},{"USD":"0.004","unit":"GB","description":"$0.004 per GB for more than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"5242880","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:21,951 - INFO - ✅ AWS::EC2::VPCEndpoint in ca-central-1: Query successful
2025-05-27 01:37:21,951 - INFO - Testing AWS::WAF::WebACL in us-east-1
2025-05-27 01:37:21,951 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:21,954 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:22,119 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:37:22,120 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:22,120 - INFO - ✅ AWS::WAF::WebACL in us-east-1: Query successful
2025-05-27 01:37:22,120 - INFO - Testing AWS::WAF::WebACL in ca-central-1
2025-05-27 01:37:22,120 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:22,122 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:22,293 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:37:22,293 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:22,294 - INFO - ✅ AWS::WAF::WebACL in ca-central-1: Query successful
2025-05-27 01:37:22,294 - INFO - Testing AWS::WAFv2::WebACL in us-east-1
2025-05-27 01:37:22,294 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:22,296 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:22,466 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:37:22,467 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:22,467 - INFO - ✅ AWS::WAFv2::WebACL in us-east-1: Query successful
2025-05-27 01:37:22,467 - INFO - Testing AWS::WAFv2::WebACL in ca-central-1
2025-05-27 01:37:22,467 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:22,469 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:22,649 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:37:22,650 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:22,650 - INFO - ✅ AWS::WAFv2::WebACL in ca-central-1: Query successful
2025-05-27 01:37:22,650 - INFO - Testing AWS::AutoScaling::AutoScalingGroup in us-east-1
2025-05-27 01:37:22,650 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:22,653 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:22,823 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:37:22,824 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0104","unit":"Hrs","description":"$0.0104 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:22,824 - INFO - ✅ AWS::AutoScaling::AutoScalingGroup in us-east-1: Query successful
2025-05-27 01:37:22,824 - INFO - Testing AWS::AutoScaling::AutoScalingGroup in ca-central-1
2025-05-27 01:37:22,824 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:22,826 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:22,991 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:37:22,991 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0116","unit":"Hrs","description":"$0.0116 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:22,991 - INFO - ✅ AWS::AutoScaling::AutoScalingGroup in ca-central-1: Query successful
2025-05-27 01:37:22,992 - INFO - Testing AWS::ECR::Repository in us-east-1
2025-05-27 01:37:22,992 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECR",
              productFamily: "EC2 Container Registry",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:22,994 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:23,166 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 163
2025-05-27 01:37:23,166 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.10 per GB-month of data storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:23,166 - INFO - ✅ AWS::ECR::Repository in us-east-1: Query successful
2025-05-27 01:37:23,166 - INFO - Testing AWS::ECR::Repository in ca-central-1
2025-05-27 01:37:23,166 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECR",
              productFamily: "EC2 Container Registry",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:23,169 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:23,344 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 163
2025-05-27 01:37:23,345 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.10 per GB-month of data storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:23,345 - INFO - ✅ AWS::ECR::Repository in ca-central-1: Query successful
2025-05-27 01:37:23,345 - INFO - Testing AWS::EFS::FileSystem in us-east-1
2025-05-27 01:37:23,345 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEFS",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:23,347 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:23,529 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 176
2025-05-27 01:37:23,529 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.3","unit":"GB-Mo","description":"USD $0.30 per GB-Mo for Standard storage (USE1)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:23,530 - INFO - ✅ AWS::EFS::FileSystem in us-east-1: Query successful
2025-05-27 01:37:23,530 - INFO - Testing AWS::EFS::FileSystem in ca-central-1
2025-05-27 01:37:23,530 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEFS",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:23,532 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:23,699 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:37:23,700 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.33","unit":"GB-Mo","description":"USD $0.33 per GB-Mo for Standard storage (CAN1)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:23,700 - INFO - ✅ AWS::EFS::FileSystem in ca-central-1: Query successful
2025-05-27 01:37:23,700 - INFO - Testing AWS::CodeBuild::Project in us-east-1
2025-05-27 01:37:23,700 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "CodeBuild",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Linux:g1.small/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:23,703 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:23,886 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 587
2025-05-27 01:37:23,886 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Docker-Sec:Linux:g1.small in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.005","unit":"minutes","description":"AWS CodeBuild - Build minutes on build.general1.small - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Sandbox-Sec:Linux:g1.small in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:23,887 - INFO - ✅ AWS::CodeBuild::Project in us-east-1: Query successful
2025-05-27 01:37:23,887 - INFO - Testing AWS::CodeBuild::Project in ca-central-1
2025-05-27 01:37:23,887 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "CodeBuild",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Linux:g1.small/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:23,889 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:24,066 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 566
2025-05-27 01:37:24,067 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.005","unit":"minutes","description":"AWS CodeBuild - Build minutes on build.general1.small - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Docker-Sec:Linux:g1.small in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Sandbox-Sec:Linux:g1.small in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:24,067 - INFO - ✅ AWS::CodeBuild::Project in ca-central-1: Query successful
2025-05-27 01:37:24,067 - INFO - Testing AWS::Kinesis::Stream in us-east-1
2025-05-27 01:37:24,067 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesis",
              productFamily: "Kinesis Streams",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ShardHour/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:24,069 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:24,238 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 308
2025-05-27 01:37:24,238 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.02","unit":"ShardHour","description":"$0.020 per extended shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.015","unit":"ShardHour","description":"$0.015 per provisioned shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:24,238 - INFO - ✅ AWS::Kinesis::Stream in us-east-1: Query successful
2025-05-27 01:37:24,238 - INFO - Testing AWS::Kinesis::Stream in ca-central-1
2025-05-27 01:37:24,239 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesis",
              productFamily: "Kinesis Streams",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ShardHour/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:24,241 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:24,408 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 311
2025-05-27 01:37:24,408 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0165","unit":"ShardHour","description":"$0.0165 per provisioned shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.022","unit":"ShardHour","description":"$0.022 per extended shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:24,408 - INFO - ✅ AWS::Kinesis::Stream in ca-central-1: Query successful
2025-05-27 01:37:24,409 - INFO - Testing AWS::CloudTrail::Trail in us-east-1
2025-05-27 01:37:24,409 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCloudTrail",
              productFamily: "Management Tools - AWS CloudTrail Data Events Recorded",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:24,410 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:24,577 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 198
2025-05-27 01:37:24,578 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"Events","description":"0.000001 per data event recorded in US East (N.Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:24,578 - INFO - ✅ AWS::CloudTrail::Trail in us-east-1: Query successful
2025-05-27 01:37:24,578 - INFO - Testing AWS::CloudTrail::Trail in ca-central-1
2025-05-27 01:37:24,578 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCloudTrail",
              productFamily: "Management Tools - AWS CloudTrail Data Events Recorded",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:24,580 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:24,741 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:37:24,742 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"Events","description":"0.000001 per data event recorded in Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:24,742 - INFO - ✅ AWS::CloudTrail::Trail in ca-central-1: Query successful
2025-05-27 01:37:24,742 - INFO - Testing AWS::Backup::BackupVault in us-east-1
2025-05-27 01:37:24,742 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSBackup",
              productFamily: "AWS Backup Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/WarmStorage-ByteHrs-EFS$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:24,744 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:24,903 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 183
2025-05-27 01:37:24,903 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"GB-month","description":"$0.05 per GB-month for warm backup storage for EFS","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:24,903 - INFO - ✅ AWS::Backup::BackupVault in us-east-1: Query successful
2025-05-27 01:37:24,903 - INFO - Testing AWS::Backup::BackupVault in ca-central-1
2025-05-27 01:37:24,903 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSBackup",
              productFamily: "AWS Backup Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/WarmStorage-ByteHrs-EFS$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:24,906 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:25,067 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 185
2025-05-27 01:37:25,068 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.055","unit":"GB-month","description":"$0.055 per GB-month for warm backup storage for EFS","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:25,068 - INFO - ✅ AWS::Backup::BackupVault in ca-central-1: Query successful
2025-05-27 01:37:25,068 - INFO - Testing AWS::Transfer::Server in us-east-1
2025-05-27 01:37:25,068 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSTransfer",
              productFamily: "AWS Transfer Family",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-ProtocolHours$/" },
                { key: "operation", value_regex: "/^FTP:S3$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:25,071 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:25,244 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 176
2025-05-27 01:37:25,245 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.3","unit":"Hourly","description":"$0.3 per Hour for FTP in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:25,245 - INFO - ✅ AWS::Transfer::Server in us-east-1: Query successful
2025-05-27 01:37:25,245 - INFO - Testing AWS::Transfer::Server in ca-central-1
2025-05-27 01:37:25,245 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSTransfer",
              productFamily: "AWS Transfer Family",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-ProtocolHours$/" },
                { key: "operation", value_regex: "/^FTP:S3$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:25,247 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:25,415 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 171
2025-05-27 01:37:25,415 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.3","unit":"Hourly","description":"$0.3 per Hour for FTP in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:25,415 - INFO - ✅ AWS::Transfer::Server in ca-central-1: Query successful
2025-05-27 01:37:25,415 - INFO - Testing AWS::SSM::Parameter in us-east-1
2025-05-27 01:37:25,415 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/PS-Advanced-Param-Tier1/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:25,418 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:25,579 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 195
2025-05-27 01:37:25,580 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00007","unit":"Hour","description":"$0.05 per Advanced Parameter per Month in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:25,581 - INFO - ✅ AWS::SSM::Parameter in us-east-1: Query successful
2025-05-27 01:37:25,581 - INFO - Testing AWS::SSM::Parameter in ca-central-1
2025-05-27 01:37:25,581 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/PS-Advanced-Param-Tier1/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:25,587 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:25,750 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 190
2025-05-27 01:37:25,751 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00007","unit":"Hour","description":"$0.05 per Advanced Parameter per Month in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:25,752 - INFO - ✅ AWS::SSM::Parameter in ca-central-1: Query successful
2025-05-27 01:37:25,752 - INFO - Testing AWS::SSM::Activation in us-east-1
2025-05-27 01:37:25,752 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/MI-AdvInstances-Hrs/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:25,755 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:25,927 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:37:25,928 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00695","unit":"Hrs","description":"$0.00695 per Advanced Instance Hr in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:25,929 - INFO - ✅ AWS::SSM::Activation in us-east-1: Query successful
2025-05-27 01:37:25,929 - INFO - Testing AWS::SSM::Activation in ca-central-1
2025-05-27 01:37:25,929 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/MI-AdvInstances-Hrs/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:25,935 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:26,101 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 184
2025-05-27 01:37:26,102 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00695","unit":"Hrs","description":"$0.00695 per Advanced Instance Hr in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:26,102 - INFO - ✅ AWS::SSM::Activation in ca-central-1: Query successful
2025-05-27 01:37:26,102 - INFO - Testing AWS::CloudFront::Distribution in us-east-1
2025-05-27 01:37:26,102 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudFront",
              productFamily: "Content Delivery",
              attributeFilters: [
                { key: "usagetype", value: "Invalidations" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:26,104 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:26,288 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:26,289 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:26,289 - ERROR - ❌ AWS::CloudFront::Distribution in us-east-1: No products found in response
2025-05-27 01:37:26,289 - INFO - Testing AWS::CloudFront::Distribution in ca-central-1
2025-05-27 01:37:26,289 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudFront",
              productFamily: "Content Delivery",
              attributeFilters: [
                { key: "usagetype", value: "Invalidations" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:26,291 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:26,455 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:26,456 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:26,456 - ERROR - ❌ AWS::CloudFront::Distribution in ca-central-1: No products found in response
2025-05-27 01:37:26,456 - INFO - Testing AWS::CloudFront::Function in us-east-1
2025-05-27 01:37:26,457 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudFront",
              productFamily: "Content Delivery",
              attributeFilters: [
                { key: "operation", value: "CloudFrontFunction" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:26,459 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:26,625 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:26,626 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:26,626 - ERROR - ❌ AWS::CloudFront::Function in us-east-1: No products found in response
2025-05-27 01:37:26,626 - INFO - Testing AWS::CloudFront::Function in ca-central-1
2025-05-27 01:37:26,626 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudFront",
              productFamily: "Content Delivery",
              attributeFilters: [
                { key: "operation", value: "CloudFrontFunction" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:26,628 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:26,789 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:26,789 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:26,789 - ERROR - ❌ AWS::CloudFront::Function in ca-central-1: No products found in response
2025-05-27 01:37:26,789 - INFO - Testing AWS::DocDB::DBCluster in us-east-1
2025-05-27 01:37:26,789 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Storage Snapshot",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/(^|-)BackupUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:26,791 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:26,961 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 227
2025-05-27 01:37:26,962 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.021","unit":"GB-Mo","description":"$0.021 per additional GB-month of backup storage exceeding free allocation for Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:26,962 - INFO - ✅ AWS::DocDB::DBCluster in us-east-1: Query successful
2025-05-27 01:37:26,962 - INFO - Testing AWS::DocDB::DBCluster in ca-central-1
2025-05-27 01:37:26,962 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Storage Snapshot",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/(^|-)BackupUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:26,966 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:27,131 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 227
2025-05-27 01:37:27,131 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.023","unit":"GB-Mo","description":"$0.023 per additional GB-month of backup storage exceeding free allocation for Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:27,132 - INFO - ✅ AWS::DocDB::DBCluster in ca-central-1: Query successful
2025-05-27 01:37:27,132 - INFO - Testing AWS::DocDB::DBInstance in us-east-1
2025-05-27 01:37:27,132 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Database Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "volumeType", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:27,135 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:27,308 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 210
2025-05-27 01:37:27,309 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.078","unit":"Hrs","description":"$0.078 per db.t3.medium instance hour (or partial hour) running Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:27,309 - INFO - ✅ AWS::DocDB::DBInstance in us-east-1: Query successful
2025-05-27 01:37:27,309 - INFO - Testing AWS::DocDB::DBInstance in ca-central-1
2025-05-27 01:37:27,309 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Database Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "volumeType", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:27,312 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:27,477 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 210
2025-05-27 01:37:27,477 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.086","unit":"Hrs","description":"$0.086 per db.t3.medium instance hour (or partial hour) running Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:27,477 - INFO - ✅ AWS::DocDB::DBInstance in ca-central-1: Query successful
2025-05-27 01:37:27,477 - INFO - Testing AWS::Neptune::DBCluster in us-east-1
2025-05-27 01:37:27,477 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonNeptune",
              productFamily: "Database Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^([A-Z]{3}[0-9]-|Global-|EU-)?StorageUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:27,479 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:27,649 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 167
2025-05-27 01:37:27,649 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.100 per GB / month (Amazon Neptune)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:27,649 - INFO - ✅ AWS::Neptune::DBCluster in us-east-1: Query successful
2025-05-27 01:37:27,649 - INFO - Testing AWS::Neptune::DBCluster in ca-central-1
2025-05-27 01:37:27,649 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonNeptune",
              productFamily: "Database Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^([A-Z]{3}[0-9]-|Global-|EU-)?StorageUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:27,651 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:27,830 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 167
2025-05-27 01:37:27,831 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.11","unit":"GB-Mo","description":"$0.11 per GB / month (Amazon Neptune)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:27,831 - INFO - ✅ AWS::Neptune::DBCluster in ca-central-1: Query successful
2025-05-27 01:37:27,831 - INFO - Testing AWS::Neptune::DBInstance in us-east-1
2025-05-27 01:37:27,832 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonNeptune",
              productFamily: "Database Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "usagetype", value_regex: "/InstanceUsage:db.t3.medium$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:27,835 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:28,012 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:37:28,013 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.098","unit":"Hrs","description":"$0.098 per instance hour (or partial hour) running Amazon Neptune","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:28,013 - INFO - ✅ AWS::Neptune::DBInstance in us-east-1: Query successful
2025-05-27 01:37:28,013 - INFO - Testing AWS::Neptune::DBInstance in ca-central-1
2025-05-27 01:37:28,013 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonNeptune",
              productFamily: "Database Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "usagetype", value_regex: "/InstanceUsage:db.t3.medium$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:28,015 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:28,187 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:37:28,187 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.108","unit":"Hrs","description":"$0.108 per instance hour (or partial hour) running Amazon Neptune","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:28,188 - INFO - ✅ AWS::Neptune::DBInstance in ca-central-1: Query successful
2025-05-27 01:37:28,188 - INFO - Testing AWS::Elasticsearch::Domain in us-east-1
2025-05-27 01:37:28,188 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonES",
              productFamily: "Amazon OpenSearch Service Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ESInstance/" },
                { key: "instanceType", value: "m4.large.search" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:28,189 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:28,352 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 187
2025-05-27 01:37:28,352 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.151","unit":"Hrs","description":"$0.151 per m4.large.search instance hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:28,352 - INFO - ✅ AWS::Elasticsearch::Domain in us-east-1: Query successful
2025-05-27 01:37:28,352 - INFO - Testing AWS::Elasticsearch::Domain in ca-central-1
2025-05-27 01:37:28,352 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonES",
              productFamily: "Amazon OpenSearch Service Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ESInstance/" },
                { key: "instanceType", value: "m4.large.search" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:28,354 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:28,525 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:37:28,525 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.176","unit":"Hrs","description":"$0.176 per m4.large.search instance hour (or partial hour) - CAN1","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:28,526 - INFO - ✅ AWS::Elasticsearch::Domain in ca-central-1: Query successful
2025-05-27 01:37:28,526 - INFO - Testing AWS::Lightsail::Instance in us-east-1
2025-05-27 01:37:28,526 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonLightsail",
              productFamily: "Lightsail Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/-BundleUsage:0.5GB$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:28,528 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:28,703 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:37:28,703 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00672","unit":"Hrs","description":"$0.00672 / Hour of 0.5GB bundle Instance including public IPv4 address","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:28,711 - INFO - ✅ AWS::Lightsail::Instance in us-east-1: Query successful
2025-05-27 01:37:28,712 - INFO - Testing AWS::Lightsail::Instance in ca-central-1
2025-05-27 01:37:28,712 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonLightsail",
              productFamily: "Lightsail Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/-BundleUsage:0.5GB$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:28,735 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:28,917 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:37:28,918 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00672","unit":"Hrs","description":"$0.00672 / Hour of 0.5GB bundle Instance including public IPv4 address","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:28,918 - INFO - ✅ AWS::Lightsail::Instance in ca-central-1: Query successful
2025-05-27 01:37:28,918 - INFO - Testing AWS::MQ::Broker in us-east-1
2025-05-27 01:37:28,918 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMQ",
              productFamily: "Broker Instances",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/mq.t3.micro/" },
                { key: "brokerEngine", value_regex: "/ActiveMQ/" },
                { key: "deploymentOption", value_regex: "/Single-AZ/" },
                { key: "operation", value_regex: "/CreateBroker/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:28,919 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:29,087 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 223
2025-05-27 01:37:29,088 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.02704","unit":"Hrs","description":"single-instance mq.t3.micro hour (or partial hour) running ActiveMQ in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:29,088 - INFO - ✅ AWS::MQ::Broker in us-east-1: Query successful
2025-05-27 01:37:29,088 - INFO - Testing AWS::MQ::Broker in ca-central-1
2025-05-27 01:37:29,088 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMQ",
              productFamily: "Broker Instances",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/mq.t3.micro/" },
                { key: "brokerEngine", value_regex: "/ActiveMQ/" },
                { key: "deploymentOption", value_regex: "/Single-AZ/" },
                { key: "operation", value_regex: "/CreateBroker/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:29,090 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:29,254 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 218
2025-05-27 01:37:29,255 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.03016","unit":"Hrs","description":"single-instance mq.t3.micro hour (or partial hour) running ActiveMQ in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:29,255 - INFO - ✅ AWS::MQ::Broker in ca-central-1: Query successful
2025-05-27 01:37:29,255 - INFO - Testing AWS::MSK::Cluster in us-east-1
2025-05-27 01:37:29,255 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMSK",
              productFamily: "Managed Streaming for Apache Kafka (MSK)",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/kafka.t3.small/i" },
                { key: "locationType", value: "AWS Region" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:29,258 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:29,427 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 198
2025-05-27 01:37:29,427 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0456","unit":"hours","description":"USD 0.0456 per Kafka.t3.small broker hour in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:29,427 - INFO - ✅ AWS::MSK::Cluster in us-east-1: Query successful
2025-05-27 01:37:29,427 - INFO - Testing AWS::MSK::Cluster in ca-central-1
2025-05-27 01:37:29,427 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMSK",
              productFamily: "Managed Streaming for Apache Kafka (MSK)",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/kafka.t3.small/i" },
                { key: "locationType", value: "AWS Region" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:29,429 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:29,604 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 193
2025-05-27 01:37:29,604 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0508","unit":"hours","description":"USD 0.0508 per Kafka.t3.small broker hour in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:29,604 - INFO - ✅ AWS::MSK::Cluster in ca-central-1: Query successful
2025-05-27 01:37:29,604 - INFO - Testing AWS::Config::ConfigRule in us-east-1
2025-05-27 01:37:29,604 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:29,606 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:29,774 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 220
2025-05-27 01:37:29,774 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"ConfigurationItemRecorded","description":"$0.003 per Configuration Item recorded in US East (N.Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:29,775 - INFO - ✅ AWS::Config::ConfigRule in us-east-1: Query successful
2025-05-27 01:37:29,776 - INFO - Testing AWS::Config::ConfigRule in ca-central-1
2025-05-27 01:37:29,776 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:29,778 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:29,933 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 222
2025-05-27 01:37:29,933 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"CAN1-ConfigurationItemRecorded","description":"$0.003 per  Configuration Item recorded in Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:29,933 - INFO - ✅ AWS::Config::ConfigRule in ca-central-1: Query successful
2025-05-27 01:37:29,933 - INFO - Testing AWS::Config::ConfigurationRecorder in us-east-1
2025-05-27 01:37:29,933 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:29,935 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:30,106 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 220
2025-05-27 01:37:30,107 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"ConfigurationItemRecorded","description":"$0.003 per Configuration Item recorded in US East (N.Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:30,108 - INFO - ✅ AWS::Config::ConfigurationRecorder in us-east-1: Query successful
2025-05-27 01:37:30,108 - INFO - Testing AWS::Config::ConfigurationRecorder in ca-central-1
2025-05-27 01:37:30,109 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:30,111 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:30,278 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 222
2025-05-27 01:37:30,279 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"CAN1-ConfigurationItemRecorded","description":"$0.003 per  Configuration Item recorded in Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:30,279 - INFO - ✅ AWS::Config::ConfigurationRecorder in ca-central-1: Query successful
2025-05-27 01:37:30,279 - INFO - Testing AWS::DMS::ReplicationInstance in us-east-1
2025-05-27 01:37:30,280 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDatabaseMigrationSvc",
              productFamily: "Database Migration Service",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "availabilityZone", value: "Single" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:30,283 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:30,469 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:30,470 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:30,470 - ERROR - ❌ AWS::DMS::ReplicationInstance in us-east-1: No products found in response
2025-05-27 01:37:30,471 - INFO - Testing AWS::DMS::ReplicationInstance in ca-central-1
2025-05-27 01:37:30,471 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDatabaseMigrationSvc",
              productFamily: "Database Migration Service",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "availabilityZone", value: "Single" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:30,476 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:30,650 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:30,650 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:30,650 - ERROR - ❌ AWS::DMS::ReplicationInstance in ca-central-1: No products found in response
2025-05-27 01:37:30,651 - INFO - Testing AWS::ApiGateway::Stage in us-east-1
2025-05-27 01:37:30,651 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "USE1-ApiGatewayRequest" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:30,653 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:30,825 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1475
2025-05-27 01:37:30,827 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"Requests","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"Requests","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"Requests","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"USE1-AmazonApiGateway-Request","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"USE1-AmazonApiGateway-Request","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"USE1-AmazonApiGateway-Request","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"USE1-AmazonApiGateway-Request","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:30,828 - INFO - ✅ AWS::ApiGateway::Stage in us-east-1: Query successful
2025-05-27 01:37:30,828 - INFO - Testing AWS::ApiGateway::Stage in ca-central-1
2025-05-27 01:37:30,828 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "CAN1-ApiGatewayRequest" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:30,832 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:30,995 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1473
2025-05-27 01:37:30,996 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"CAN1-AmazonApiGatewayRequest","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"CAN1-AmazonApiGatewayRequest","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"Requests","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"Requests","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"Requests","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:30,996 - INFO - ✅ AWS::ApiGateway::Stage in ca-central-1: Query successful
2025-05-27 01:37:30,996 - INFO - Testing AWS::CertificateManager::Certificate in us-east-1
2025-05-27 01:37:30,997 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCertificateManager",
              productFamily: "AWS Certificate Manager",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: ""}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:31,000 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:31,177 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 122
2025-05-27 01:37:31,177 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]}]}}

2025-05-27 01:37:31,178 - ERROR - ❌ AWS::CertificateManager::Certificate in us-east-1: No prices found in products
2025-05-27 01:37:31,178 - INFO - Testing AWS::CertificateManager::Certificate in ca-central-1
2025-05-27 01:37:31,178 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCertificateManager",
              productFamily: "AWS Certificate Manager",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: ""}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:31,180 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:31,362 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 122
2025-05-27 01:37:31,362 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]}]}}

2025-05-27 01:37:31,362 - ERROR - ❌ AWS::CertificateManager::Certificate in ca-central-1: No prices found in products
2025-05-27 01:37:31,362 - INFO - Testing AWS::DirectConnect::Connection in us-east-1
2025-05-27 01:37:31,363 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Direct Connect",
              region: "us-east-1",
              attributeFilters: [
                { key: "capacity", value: "1G" },
                { key: "usagetype", value_regex: "/us-east-1/" },
                { key: "connectionType", value_regex: "/dedicated/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:31,365 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:31,534 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:31,535 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:31,535 - ERROR - ❌ AWS::DirectConnect::Connection in us-east-1: No products found in response
2025-05-27 01:37:31,535 - INFO - Testing AWS::DirectConnect::Connection in ca-central-1
2025-05-27 01:37:31,535 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Direct Connect",
              region: "ca-central-1",
              attributeFilters: [
                { key: "capacity", value: "1G" },
                { key: "usagetype", value_regex: "/us-east-1/" },
                { key: "connectionType", value_regex: "/dedicated/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:31,538 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:31,717 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:31,718 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:31,718 - ERROR - ❌ AWS::DirectConnect::Connection in ca-central-1: No products found in response
2025-05-27 01:37:31,718 - INFO - Testing AWS::DirectConnect::VirtualInterface in us-east-1
2025-05-27 01:37:31,718 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Virtual Interface",
              region: "us-east-1",
              attributeFilters: [
                { key: "operation", value: "VirtualInterface" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:31,721 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:31,886 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:31,886 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:31,887 - ERROR - ❌ AWS::DirectConnect::VirtualInterface in us-east-1: No products found in response
2025-05-27 01:37:31,887 - INFO - Testing AWS::DirectConnect::VirtualInterface in ca-central-1
2025-05-27 01:37:31,887 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Virtual Interface",
              region: "ca-central-1",
              attributeFilters: [
                { key: "operation", value: "VirtualInterface" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:31,889 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:32,060 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:32,061 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:32,061 - ERROR - ❌ AWS::DirectConnect::VirtualInterface in ca-central-1: No products found in response
2025-05-27 01:37:32,061 - INFO - Testing AWS::DirectoryService::MicrosoftAD in us-east-1
2025-05-27 01:37:32,061 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "us-east-1",
              attributeFilters: [
                { key: "directoryType", value: "Microsoft AD" },
                { key: "directorySize", value: "Standard" },
                { key: "location", value: "US East (N. Virginia)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:32,064 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:32,227 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 234
2025-05-27 01:37:32,228 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.06","unit":"Hrs","description":"$0.060 per hour for Microsoft AD (Standard Edition) domain controllers in the US East (N. Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:32,229 - INFO - ✅ AWS::DirectoryService::MicrosoftAD in us-east-1: Query successful
2025-05-27 01:37:32,229 - INFO - Testing AWS::DirectoryService::MicrosoftAD in ca-central-1
2025-05-27 01:37:32,229 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "ca-central-1",
              attributeFilters: [
                { key: "directoryType", value: "Microsoft AD" },
                { key: "directorySize", value: "Standard" },
                { key: "location", value: "Canada (Central)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:32,233 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:32,399 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 230
2025-05-27 01:37:32,399 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.064","unit":"Hrs","description":"$0.064 per hour for Microsoft AD (Standard Edition) domain controllers in the Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:32,400 - INFO - ✅ AWS::DirectoryService::MicrosoftAD in ca-central-1: Query successful
2025-05-27 01:37:32,400 - INFO - Testing AWS::DirectoryService::SimpleAD in us-east-1
2025-05-27 01:37:32,400 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "us-east-1",
              attributeFilters: [
                { key: "directoryType", value_regex: "/Simple AD/i" },
                { key: "directorySize", value: "Small" },
                { key: "location", value: "US East (N. Virginia)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:32,402 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:32,579 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 206
2025-05-27 01:37:32,579 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per hour for a small directory in the US East (Northern Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:32,580 - INFO - ✅ AWS::DirectoryService::SimpleAD in us-east-1: Query successful
2025-05-27 01:37:32,580 - INFO - Testing AWS::DirectoryService::SimpleAD in ca-central-1
2025-05-27 01:37:32,580 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "ca-central-1",
              attributeFilters: [
                { key: "directoryType", value_regex: "/Simple AD/i" },
                { key: "directorySize", value: "Small" },
                { key: "location", value: "Canada (Central)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:32,582 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:32,765 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:32,765 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:32,765 - ERROR - ❌ AWS::DirectoryService::SimpleAD in ca-central-1: No products found in response
2025-05-27 01:37:32,765 - INFO - Testing AWS::EC2::ClientVpnEndpoint in us-east-1
2025-05-27 01:37:32,765 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "VPN Connection",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ClientVPN-ConnectionHours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:32,767 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:32,937 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:32,937 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:32,938 - ERROR - ❌ AWS::EC2::ClientVpnEndpoint in us-east-1: No products found in response
2025-05-27 01:37:32,938 - INFO - Testing AWS::EC2::ClientVpnEndpoint in ca-central-1
2025-05-27 01:37:32,938 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "VPN Connection",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ClientVPN-ConnectionHours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:32,940 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:33,115 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:37:33,116 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:37:33,116 - ERROR - ❌ AWS::EC2::ClientVpnEndpoint in ca-central-1: No products found in response
2025-05-27 01:37:33,116 - INFO - Testing AWS::EC2::DedicatedHost in us-east-1
2025-05-27 01:37:33,116 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Dedicated Host",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/HostUsage:m5$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:33,119 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:33,301 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 186
2025-05-27 01:37:33,302 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5.069","unit":"Hrs","description":"$5.069 per On Demand M5 Dedicated Host Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]}]}}

2025-05-27 01:37:33,302 - INFO - ✅ AWS::EC2::DedicatedHost in us-east-1: Query successful
2025-05-27 01:37:33,302 - INFO - Testing AWS::EC2::DedicatedHost in ca-central-1
2025-05-27 01:37:33,302 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Dedicated Host",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/HostUsage:m5$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:33,304 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:33,478 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 184
2025-05-27 01:37:33,479 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5.65","unit":"Hrs","description":"$5.65 per On Demand M5 Dedicated Host Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]}]}}

2025-05-27 01:37:33,479 - INFO - ✅ AWS::EC2::DedicatedHost in ca-central-1: Query successful
2025-05-27 01:37:33,479 - INFO - Testing AWS::EC2::SpotFleet in us-east-1
2025-05-27 01:37:33,480 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "m5.large" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "spot"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:33,482 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:33,656 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 662
2025-05-27 01:37:33,657 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[{"USD":"0.0434","unit":"Hrs","description":"","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]},{"prices":[]}]}}

2025-05-27 01:37:33,657 - INFO - ✅ AWS::EC2::SpotFleet in us-east-1: Query successful
2025-05-27 01:37:33,657 - INFO - Testing AWS::EC2::SpotFleet in ca-central-1
2025-05-27 01:37:33,658 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "m5.large" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "spot"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:33,660 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:33,827 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 662
2025-05-27 01:37:33,828 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[{"USD":"0.0481","unit":"Hrs","description":"","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]},{"prices":[]}]}}

2025-05-27 01:37:33,829 - INFO - ✅ AWS::EC2::SpotFleet in ca-central-1: Query successful
2025-05-27 01:37:33,829 - INFO - Testing AWS::EC2::TransitGateway in us-east-1
2025-05-27 01:37:33,829 - WARNING - Missing required element in query: productFamily
2025-05-27 01:37:33,829 - INFO - Testing AWS::EC2::TransitGateway in ca-central-1
2025-05-27 01:37:33,829 - WARNING - Missing required element in query: productFamily
2025-05-27 01:37:33,829 - INFO - Testing AWS::EC2::TransitGatewayVpcAttachment in us-east-1
2025-05-27 01:37:33,829 - WARNING - Missing required element in query: productFamily
2025-05-27 01:37:33,829 - INFO - Testing AWS::EC2::TransitGatewayVpcAttachment in ca-central-1
2025-05-27 01:37:33,829 - WARNING - Missing required element in query: productFamily
2025-05-27 01:37:33,829 - INFO - Testing AWS::ECS::Service in us-east-1
2025-05-27 01:37:33,829 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECS",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:33,831 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:33,998 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 174
2025-05-27 01:37:33,998 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04048","unit":"hours","description":"AWS Fargate - vCPU - US East (N.Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:33,998 - INFO - ✅ AWS::ECS::Service in us-east-1: Query successful
2025-05-27 01:37:33,999 - INFO - Testing AWS::ECS::Service in ca-central-1
2025-05-27 01:37:33,999 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECS",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:34,001 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:34,162 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 171
2025-05-27 01:37:34,163 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04456","unit":"hours","description":"AWS Fargate - vCPU  - Central (Canada)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:34,163 - INFO - ✅ AWS::ECS::Service in ca-central-1: Query successful
2025-05-27 01:37:34,163 - INFO - Testing AWS::EKS::FargateProfile in us-east-1
2025-05-27 01:37:34,163 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:34,166 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:34,342 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:37:34,342 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04048","unit":"hours","description":"AWS Fargate - vCPU - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:34,343 - INFO - ✅ AWS::EKS::FargateProfile in us-east-1: Query successful
2025-05-27 01:37:34,343 - INFO - Testing AWS::EKS::FargateProfile in ca-central-1
2025-05-27 01:37:34,343 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:34,346 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:34,525 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 170
2025-05-27 01:37:34,525 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04456","unit":"hours","description":"AWS Fargate - vCPU - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:34,526 - INFO - ✅ AWS::EKS::FargateProfile in ca-central-1: Query successful
2025-05-27 01:37:34,526 - INFO - Testing AWS::Events::EventBus in us-east-1
2025-05-27 01:37:34,526 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSEvents",
              productFamily: "EventBridge",
              region: "us-east-1",
              attributeFilters: [
                { key: "eventType", value: "Custom Event" },
                { key: "usagetype", value_regex: "/Event-64K-Chunks/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:34,528 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:34,698 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 216
2025-05-27 01:37:34,699 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"64K-Chunks","description":"$1.00 per million EventBridge custom events received in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:34,699 - INFO - ✅ AWS::Events::EventBus in us-east-1: Query successful
2025-05-27 01:37:34,699 - INFO - Testing AWS::Events::EventBus in ca-central-1
2025-05-27 01:37:34,699 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSEvents",
              productFamily: "EventBridge",
              region: "ca-central-1",
              attributeFilters: [
                { key: "eventType", value: "Custom Event" },
                { key: "usagetype", value_regex: "/Event-64K-Chunks/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:34,701 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:34,881 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 211
2025-05-27 01:37:34,882 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"64K-Chunks","description":"$1.00 per million EventBridge custom events received in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:34,882 - INFO - ✅ AWS::Events::EventBus in ca-central-1: Query successful
2025-05-27 01:37:34,882 - INFO - Testing AWS::FSx::FileSystem in us-east-1
2025-05-27 01:37:34,882 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonFSx",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "deploymentOption", value: "Single-AZ" },
                { key: "fileSystemType", value: "Windows" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:34,884 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:35,049 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 609
2025-05-27 01:37:35,050 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.13","unit":"GB-Mo","description":"$0.130 per GB-Month of provisioned Windows File Server storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.05","unit":"GB-Mo","description":"$0.05 per GB-Month of Windows File Server backup storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.013","unit":"GB-Mo","description":"$0.013 per GB-Month of provisioned Windows File Server Single-AZ HDD storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:35,050 - INFO - ✅ AWS::FSx::FileSystem in us-east-1: Query successful
2025-05-27 01:37:35,050 - INFO - Testing AWS::FSx::FileSystem in ca-central-1
2025-05-27 01:37:35,050 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonFSx",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "deploymentOption", value: "Single-AZ" },
                { key: "fileSystemType", value: "Windows" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:35,052 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:35,222 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 597
2025-05-27 01:37:35,223 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.014","unit":"GB-Mo","description":"$0.014 per GB-Month of provisioned Windows File Server Single-AZ HDD storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.143","unit":"GB-Mo","description":"$0.143 per GB-Month of provisioned Windows File Server storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.055","unit":"GB-Mo","description":"$0.055 per GB-Month of Windows File Server backup storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:35,223 - INFO - ✅ AWS::FSx::FileSystem in ca-central-1: Query successful
2025-05-27 01:37:35,223 - INFO - Testing AWS::GlobalAccelerator::Accelerator in us-east-1
2025-05-27 01:37:35,223 - WARNING - Missing required element in query: productFamily
2025-05-27 01:37:35,223 - INFO - Testing AWS::GlobalAccelerator::Accelerator in ca-central-1
2025-05-27 01:37:35,223 - WARNING - Missing required element in query: productFamily
2025-05-27 01:37:35,223 - INFO - Testing AWS::GlobalAccelerator::EndpointGroup in us-east-1
2025-05-27 01:37:35,223 - WARNING - Missing required element in query: productFamily
2025-05-27 01:37:35,223 - INFO - Testing AWS::GlobalAccelerator::EndpointGroup in ca-central-1
2025-05-27 01:37:35,223 - WARNING - Missing required element in query: productFamily
2025-05-27 01:37:35,223 - INFO - Testing AWS::Glue::Crawler in us-east-1
2025-05-27 01:37:35,223 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "us-east-1",
              attributeFilters: [
                { key: "operation", value_regex: "/^crawlerrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:35,225 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:35,391 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:37:35,392 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue crawler","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:35,392 - INFO - ✅ AWS::Glue::Crawler in us-east-1: Query successful
2025-05-27 01:37:35,392 - INFO - Testing AWS::Glue::Crawler in ca-central-1
2025-05-27 01:37:35,392 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "ca-central-1",
              attributeFilters: [
                { key: "operation", value_regex: "/^crawlerrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:35,394 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:35,565 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:37:35,565 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue crawler","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:35,565 - INFO - ✅ AWS::Glue::Crawler in ca-central-1: Query successful
2025-05-27 01:37:35,565 - INFO - Testing AWS::Glue::Database in us-east-1
2025-05-27 01:37:35,565 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value_regex: "/^data catalog storage$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:35,567 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:35,726 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 203
2025-05-27 01:37:35,726 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00001","unit":"Obj-Month","description":"$1 per 100,000 objects per month for AWS Glue Data Catalog storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:35,727 - INFO - ✅ AWS::Glue::Database in us-east-1: Query successful
2025-05-27 01:37:35,727 - INFO - Testing AWS::Glue::Database in ca-central-1
2025-05-27 01:37:35,727 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value_regex: "/^data catalog storage$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:35,729 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:35,897 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 203
2025-05-27 01:37:35,897 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00001","unit":"Obj-Month","description":"$1 per 100,000 objects per month for AWS Glue Data Catalog storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:35,897 - INFO - ✅ AWS::Glue::Database in ca-central-1: Query successful
2025-05-27 01:37:35,897 - INFO - Testing AWS::Glue::Job in us-east-1
2025-05-27 01:37:35,897 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value: "ETL Job run" },
                { key: "operation", value_regex: "/^jobrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:35,899 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:36,075 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:37:36,075 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue ETL job","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:36,075 - INFO - ✅ AWS::Glue::Job in us-east-1: Query successful
2025-05-27 01:37:36,076 - INFO - Testing AWS::Glue::Job in ca-central-1
2025-05-27 01:37:36,076 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value: "ETL Job run" },
                { key: "operation", value_regex: "/^jobrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:36,077 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:36,250 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:37:36,250 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue ETL job","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:36,251 - INFO - ✅ AWS::Glue::Job in ca-central-1: Query successful
2025-05-27 01:37:36,251 - INFO - Testing AWS::KinesisAnalytics::Application in us-east-1
2025-05-27 01:37:36,251 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisAnalytics",
              productFamily: "Kinesis Analytics",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/KPU-Hour-Java/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:36,252 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:36,434 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:37:36,434 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.11","unit":"KPU-Hour","description":"$0.11 per Kinesis Processing Unit-hour for Apache Flink applications","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:36,435 - INFO - ✅ AWS::KinesisAnalytics::Application in us-east-1: Query successful
2025-05-27 01:37:36,435 - INFO - Testing AWS::KinesisAnalytics::Application in ca-central-1
2025-05-27 01:37:36,435 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisAnalytics",
              productFamily: "Kinesis Analytics",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/KPU-Hour-Java/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:36,436 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:36,601 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 203
2025-05-27 01:37:36,602 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.123","unit":"KPU-Hour","description":"$0.123 per Kinesis Processing Unit-hour for Apache Flink applications","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:36,602 - INFO - ✅ AWS::KinesisAnalytics::Application in ca-central-1: Query successful
2025-05-27 01:37:36,602 - INFO - Testing AWS::KinesisFirehose::DeliveryStream in us-east-1
2025-05-27 01:37:36,602 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisFirehose",
              productFamily: "Kinesis Firehose",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value: "Event-by-Event Processing" },
                { key: "sourcetype", value: "" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:36,604 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:36,779 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 994
2025-05-27 01:37:36,779 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.075","unit":"GB","description":"Tier 1 $0.075 per GB of data ingested ","startUsageAmount":"0","endUsageAmount":"256000"},{"USD":"0.064","unit":"GB","description":"Tier 2 $0.064 per GB of data ingested ","startUsageAmount":"256000","endUsageAmount":"1024000"},{"USD":"0.053","unit":"GB","description":"Tier 3 $0.053 per GB of data ingested","startUsageAmount":"1024000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.08","unit":"GB","description":"Per GB of data ingested or delivered","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.029","unit":"GB","description":"Tier 1 $0.029 per GB of data ingested","startUsageAmount":"0","endUsageAmount":"512000"},{"USD":"0.025","unit":"GB","description":"Tier 2 $0.025 per GB of data ingested","startUsageAmount":"512000","endUsageAmount":"2048000"},{"USD":"0.02","unit":"GB","description":"Tier 3 $0.020 per GB of data ingested","startUsageAmount":"2048000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:36,779 - INFO - ✅ AWS::KinesisFirehose::DeliveryStream in us-east-1: Query successful
2025-05-27 01:37:36,779 - INFO - Testing AWS::KinesisFirehose::DeliveryStream in ca-central-1
2025-05-27 01:37:36,779 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisFirehose",
              productFamily: "Kinesis Firehose",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value: "Event-by-Event Processing" },
                { key: "sourcetype", value: "" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:36,781 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:36,948 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 996
2025-05-27 01:37:36,949 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.083","unit":"GB","description":"Tier 1 $0.083 per GB of data ingested ","startUsageAmount":"0","endUsageAmount":"256000"},{"USD":"0.07","unit":"GB","description":"Tier 2 $0.070 per GB of data ingested ","startUsageAmount":"256000","endUsageAmount":"1024000"},{"USD":"0.058","unit":"GB","description":"Tier 3 $0.058 per GB of data ingested","startUsageAmount":"1024000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.032","unit":"GB","description":"Tier 1 $0.032 per GB of data ingested","startUsageAmount":"0","endUsageAmount":"512000"},{"USD":"0.028","unit":"GB","description":"Tier 2 $0.028 per GB of data ingested","startUsageAmount":"512000","endUsageAmount":"2048000"},{"USD":"0.022","unit":"GB","description":"Tier 3 $0.022 per GB of data ingested","startUsageAmount":"2048000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0883","unit":"GB","description":"Per GB of data ingested or delivered","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:36,949 - INFO - ✅ AWS::KinesisFirehose::DeliveryStream in ca-central-1: Query successful
2025-05-27 01:37:36,949 - INFO - Testing AWS::MWAA::Environment in us-east-1
2025-05-27 01:37:36,949 - WARNING - Missing required element in query: productFamily
2025-05-27 01:37:36,949 - INFO - Testing AWS::MWAA::Environment in ca-central-1
2025-05-27 01:37:36,949 - WARNING - Missing required element in query: productFamily
2025-05-27 01:37:36,950 - INFO - Testing AWS::NetworkFirewall::Firewall in us-east-1
2025-05-27 01:37:36,950 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSNetworkFirewall",
              productFamily: "AWS Firewall",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-Endpoint-Hour$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:36,952 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:37,119 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 206
2025-05-27 01:37:37,120 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.395","unit":"Hourly","description":"$0.395 per endpoint hour for AWS Network Firewall in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:37,121 - INFO - ✅ AWS::NetworkFirewall::Firewall in us-east-1: Query successful
2025-05-27 01:37:37,121 - INFO - Testing AWS::NetworkFirewall::Firewall in ca-central-1
2025-05-27 01:37:37,121 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSNetworkFirewall",
              productFamily: "AWS Firewall",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-Endpoint-Hour$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:37,124 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:37,303 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:37:37,304 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.395","unit":"Hourly","description":"$0.395 per endpoint hour for AWS Network Firewall in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:37,304 - INFO - ✅ AWS::NetworkFirewall::Firewall in ca-central-1: Query successful
2025-05-27 01:37:37,304 - INFO - Testing AWS::Route53::RecordSet in us-east-1
2025-05-27 01:37:37,304 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              attributeFilters: [
                { key: "usagetype", value: "DNS-Queries" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:37,306 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:37,475 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 352
2025-05-27 01:37:37,476 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"4e-7","unit":"Queries","description":"$0.40 per 1,000,000 queries for the first 1 Billion queries","startUsageAmount":"0","endUsageAmount":"1000000000"},{"USD":"2e-7","unit":"Queries","description":"$0.20 per 1,000,000 queries over 1 Billion queries","startUsageAmount":"1000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:37,476 - INFO - ✅ AWS::Route53::RecordSet in us-east-1: Query successful
2025-05-27 01:37:37,476 - INFO - Testing AWS::Route53::RecordSet in ca-central-1
2025-05-27 01:37:37,476 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              attributeFilters: [
                { key: "usagetype", value: "DNS-Queries" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:37,478 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:37,652 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 352
2025-05-27 01:37:37,652 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"4e-7","unit":"Queries","description":"$0.40 per 1,000,000 queries for the first 1 Billion queries","startUsageAmount":"0","endUsageAmount":"1000000000"},{"USD":"2e-7","unit":"Queries","description":"$0.20 per 1,000,000 queries over 1 Billion queries","startUsageAmount":"1000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:37,653 - INFO - ✅ AWS::Route53::RecordSet in ca-central-1: Query successful
2025-05-27 01:37:37,653 - INFO - Testing AWS::Route53Resolver::ResolverEndpoint in us-east-1
2025-05-27 01:37:37,653 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ResolverNetworkInterface$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:37,657 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:37,832 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:37:37,832 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.125","unit":"Hours","description":"$0.125 per hour per Resolver Network Interface","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:37,833 - INFO - ✅ AWS::Route53Resolver::ResolverEndpoint in us-east-1: Query successful
2025-05-27 01:37:37,833 - INFO - Testing AWS::Route53Resolver::ResolverEndpoint in ca-central-1
2025-05-27 01:37:37,833 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ResolverNetworkInterface$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:37,835 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:37,992 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:37:37,993 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.125","unit":"Hours","description":"$0.125 per hour per Resolver Network Interface","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:37,993 - INFO - ✅ AWS::Route53Resolver::ResolverEndpoint in ca-central-1: Query successful
2025-05-27 01:37:37,993 - INFO - Testing AWS::SNS::Subscription in us-east-1
2025-05-27 01:37:37,993 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "Requests-Tier1" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:37,996 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:38,158 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:37:38,160 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:38,160 - INFO - ✅ AWS::SNS::Subscription in us-east-1: Query successful
2025-05-27 01:37:38,161 - INFO - Testing AWS::SNS::Subscription in ca-central-1
2025-05-27 01:37:38,161 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "CAN1-Requests-Tier1" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:37:38,165 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:37:38,329 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:37:38,330 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:37:38,331 - INFO - ✅ AWS::SNS::Subscription in ca-central-1: Query successful
2025-05-27 01:37:38,348 - INFO - Test completed. Detailed results saved to comprehensive_test_results.json
2025-05-27 01:39:08,437 - INFO - Starting comprehensive query validation test
2025-05-27 01:39:08,437 - INFO - Testing AWS::EC2::Instance in us-east-1
2025-05-27 01:39:08,437 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:08,443 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:08,615 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:39:08,616 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0104","unit":"Hrs","description":"$0.0104 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:08,616 - INFO - ✅ AWS::EC2::Instance in us-east-1: Query successful
2025-05-27 01:39:08,616 - INFO - Testing AWS::EC2::Instance in ca-central-1
2025-05-27 01:39:08,616 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:08,617 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:08,788 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:39:08,789 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0116","unit":"Hrs","description":"$0.0116 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:08,789 - INFO - ✅ AWS::EC2::Instance in ca-central-1: Query successful
2025-05-27 01:39:08,789 - INFO - Testing AWS::EC2::Volume in us-east-1
2025-05-27 01:39:08,789 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "volumeApiName", value: "gp3" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:08,790 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:08,961 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 217
2025-05-27 01:39:08,961 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.08","unit":"GB-Mo","description":"$0.08 per GB-month of General Purpose (gp3) provisioned storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:08,962 - INFO - ✅ AWS::EC2::Volume in us-east-1: Query successful
2025-05-27 01:39:08,962 - INFO - Testing AWS::EC2::Volume in ca-central-1
2025-05-27 01:39:08,962 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "volumeApiName", value: "gp3" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:08,963 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:09,141 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 214
2025-05-27 01:39:09,142 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.088","unit":"GB-Mo","description":"$0.088 per GB-month of General Purpose (gp3) provisioned storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:09,142 - INFO - ✅ AWS::EC2::Volume in ca-central-1: Query successful
2025-05-27 01:39:09,142 - INFO - Testing AWS::EC2::EIP in us-east-1
2025-05-27 01:39:09,142 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "IP Address",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ElasticIP:IdleAddress/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:09,144 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:09,311 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 381
2025-05-27 01:39:09,312 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Hrs","description":"$0.00 per Elastic IP address not attached to a running instance for the first hour","startUsageAmount":"0","endUsageAmount":"1"},{"USD":"0.005","unit":"Hrs","description":"$0.005 per Elastic IP address not attached to a running instance per hour (prorated)","startUsageAmount":"1","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:09,312 - INFO - ✅ AWS::EC2::EIP in us-east-1: Query successful
2025-05-27 01:39:09,312 - INFO - Testing AWS::EC2::EIP in ca-central-1
2025-05-27 01:39:09,312 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "IP Address",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ElasticIP:IdleAddress/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:09,314 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:09,472 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 381
2025-05-27 01:39:09,473 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Hrs","description":"$0.00 per Elastic IP address not attached to a running instance for the first hour","startUsageAmount":"0","endUsageAmount":"1"},{"USD":"0.005","unit":"Hrs","description":"$0.005 per Elastic IP address not attached to a running instance per hour (prorated)","startUsageAmount":"1","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:09,473 - INFO - ✅ AWS::EC2::EIP in ca-central-1: Query successful
2025-05-27 01:39:09,473 - INFO - Testing AWS::EC2::Snapshot in us-east-1
2025-05-27 01:39:09,473 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage Snapshot",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EBS:SnapshotUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:09,474 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:09,652 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 202
2025-05-27 01:39:09,652 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"GB-Mo","description":"$0.05 per GB-Month of snapshot data stored - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:09,652 - INFO - ✅ AWS::EC2::Snapshot in us-east-1: Query successful
2025-05-27 01:39:09,652 - INFO - Testing AWS::EC2::Snapshot in ca-central-1
2025-05-27 01:39:09,652 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage Snapshot",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EBS:SnapshotUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:09,654 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:09,825 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 193
2025-05-27 01:39:09,826 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.055","unit":"GB-Mo","description":"$0.055 per GB-Month of snapshot data stored - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:09,827 - INFO - ✅ AWS::EC2::Snapshot in ca-central-1: Query successful
2025-05-27 01:39:09,827 - INFO - Testing AWS::RDS::DBInstance in us-east-1
2025-05-27 01:39:09,827 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.micro" },
                { key: "databaseEngine", value: "MySQL" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:09,829 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:10,007 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 395
2025-05-27 01:39:10,009 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.034","unit":"Hrs","description":"USD 0.034 per db.t3.micro Multi-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.017","unit":"Hrs","description":"USD 0.017 per db.t3.micro Single-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:10,010 - INFO - ✅ AWS::RDS::DBInstance in us-east-1: Query successful
2025-05-27 01:39:10,010 - INFO - Testing AWS::RDS::DBInstance in ca-central-1
2025-05-27 01:39:10,010 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.micro" },
                { key: "databaseEngine", value: "MySQL" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:10,015 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:10,190 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 395
2025-05-27 01:39:10,192 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.019","unit":"Hrs","description":"USD 0.019 per db.t3.micro Single-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.037","unit":"Hrs","description":"USD 0.037 per db.t3.micro Multi-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:10,193 - INFO - ✅ AWS::RDS::DBInstance in ca-central-1: Query successful
2025-05-27 01:39:10,193 - INFO - Testing AWS::RDS::DBCluster in us-east-1
2025-05-27 01:39:10,193 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "databaseEngine", value: "Any" },
                { key: "usagetype", value_regex: "/Aurora.*StorageUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:10,197 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:10,370 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 354
2025-05-27 01:39:10,371 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.225","unit":"GB-Mo","description":"USD 0.225 per GB-month of I/O-Optimized consumed storage (Aurora MySQL)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.10 per GB-month of consumed storage (Aurora)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:10,372 - INFO - ✅ AWS::RDS::DBCluster in us-east-1: Query successful
2025-05-27 01:39:10,372 - INFO - Testing AWS::RDS::DBCluster in ca-central-1
2025-05-27 01:39:10,372 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "databaseEngine", value: "Any" },
                { key: "usagetype", value_regex: "/Aurora.*StorageUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:10,375 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:10,538 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 366
2025-05-27 01:39:10,539 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.11","unit":"GB-Mo","description":"USD 0.11 per GB-month of consumed storage for Aurora MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.248","unit":"GB-Mo","description":"USD 0.248 per GB-month of I/O-Optimized consumed storage (Aurora MySQL)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:10,540 - INFO - ✅ AWS::RDS::DBCluster in ca-central-1: Query successful
2025-05-27 01:39:10,540 - INFO - Testing AWS::S3::Bucket in us-east-1
2025-05-27 01:39:10,540 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonS3",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/TimedStorage-ByteHrs/" },
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:10,545 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:10,719 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 483
2025-05-27 01:39:10,720 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.023","unit":"GB-Mo","description":"$0.023 per GB - first 50 TB / month of storage used","startUsageAmount":"0","endUsageAmount":"51200"},{"USD":"0.022","unit":"GB-Mo","description":"$0.022 per GB - next 450 TB / month of storage used","startUsageAmount":"51200","endUsageAmount":"512000"},{"USD":"0.021","unit":"GB-Mo","description":"$0.021 per GB - storage used / month over 500 TB","startUsageAmount":"512000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:10,721 - INFO - ✅ AWS::S3::Bucket in us-east-1: Query successful
2025-05-27 01:39:10,721 - INFO - Testing AWS::S3::Bucket in ca-central-1
2025-05-27 01:39:10,722 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonS3",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/TimedStorage-ByteHrs/" },
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:10,727 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:10,905 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 483
2025-05-27 01:39:10,906 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.025","unit":"GB-Mo","description":"$0.025 per GB - first 50 TB / month of storage used","startUsageAmount":"0","endUsageAmount":"51200"},{"USD":"0.024","unit":"GB-Mo","description":"$0.024 per GB - next 450 TB / month of storage used","startUsageAmount":"51200","endUsageAmount":"512000"},{"USD":"0.023","unit":"GB-Mo","description":"$0.023 per GB - storage used / month over 500 TB","startUsageAmount":"512000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:10,906 - INFO - ✅ AWS::S3::Bucket in ca-central-1: Query successful
2025-05-27 01:39:10,907 - INFO - Testing AWS::Lambda::Function in us-east-1
2025-05-27 01:39:10,907 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSLambda",
              productFamily: "Serverless",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/GB-Second/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:10,911 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:11,074 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 2069
2025-05-27 01:39:11,076 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"3.09e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage for ARM - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000166667","unit":"seconds","description":"AWS Lambda - Total Compute - US East (Northern Virginia)-Tier-1","startUsageAmount":"0","endUsageAmount":"6000000000"},{"USD":"0.000015","unit":"seconds","description":"AWS Lambda - Total Compute - US East (Northern Virginia)-Tier-2","startUsageAmount":"6000000000","endUsageAmount":"15000000000"},{"USD":"0.0000133334","unit":"seconds","description":"AWS Lambda - Total Compute - US East (Northern Virginia)-Tier-3","startUsageAmount":"15000000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00005001","unit":"Lambda-GB-Second","description":"AWS Lambda Edge - Total Compute - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000133334","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - US East (Northern Virginia)-Tier-1","startUsageAmount":"0","endUsageAmount":"7500000000"},{"USD":"0.0000120001","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - US East (Northern Virginia)-Tier-2","startUsageAmount":"7500000000","endUsageAmount":"18750000000"},{"USD":"0.0000106667","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - US East (Northern Virginia)-Tier-3","startUsageAmount":"18750000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000077778","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute (Provisioned) for ARM - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3.09e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000097222","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute (Provisioned) - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:11,077 - INFO - ✅ AWS::Lambda::Function in us-east-1: Query successful
2025-05-27 01:39:11,077 - INFO - Testing AWS::Lambda::Function in ca-central-1
2025-05-27 01:39:11,078 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSLambda",
              productFamily: "Serverless",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/GB-Second/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:11,081 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:11,252 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 2003
2025-05-27 01:39:11,253 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000166667","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute - Canada (Central)-Tier-1","startUsageAmount":"0","endUsageAmount":"6000000000"},{"USD":"0.000015","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute - Canada (Central)-Tier-2","startUsageAmount":"6000000000","endUsageAmount":"15000000000"},{"USD":"0.0000133334","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute - Canada (Central)-Tier-3","startUsageAmount":"15000000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000133334","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - Canada (Central)-Tier-1","startUsageAmount":"0","endUsageAmount":"7500000000"},{"USD":"0.0000120001","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - Canada (Central)-Tier-2","startUsageAmount":"7500000000","endUsageAmount":"18750000000"},{"USD":"0.0000106667","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - Canada (Central)-Tier-3","startUsageAmount":"18750000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3.4e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage for ARM - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00005001","unit":"Lambda-GB-Second","description":"AWS Lambda Edge - Total Compute - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3.4e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000108407","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute (Provisioned) - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000086726","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM (Provisioned) - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:11,254 - INFO - ✅ AWS::Lambda::Function in ca-central-1: Query successful
2025-05-27 01:39:11,254 - INFO - Testing AWS::ElasticLoadBalancingV2::LoadBalancer in us-east-1
2025-05-27 01:39:11,255 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" },
                { key: "operation", value: "LoadBalancing" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:11,260 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:11,432 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:39:11,433 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.025","unit":"Hrs","description":"$0.025 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:11,434 - INFO - ✅ AWS::ElasticLoadBalancingV2::LoadBalancer in us-east-1: Query successful
2025-05-27 01:39:11,434 - INFO - Testing AWS::ElasticLoadBalancingV2::LoadBalancer in ca-central-1
2025-05-27 01:39:11,435 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" },
                { key: "operation", value: "LoadBalancing" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:11,438 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:11,612 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:39:11,613 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0275","unit":"Hrs","description":"$0.0275 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:11,614 - INFO - ✅ AWS::ElasticLoadBalancingV2::LoadBalancer in ca-central-1: Query successful
2025-05-27 01:39:11,615 - INFO - Testing AWS::ElasticLoadBalancing::LoadBalancer in us-east-1
2025-05-27 01:39:11,615 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "us-east-1",
              attributeFilters: [
                { key: "locationType", value: "AWS Region" },
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:11,620 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:11,789 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:39:11,790 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.025","unit":"Hrs","description":"$0.025 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:11,791 - INFO - ✅ AWS::ElasticLoadBalancing::LoadBalancer in us-east-1: Query successful
2025-05-27 01:39:11,791 - INFO - Testing AWS::ElasticLoadBalancing::LoadBalancer in ca-central-1
2025-05-27 01:39:11,792 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "ca-central-1",
              attributeFilters: [
                { key: "locationType", value: "AWS Region" },
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:11,795 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:11,958 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:39:11,959 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0275","unit":"Hrs","description":"$0.0275 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:11,960 - INFO - ✅ AWS::ElasticLoadBalancing::LoadBalancer in ca-central-1: Query successful
2025-05-27 01:39:11,960 - INFO - Testing AWS::Logs::LogGroup in us-east-1
2025-05-27 01:39:11,960 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Data Payload",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/DataProcessing-Bytes/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:11,964 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:12,145 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 406
2025-05-27 01:39:12,146 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.5","unit":"GB","description":"$0.50 per GB custom log data ingested in Standard log class - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.5","unit":"GB","description":"$0.50 per GB custom log data ingested in Standard log class - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:12,147 - INFO - ✅ AWS::Logs::LogGroup in us-east-1: Query successful
2025-05-27 01:39:12,147 - INFO - Testing AWS::Logs::LogGroup in ca-central-1
2025-05-27 01:39:12,147 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Data Payload",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/DataProcessing-Bytes/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:12,152 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:12,331 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 205
2025-05-27 01:39:12,332 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.55","unit":"GB","description":"$0.55 per GB custom log data ingested in Standard log class - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:12,333 - INFO - ✅ AWS::Logs::LogGroup in ca-central-1: Query successful
2025-05-27 01:39:12,333 - INFO - Testing AWS::CloudWatch::Dashboard in us-east-1
2025-05-27 01:39:12,333 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Dashboard",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Dashboard/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:12,337 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:12,516 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 730
2025-05-27 01:39:12,517 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"2.834112","unit":"Dashboards","description":"20.36 CNY Dashboard per Month","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"2.834112","unit":"Dashboards","description":"20.36 CNY per Dashboard per Month (>50 metrics)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3","unit":"Dashboards","description":"$3.00 per Dashboard per Month (>50 metrics)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3","unit":"Dashboards","description":"$3.00 per Dashboard per Month","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0","unit":"Dashboards","description":"Global","startUsageAmount":"0","endUsageAmount":"3"}]}]}}

2025-05-27 01:39:12,517 - INFO - ✅ AWS::CloudWatch::Dashboard in us-east-1: Query successful
2025-05-27 01:39:12,517 - INFO - Testing AWS::CloudWatch::Dashboard in ca-central-1
2025-05-27 01:39:12,517 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Dashboard",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Dashboard/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:12,520 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:12,696 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 730
2025-05-27 01:39:12,696 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"2.832076","unit":"Dashboards","description":"20.36 CNY Dashboard per Month","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"2.832076","unit":"Dashboards","description":"20.36 CNY per Dashboard per Month (>50 metrics)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3","unit":"Dashboards","description":"$3.00 per Dashboard per Month (>50 metrics)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3","unit":"Dashboards","description":"$3.00 per Dashboard per Month","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0","unit":"Dashboards","description":"Global","startUsageAmount":"0","endUsageAmount":"3"}]}]}}

2025-05-27 01:39:12,697 - INFO - ✅ AWS::CloudWatch::Dashboard in ca-central-1: Query successful
2025-05-27 01:39:12,697 - INFO - Testing AWS::CloudWatch::Alarm in us-east-1
2025-05-27 01:39:12,697 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Alarm",
              region: "us-east-1",
              attributeFilters: [
                { key: "alarmType", value_regex: "/Standard/" },
                { key: "usagetype", value_regex: "/AlarmMonitorUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:12,699 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:12,880 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 210
2025-05-27 01:39:12,880 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Alarms","description":"$0.10 per alarm metric month (standard resolution) - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:12,881 - INFO - ✅ AWS::CloudWatch::Alarm in us-east-1: Query successful
2025-05-27 01:39:12,881 - INFO - Testing AWS::CloudWatch::Alarm in ca-central-1
2025-05-27 01:39:12,881 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Alarm",
              region: "ca-central-1",
              attributeFilters: [
                { key: "alarmType", value_regex: "/Standard/" },
                { key: "usagetype", value_regex: "/AlarmMonitorUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:12,883 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:13,053 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 199
2025-05-27 01:39:13,054 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Alarms","description":"$0.10 per alarm metric month (standard resolution) - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:13,054 - INFO - ✅ AWS::CloudWatch::Alarm in ca-central-1: Query successful
2025-05-27 01:39:13,054 - INFO - Testing AWS::DynamoDB::Table in us-east-1
2025-05-27 01:39:13,054 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDynamoDB",
              productFamily: "Amazon DynamoDB PayPerRequest Throughput",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value: "DDB-ReadUnits" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:13,056 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:13,225 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 195
2025-05-27 01:39:13,226 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1.25e-7","unit":"ReadRequestUnits","description":"$0.125 per million read request units (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:13,226 - INFO - ✅ AWS::DynamoDB::Table in us-east-1: Query successful
2025-05-27 01:39:13,226 - INFO - Testing AWS::DynamoDB::Table in ca-central-1
2025-05-27 01:39:13,226 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDynamoDB",
              productFamily: "Amazon DynamoDB PayPerRequest Throughput",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value: "DDB-ReadUnits" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:13,228 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:13,399 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 202
2025-05-27 01:39:13,399 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1.375e-7","unit":"ReadRequestUnits","description":"$0.1375 per million read request units (Canada (Central))","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:13,400 - INFO - ✅ AWS::DynamoDB::Table in ca-central-1: Query successful
2025-05-27 01:39:13,400 - INFO - Testing AWS::ApiGateway::RestApi in us-east-1
2025-05-27 01:39:13,400 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:13,402 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:13,577 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1475
2025-05-27 01:39:13,578 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"Requests","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"Requests","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"Requests","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"USE1-AmazonApiGateway-Request","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"USE1-AmazonApiGateway-Request","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"USE1-AmazonApiGateway-Request","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"USE1-AmazonApiGateway-Request","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:13,578 - INFO - ✅ AWS::ApiGateway::RestApi in us-east-1: Query successful
2025-05-27 01:39:13,578 - INFO - Testing AWS::ApiGateway::RestApi in ca-central-1
2025-05-27 01:39:13,578 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:13,581 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:13,758 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1473
2025-05-27 01:39:13,759 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"CAN1-AmazonApiGatewayRequest","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"CAN1-AmazonApiGatewayRequest","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"Requests","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"Requests","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"Requests","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:13,759 - INFO - ✅ AWS::ApiGateway::RestApi in ca-central-1: Query successful
2025-05-27 01:39:13,759 - INFO - Testing AWS::ApiGatewayV2::Api in us-east-1
2025-05-27 01:39:13,759 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayHttpRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:13,762 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:13,954 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 377
2025-05-27 01:39:13,954 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"Requests","description":"$1/million requests - API Gateway HTTP API (first 300 million)","startUsageAmount":"0","endUsageAmount":"300000000"},{"USD":"9e-7","unit":"Requests","description":"$0.9/million requests - API Gateway HTTP API (more than 300 million)","startUsageAmount":"300000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:13,954 - INFO - ✅ AWS::ApiGatewayV2::Api in us-east-1: Query successful
2025-05-27 01:39:13,955 - INFO - Testing AWS::ApiGatewayV2::Api in ca-central-1
2025-05-27 01:39:13,955 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayHttpRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:13,957 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:14,135 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 384
2025-05-27 01:39:14,135 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00000111","unit":"Requests","description":"$1.11/million requests - API Gateway HTTP API (first 300 million)","startUsageAmount":"0","endUsageAmount":"300000000"},{"USD":"0.000001","unit":"Requests","description":"$1/million requests - API Gateway HTTP API (more than 300 million)","startUsageAmount":"300000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:14,135 - INFO - ✅ AWS::ApiGatewayV2::Api in ca-central-1: Query successful
2025-05-27 01:39:14,135 - INFO - Testing AWS::KMS::Key in us-east-1
2025-05-27 01:39:14,135 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awskms",
              productFamily: "Encryption Key",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "us-east-1-KMS-Keys" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:14,137 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:14,313 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 190
2025-05-27 01:39:14,313 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1","unit":"Keys","description":"$1 per customer managed KMS key version in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:14,313 - INFO - ✅ AWS::KMS::Key in us-east-1: Query successful
2025-05-27 01:39:14,313 - INFO - Testing AWS::KMS::Key in ca-central-1
2025-05-27 01:39:14,313 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awskms",
              productFamily: "Encryption Key",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "ca-central-1-KMS-Keys" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:14,315 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:14,483 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 185
2025-05-27 01:39:14,483 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1","unit":"Keys","description":"$1 per customer managed KMS key version in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:14,483 - INFO - ✅ AWS::KMS::Key in ca-central-1: Query successful
2025-05-27 01:39:14,484 - INFO - Testing AWS::EKS::Cluster in us-east-1
2025-05-27 01:39:14,484 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EKS.*Cluster/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:14,486 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:14,665 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 329
2025-05-27 01:39:14,665 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Hours","description":"Amazon EKS cluster usage in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.1","unit":"hours","description":"Amazon EKS local cluster usage on AWS Outposts","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:14,666 - INFO - ✅ AWS::EKS::Cluster in us-east-1: Query successful
2025-05-27 01:39:14,666 - INFO - Testing AWS::EKS::Cluster in ca-central-1
2025-05-27 01:39:14,666 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EKS.*Cluster/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:14,667 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:14,850 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 324
2025-05-27 01:39:14,850 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Hours","description":"Amazon EKS cluster usage in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.1","unit":"hours","description":"Amazon EKS local cluster usage on AWS Outposts","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:14,850 - INFO - ✅ AWS::EKS::Cluster in ca-central-1: Query successful
2025-05-27 01:39:14,850 - INFO - Testing AWS::EKS::Nodegroup in us-east-1
2025-05-27 01:39:14,850 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.medium" },
                { key: "tenancy", value: "Shared" },
                { key: "operatingSystem", value: "Linux" },
                { key: "preInstalledSw", value: "NA" },
                { key: "licenseModel", value: "No License required" },
                { key: "capacitystatus", value: "Used" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:14,852 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:15,027 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 181
2025-05-27 01:39:15,028 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0416","unit":"Hrs","description":"$0.0416 per On Demand Linux t3.medium Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:15,028 - INFO - ✅ AWS::EKS::Nodegroup in us-east-1: Query successful
2025-05-27 01:39:15,028 - INFO - Testing AWS::EKS::Nodegroup in ca-central-1
2025-05-27 01:39:15,028 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.medium" },
                { key: "tenancy", value: "Shared" },
                { key: "operatingSystem", value: "Linux" },
                { key: "preInstalledSw", value: "NA" },
                { key: "licenseModel", value: "No License required" },
                { key: "capacitystatus", value: "Used" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:15,030 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:15,210 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 181
2025-05-27 01:39:15,210 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0464","unit":"Hrs","description":"$0.0464 per On Demand Linux t3.medium Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:15,210 - INFO - ✅ AWS::EKS::Nodegroup in ca-central-1: Query successful
2025-05-27 01:39:15,210 - INFO - Testing AWS::ElastiCache::CacheCluster in us-east-1
2025-05-27 01:39:15,211 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:15,212 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:15,387 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:39:15,387 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.017","unit":"Hrs","description":"$0.017 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:15,388 - INFO - ✅ AWS::ElastiCache::CacheCluster in us-east-1: Query successful
2025-05-27 01:39:15,388 - INFO - Testing AWS::ElastiCache::CacheCluster in ca-central-1
2025-05-27 01:39:15,388 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:15,389 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:15,559 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:39:15,559 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.019","unit":"Hrs","description":"$0.019 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:15,560 - INFO - ✅ AWS::ElastiCache::CacheCluster in ca-central-1: Query successful
2025-05-27 01:39:15,560 - INFO - Testing AWS::ElastiCache::ReplicationGroup in us-east-1
2025-05-27 01:39:15,560 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:15,561 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:15,748 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:39:15,749 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.017","unit":"Hrs","description":"$0.017 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:15,749 - INFO - ✅ AWS::ElastiCache::ReplicationGroup in us-east-1: Query successful
2025-05-27 01:39:15,749 - INFO - Testing AWS::ElastiCache::ReplicationGroup in ca-central-1
2025-05-27 01:39:15,749 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:15,750 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:15,925 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:39:15,925 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.019","unit":"Hrs","description":"$0.019 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:15,925 - INFO - ✅ AWS::ElastiCache::ReplicationGroup in ca-central-1: Query successful
2025-05-27 01:39:15,925 - INFO - Testing AWS::Redshift::Cluster in us-east-1
2025-05-27 01:39:15,925 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRedshift",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "dc2.large" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:15,927 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:16,102 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 211
2025-05-27 01:39:16,103 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.25","unit":"Hrs","description":"$0.250 per Redshift Dense Compute Large (DC2.L) Compute Node-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:16,103 - INFO - ✅ AWS::Redshift::Cluster in us-east-1: Query successful
2025-05-27 01:39:16,103 - INFO - Testing AWS::Redshift::Cluster in ca-central-1
2025-05-27 01:39:16,103 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRedshift",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "dc2.large" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:16,105 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:16,274 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 212
2025-05-27 01:39:16,275 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.275","unit":"Hrs","description":"$0.275 per Redshift Dense Compute Large (DC2.L) Compute Node-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:16,276 - INFO - ✅ AWS::Redshift::Cluster in ca-central-1: Query successful
2025-05-27 01:39:16,276 - INFO - Testing AWS::Route53::HostedZone in us-east-1
2025-05-27 01:39:16,276 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Zone",
              attributeFilters: [
                { key: "usagetype", value: "HostedZone" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:16,279 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:16,436 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 331
2025-05-27 01:39:16,437 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.5","unit":"HostedZone","description":"$0.50 per Hosted Zone for the first 25 Hosted Zones","startUsageAmount":"0","endUsageAmount":"25"},{"USD":"0.1","unit":"HostedZone","description":"$0.10 per Hosted Zone for additional Hosted Zones","startUsageAmount":"25","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:16,437 - INFO - ✅ AWS::Route53::HostedZone in us-east-1: Query successful
2025-05-27 01:39:16,438 - INFO - Testing AWS::Route53::HostedZone in ca-central-1
2025-05-27 01:39:16,438 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Zone",
              attributeFilters: [
                { key: "usagetype", value: "HostedZone" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:16,441 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:16,606 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 331
2025-05-27 01:39:16,606 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.5","unit":"HostedZone","description":"$0.50 per Hosted Zone for the first 25 Hosted Zones","startUsageAmount":"0","endUsageAmount":"25"},{"USD":"0.1","unit":"HostedZone","description":"$0.10 per Hosted Zone for additional Hosted Zones","startUsageAmount":"25","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:16,607 - INFO - ✅ AWS::Route53::HostedZone in ca-central-1: Query successful
2025-05-27 01:39:16,607 - INFO - Testing AWS::Route53::HealthCheck in us-east-1
2025-05-27 01:39:16,607 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Health Check",
              attributeFilters: [
                { key: "usagetype", value: "Health-Check-AWS" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:16,608 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:16,770 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 339
2025-05-27 01:39:16,770 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Mo","description":"First 50 Health Checks of AWS endpoints are free of charge","startUsageAmount":"0","endUsageAmount":"50"},{"USD":"0.5","unit":"Mo","description":"$0.50 per Health Check for additional Health Checks of AWS endpoints","startUsageAmount":"50","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:16,770 - INFO - ✅ AWS::Route53::HealthCheck in us-east-1: Query successful
2025-05-27 01:39:16,770 - INFO - Testing AWS::Route53::HealthCheck in ca-central-1
2025-05-27 01:39:16,770 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Health Check",
              attributeFilters: [
                { key: "usagetype", value: "Health-Check-AWS" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:16,772 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:16,953 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 339
2025-05-27 01:39:16,953 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Mo","description":"First 50 Health Checks of AWS endpoints are free of charge","startUsageAmount":"0","endUsageAmount":"50"},{"USD":"0.5","unit":"Mo","description":"$0.50 per Health Check for additional Health Checks of AWS endpoints","startUsageAmount":"50","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:16,953 - INFO - ✅ AWS::Route53::HealthCheck in ca-central-1: Query successful
2025-05-27 01:39:16,953 - INFO - Testing AWS::SNS::Topic in us-east-1
2025-05-27 01:39:16,953 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:16,955 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:17,131 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:39:17,131 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:17,131 - INFO - ✅ AWS::SNS::Topic in us-east-1: Query successful
2025-05-27 01:39:17,131 - INFO - Testing AWS::SNS::Topic in ca-central-1
2025-05-27 01:39:17,131 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:17,133 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:17,304 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:39:17,305 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:17,305 - INFO - ✅ AWS::SNS::Topic in ca-central-1: Query successful
2025-05-27 01:39:17,305 - INFO - Testing AWS::SQS::Queue in us-east-1
2025-05-27 01:39:17,305 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:17,307 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:17,483 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:39:17,483 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:17,484 - INFO - ✅ AWS::SQS::Queue in us-east-1: Query successful
2025-05-27 01:39:17,484 - INFO - Testing AWS::SQS::Queue in ca-central-1
2025-05-27 01:39:17,484 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:17,486 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:17,654 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:39:17,654 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:17,654 - INFO - ✅ AWS::SQS::Queue in ca-central-1: Query successful
2025-05-27 01:39:17,654 - INFO - Testing AWS::SecretsManager::Secret in us-east-1
2025-05-27 01:39:17,654 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSecretsManager",
              productFamily: "Secret",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:17,656 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:17,830 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 147
2025-05-27 01:39:17,830 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.4","unit":"Secrets","description":"$0.40 per Secret","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:17,830 - INFO - ✅ AWS::SecretsManager::Secret in us-east-1: Query successful
2025-05-27 01:39:17,830 - INFO - Testing AWS::SecretsManager::Secret in ca-central-1
2025-05-27 01:39:17,830 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSecretsManager",
              productFamily: "Secret",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:17,832 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:18,004 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 147
2025-05-27 01:39:18,005 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.4","unit":"Secrets","description":"$0.40 per Secret","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:18,005 - INFO - ✅ AWS::SecretsManager::Secret in ca-central-1: Query successful
2025-05-27 01:39:18,005 - INFO - Testing AWS::StepFunctions::StateMachine in us-east-1
2025-05-27 01:39:18,005 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonStates",
              productFamily: "AWS Step Functions",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/StateTransition/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:18,007 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:18,184 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:39:18,184 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000025","unit":"StateTransitions","description":"$0.000025 per state transition","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:18,185 - INFO - ✅ AWS::StepFunctions::StateMachine in us-east-1: Query successful
2025-05-27 01:39:18,185 - INFO - Testing AWS::StepFunctions::StateMachine in ca-central-1
2025-05-27 01:39:18,185 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonStates",
              productFamily: "AWS Step Functions",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/StateTransition/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:18,186 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:18,367 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:39:18,367 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000025","unit":"StateTransitions","description":"$0.000025 per state transition","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:18,367 - INFO - ✅ AWS::StepFunctions::StateMachine in ca-central-1: Query successful
2025-05-27 01:39:18,367 - INFO - Testing AWS::EC2::NatGateway in us-east-1
2025-05-27 01:39:18,367 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "NAT Gateway",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/NatGateway-Hours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:18,369 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:18,544 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 156
2025-05-27 01:39:18,546 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.045","unit":"Hrs","description":"$0.045 per NAT Gateway Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:18,548 - INFO - ✅ AWS::EC2::NatGateway in us-east-1: Query successful
2025-05-27 01:39:18,555 - INFO - Testing AWS::EC2::NatGateway in ca-central-1
2025-05-27 01:39:18,562 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "NAT Gateway",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/NatGateway-Hours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:18,627 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:18,811 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 154
2025-05-27 01:39:18,812 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per NAT Gateway Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:18,812 - INFO - ✅ AWS::EC2::NatGateway in ca-central-1: Query successful
2025-05-27 01:39:18,812 - INFO - Testing AWS::EC2::VPNConnection in us-east-1
2025-05-27 01:39:18,812 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "Cloud Connectivity",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:18,813 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:18,985 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 157
2025-05-27 01:39:18,985 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per VPN Connection-Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:18,985 - INFO - ✅ AWS::EC2::VPNConnection in us-east-1: Query successful
2025-05-27 01:39:18,985 - INFO - Testing AWS::EC2::VPNConnection in ca-central-1
2025-05-27 01:39:18,985 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "Cloud Connectivity",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:18,987 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:19,158 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 157
2025-05-27 01:39:19,158 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per VPN Connection-Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:19,158 - INFO - ✅ AWS::EC2::VPNConnection in ca-central-1: Query successful
2025-05-27 01:39:19,158 - INFO - Testing AWS::EC2::VPCEndpoint in us-east-1
2025-05-27 01:39:19,159 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "VpcEndpoint",
              region: "us-east-1",
              attributeFilters: [
                { key: "endpointType", value: "PrivateLink" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:19,160 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:19,331 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 689
2025-05-27 01:39:19,332 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.01","unit":"GB","description":"$0.01 per GB for upto 1 PB monthly data processed by VPC Endpoints","startUsageAmount":"0","endUsageAmount":"1048576"},{"USD":"0.006","unit":"GB","description":"$0.006 per GB for more than 1 PB and less than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"1048576","endUsageAmount":"5242880"},{"USD":"0.004","unit":"GB","description":"$0.004 per GB for more than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"5242880","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.01","unit":"Hrs","description":"$0.01 per VPC Endpoint Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:19,332 - INFO - ✅ AWS::EC2::VPCEndpoint in us-east-1: Query successful
2025-05-27 01:39:19,332 - INFO - Testing AWS::EC2::VPCEndpoint in ca-central-1
2025-05-27 01:39:19,332 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "VpcEndpoint",
              region: "ca-central-1",
              attributeFilters: [
                { key: "endpointType", value: "PrivateLink" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:19,334 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:19,506 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 691
2025-05-27 01:39:19,507 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.011","unit":"Hrs","description":"$0.011 per VPC Endpoint Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.01","unit":"GB","description":"$0.01 per GB for upto 1 PB monthly data processed by VPC Endpoints","startUsageAmount":"0","endUsageAmount":"1048576"},{"USD":"0.006","unit":"GB","description":"$0.006 per GB for more than 1 PB and less than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"1048576","endUsageAmount":"5242880"},{"USD":"0.004","unit":"GB","description":"$0.004 per GB for more than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"5242880","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:19,507 - INFO - ✅ AWS::EC2::VPCEndpoint in ca-central-1: Query successful
2025-05-27 01:39:19,507 - INFO - Testing AWS::WAF::WebACL in us-east-1
2025-05-27 01:39:19,507 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:19,508 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:19,684 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:39:19,684 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:19,685 - INFO - ✅ AWS::WAF::WebACL in us-east-1: Query successful
2025-05-27 01:39:19,685 - INFO - Testing AWS::WAF::WebACL in ca-central-1
2025-05-27 01:39:19,685 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:19,687 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:19,871 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:39:19,871 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:19,872 - INFO - ✅ AWS::WAF::WebACL in ca-central-1: Query successful
2025-05-27 01:39:19,872 - INFO - Testing AWS::WAFv2::WebACL in us-east-1
2025-05-27 01:39:19,872 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:19,873 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:20,035 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:39:20,035 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:20,035 - INFO - ✅ AWS::WAFv2::WebACL in us-east-1: Query successful
2025-05-27 01:39:20,035 - INFO - Testing AWS::WAFv2::WebACL in ca-central-1
2025-05-27 01:39:20,035 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:20,037 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:20,235 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:39:20,235 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:20,236 - INFO - ✅ AWS::WAFv2::WebACL in ca-central-1: Query successful
2025-05-27 01:39:20,236 - INFO - Testing AWS::AutoScaling::AutoScalingGroup in us-east-1
2025-05-27 01:39:20,236 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:20,237 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:20,410 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:39:20,410 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0104","unit":"Hrs","description":"$0.0104 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:20,410 - INFO - ✅ AWS::AutoScaling::AutoScalingGroup in us-east-1: Query successful
2025-05-27 01:39:20,411 - INFO - Testing AWS::AutoScaling::AutoScalingGroup in ca-central-1
2025-05-27 01:39:20,411 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:20,412 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:20,586 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:39:20,586 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0116","unit":"Hrs","description":"$0.0116 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:20,586 - INFO - ✅ AWS::AutoScaling::AutoScalingGroup in ca-central-1: Query successful
2025-05-27 01:39:20,586 - INFO - Testing AWS::ECR::Repository in us-east-1
2025-05-27 01:39:20,586 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECR",
              productFamily: "EC2 Container Registry",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:20,588 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:20,752 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 163
2025-05-27 01:39:20,753 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.10 per GB-month of data storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:20,753 - INFO - ✅ AWS::ECR::Repository in us-east-1: Query successful
2025-05-27 01:39:20,753 - INFO - Testing AWS::ECR::Repository in ca-central-1
2025-05-27 01:39:20,753 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECR",
              productFamily: "EC2 Container Registry",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:20,755 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:20,926 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 163
2025-05-27 01:39:20,926 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.10 per GB-month of data storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:20,926 - INFO - ✅ AWS::ECR::Repository in ca-central-1: Query successful
2025-05-27 01:39:20,926 - INFO - Testing AWS::EFS::FileSystem in us-east-1
2025-05-27 01:39:20,926 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEFS",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:20,928 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:21,102 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 176
2025-05-27 01:39:21,102 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.3","unit":"GB-Mo","description":"USD $0.30 per GB-Mo for Standard storage (USE1)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:21,103 - INFO - ✅ AWS::EFS::FileSystem in us-east-1: Query successful
2025-05-27 01:39:21,103 - INFO - Testing AWS::EFS::FileSystem in ca-central-1
2025-05-27 01:39:21,103 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEFS",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:21,104 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:21,277 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:39:21,277 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.33","unit":"GB-Mo","description":"USD $0.33 per GB-Mo for Standard storage (CAN1)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:21,278 - INFO - ✅ AWS::EFS::FileSystem in ca-central-1: Query successful
2025-05-27 01:39:21,278 - INFO - Testing AWS::CodeBuild::Project in us-east-1
2025-05-27 01:39:21,278 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "CodeBuild",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Linux:g1.small/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:21,279 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:21,461 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 587
2025-05-27 01:39:21,461 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Docker-Sec:Linux:g1.small in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.005","unit":"minutes","description":"AWS CodeBuild - Build minutes on build.general1.small - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Sandbox-Sec:Linux:g1.small in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:21,461 - INFO - ✅ AWS::CodeBuild::Project in us-east-1: Query successful
2025-05-27 01:39:21,461 - INFO - Testing AWS::CodeBuild::Project in ca-central-1
2025-05-27 01:39:21,462 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "CodeBuild",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Linux:g1.small/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:21,464 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:21,634 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 566
2025-05-27 01:39:21,634 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.005","unit":"minutes","description":"AWS CodeBuild - Build minutes on build.general1.small - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Docker-Sec:Linux:g1.small in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Sandbox-Sec:Linux:g1.small in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:21,635 - INFO - ✅ AWS::CodeBuild::Project in ca-central-1: Query successful
2025-05-27 01:39:21,635 - INFO - Testing AWS::Kinesis::Stream in us-east-1
2025-05-27 01:39:21,635 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesis",
              productFamily: "Kinesis Streams",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ShardHour/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:21,637 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:21,826 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 308
2025-05-27 01:39:21,826 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.02","unit":"ShardHour","description":"$0.020 per extended shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.015","unit":"ShardHour","description":"$0.015 per provisioned shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:21,826 - INFO - ✅ AWS::Kinesis::Stream in us-east-1: Query successful
2025-05-27 01:39:21,827 - INFO - Testing AWS::Kinesis::Stream in ca-central-1
2025-05-27 01:39:21,827 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesis",
              productFamily: "Kinesis Streams",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ShardHour/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:21,828 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:22,012 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 311
2025-05-27 01:39:22,012 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0165","unit":"ShardHour","description":"$0.0165 per provisioned shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.022","unit":"ShardHour","description":"$0.022 per extended shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:22,012 - INFO - ✅ AWS::Kinesis::Stream in ca-central-1: Query successful
2025-05-27 01:39:22,012 - INFO - Testing AWS::CloudTrail::Trail in us-east-1
2025-05-27 01:39:22,012 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCloudTrail",
              productFamily: "Management Tools - AWS CloudTrail Data Events Recorded",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:22,014 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:22,193 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 198
2025-05-27 01:39:22,194 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"Events","description":"0.000001 per data event recorded in US East (N.Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:22,194 - INFO - ✅ AWS::CloudTrail::Trail in us-east-1: Query successful
2025-05-27 01:39:22,194 - INFO - Testing AWS::CloudTrail::Trail in ca-central-1
2025-05-27 01:39:22,194 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCloudTrail",
              productFamily: "Management Tools - AWS CloudTrail Data Events Recorded",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:22,196 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:22,372 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:39:22,373 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"Events","description":"0.000001 per data event recorded in Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:22,373 - INFO - ✅ AWS::CloudTrail::Trail in ca-central-1: Query successful
2025-05-27 01:39:22,373 - INFO - Testing AWS::Backup::BackupVault in us-east-1
2025-05-27 01:39:22,373 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSBackup",
              productFamily: "AWS Backup Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/WarmStorage-ByteHrs-EFS$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:22,376 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:22,570 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 183
2025-05-27 01:39:22,571 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"GB-month","description":"$0.05 per GB-month for warm backup storage for EFS","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:22,571 - INFO - ✅ AWS::Backup::BackupVault in us-east-1: Query successful
2025-05-27 01:39:22,572 - INFO - Testing AWS::Backup::BackupVault in ca-central-1
2025-05-27 01:39:22,572 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSBackup",
              productFamily: "AWS Backup Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/WarmStorage-ByteHrs-EFS$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:22,574 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:22,736 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 185
2025-05-27 01:39:22,736 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.055","unit":"GB-month","description":"$0.055 per GB-month for warm backup storage for EFS","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:22,736 - INFO - ✅ AWS::Backup::BackupVault in ca-central-1: Query successful
2025-05-27 01:39:22,737 - INFO - Testing AWS::Transfer::Server in us-east-1
2025-05-27 01:39:22,737 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSTransfer",
              productFamily: "AWS Transfer Family",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-ProtocolHours$/" },
                { key: "operation", value_regex: "/^FTP:S3$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:22,738 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:22,925 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 176
2025-05-27 01:39:22,925 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.3","unit":"Hourly","description":"$0.3 per Hour for FTP in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:22,925 - INFO - ✅ AWS::Transfer::Server in us-east-1: Query successful
2025-05-27 01:39:22,925 - INFO - Testing AWS::Transfer::Server in ca-central-1
2025-05-27 01:39:22,925 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSTransfer",
              productFamily: "AWS Transfer Family",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-ProtocolHours$/" },
                { key: "operation", value_regex: "/^FTP:S3$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:22,927 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:23,094 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 171
2025-05-27 01:39:23,094 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.3","unit":"Hourly","description":"$0.3 per Hour for FTP in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:23,095 - INFO - ✅ AWS::Transfer::Server in ca-central-1: Query successful
2025-05-27 01:39:23,095 - INFO - Testing AWS::SSM::Parameter in us-east-1
2025-05-27 01:39:23,095 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/PS-Advanced-Param-Tier1/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:23,096 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:23,264 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 195
2025-05-27 01:39:23,264 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00007","unit":"Hour","description":"$0.05 per Advanced Parameter per Month in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:23,265 - INFO - ✅ AWS::SSM::Parameter in us-east-1: Query successful
2025-05-27 01:39:23,265 - INFO - Testing AWS::SSM::Parameter in ca-central-1
2025-05-27 01:39:23,265 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/PS-Advanced-Param-Tier1/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:23,266 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:23,449 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 190
2025-05-27 01:39:23,450 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00007","unit":"Hour","description":"$0.05 per Advanced Parameter per Month in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:23,450 - INFO - ✅ AWS::SSM::Parameter in ca-central-1: Query successful
2025-05-27 01:39:23,450 - INFO - Testing AWS::SSM::Activation in us-east-1
2025-05-27 01:39:23,450 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/MI-AdvInstances-Hrs/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:23,453 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:23,654 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:39:23,655 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00695","unit":"Hrs","description":"$0.00695 per Advanced Instance Hr in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:23,656 - INFO - ✅ AWS::SSM::Activation in us-east-1: Query successful
2025-05-27 01:39:23,656 - INFO - Testing AWS::SSM::Activation in ca-central-1
2025-05-27 01:39:23,656 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/MI-AdvInstances-Hrs/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:23,659 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:23,837 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 184
2025-05-27 01:39:23,838 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00695","unit":"Hrs","description":"$0.00695 per Advanced Instance Hr in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:23,838 - INFO - ✅ AWS::SSM::Activation in ca-central-1: Query successful
2025-05-27 01:39:23,838 - INFO - Testing AWS::CloudFront::Distribution in us-east-1
2025-05-27 01:39:23,838 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudFront",
              productFamily: "Content Delivery",
              attributeFilters: [
                { key: "usagetype", value_regex: "/DataTransfer-Out-Bytes/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:23,839 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:24,020 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:24,020 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:24,021 - ERROR - ❌ AWS::CloudFront::Distribution in us-east-1: No products found in response
2025-05-27 01:39:24,021 - INFO - Testing AWS::CloudFront::Distribution in ca-central-1
2025-05-27 01:39:24,021 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudFront",
              productFamily: "Content Delivery",
              attributeFilters: [
                { key: "usagetype", value_regex: "/DataTransfer-Out-Bytes/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:24,023 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:24,202 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:24,202 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:24,202 - ERROR - ❌ AWS::CloudFront::Distribution in ca-central-1: No products found in response
2025-05-27 01:39:24,203 - INFO - Testing AWS::CloudFront::Function in us-east-1
2025-05-27 01:39:24,203 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudFront",
              productFamily: "Content Delivery",
              attributeFilters: [
                { key: "usagetype", value_regex: "/CloudFront-Function-Invocations/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:24,204 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:24,380 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:24,380 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:24,380 - ERROR - ❌ AWS::CloudFront::Function in us-east-1: No products found in response
2025-05-27 01:39:24,380 - INFO - Testing AWS::CloudFront::Function in ca-central-1
2025-05-27 01:39:24,380 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudFront",
              productFamily: "Content Delivery",
              attributeFilters: [
                { key: "usagetype", value_regex: "/CloudFront-Function-Invocations/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:24,382 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:24,569 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:24,570 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:24,570 - ERROR - ❌ AWS::CloudFront::Function in ca-central-1: No products found in response
2025-05-27 01:39:24,570 - INFO - Testing AWS::DocDB::DBCluster in us-east-1
2025-05-27 01:39:24,570 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Storage Snapshot",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/(^|-)BackupUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:24,574 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:24,761 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 227
2025-05-27 01:39:24,761 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.021","unit":"GB-Mo","description":"$0.021 per additional GB-month of backup storage exceeding free allocation for Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:24,761 - INFO - ✅ AWS::DocDB::DBCluster in us-east-1: Query successful
2025-05-27 01:39:24,761 - INFO - Testing AWS::DocDB::DBCluster in ca-central-1
2025-05-27 01:39:24,761 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Storage Snapshot",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/(^|-)BackupUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:24,763 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:24,942 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 227
2025-05-27 01:39:24,943 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.023","unit":"GB-Mo","description":"$0.023 per additional GB-month of backup storage exceeding free allocation for Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:24,943 - INFO - ✅ AWS::DocDB::DBCluster in ca-central-1: Query successful
2025-05-27 01:39:24,943 - INFO - Testing AWS::DocDB::DBInstance in us-east-1
2025-05-27 01:39:24,944 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Database Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "volumeType", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:24,946 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:25,111 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 210
2025-05-27 01:39:25,111 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.078","unit":"Hrs","description":"$0.078 per db.t3.medium instance hour (or partial hour) running Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:25,111 - INFO - ✅ AWS::DocDB::DBInstance in us-east-1: Query successful
2025-05-27 01:39:25,111 - INFO - Testing AWS::DocDB::DBInstance in ca-central-1
2025-05-27 01:39:25,111 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Database Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "volumeType", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:25,113 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:25,289 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 210
2025-05-27 01:39:25,290 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.086","unit":"Hrs","description":"$0.086 per db.t3.medium instance hour (or partial hour) running Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:25,290 - INFO - ✅ AWS::DocDB::DBInstance in ca-central-1: Query successful
2025-05-27 01:39:25,290 - INFO - Testing AWS::Neptune::DBCluster in us-east-1
2025-05-27 01:39:25,290 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonNeptune",
              productFamily: "Database Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^([A-Z]{3}[0-9]-|Global-|EU-)?StorageUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:25,292 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:25,471 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 167
2025-05-27 01:39:25,471 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.100 per GB / month (Amazon Neptune)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:25,471 - INFO - ✅ AWS::Neptune::DBCluster in us-east-1: Query successful
2025-05-27 01:39:25,471 - INFO - Testing AWS::Neptune::DBCluster in ca-central-1
2025-05-27 01:39:25,471 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonNeptune",
              productFamily: "Database Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^([A-Z]{3}[0-9]-|Global-|EU-)?StorageUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:25,473 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:25,653 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 167
2025-05-27 01:39:25,654 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.11","unit":"GB-Mo","description":"$0.11 per GB / month (Amazon Neptune)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:25,654 - INFO - ✅ AWS::Neptune::DBCluster in ca-central-1: Query successful
2025-05-27 01:39:25,654 - INFO - Testing AWS::Neptune::DBInstance in us-east-1
2025-05-27 01:39:25,654 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonNeptune",
              productFamily: "Database Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "usagetype", value_regex: "/InstanceUsage:db.t3.medium$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:25,656 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:25,834 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:39:25,835 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.098","unit":"Hrs","description":"$0.098 per instance hour (or partial hour) running Amazon Neptune","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:25,835 - INFO - ✅ AWS::Neptune::DBInstance in us-east-1: Query successful
2025-05-27 01:39:25,835 - INFO - Testing AWS::Neptune::DBInstance in ca-central-1
2025-05-27 01:39:25,835 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonNeptune",
              productFamily: "Database Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "usagetype", value_regex: "/InstanceUsage:db.t3.medium$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:25,837 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:26,015 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:39:26,015 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.108","unit":"Hrs","description":"$0.108 per instance hour (or partial hour) running Amazon Neptune","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:26,015 - INFO - ✅ AWS::Neptune::DBInstance in ca-central-1: Query successful
2025-05-27 01:39:26,015 - INFO - Testing AWS::Elasticsearch::Domain in us-east-1
2025-05-27 01:39:26,015 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonES",
              productFamily: "Amazon OpenSearch Service Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ESInstance/" },
                { key: "instanceType", value: "m4.large.search" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:26,017 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:26,194 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 187
2025-05-27 01:39:26,194 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.151","unit":"Hrs","description":"$0.151 per m4.large.search instance hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:26,194 - INFO - ✅ AWS::Elasticsearch::Domain in us-east-1: Query successful
2025-05-27 01:39:26,195 - INFO - Testing AWS::Elasticsearch::Domain in ca-central-1
2025-05-27 01:39:26,195 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonES",
              productFamily: "Amazon OpenSearch Service Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ESInstance/" },
                { key: "instanceType", value: "m4.large.search" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:26,196 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:26,372 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:39:26,372 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.176","unit":"Hrs","description":"$0.176 per m4.large.search instance hour (or partial hour) - CAN1","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:26,372 - INFO - ✅ AWS::Elasticsearch::Domain in ca-central-1: Query successful
2025-05-27 01:39:26,372 - INFO - Testing AWS::Lightsail::Instance in us-east-1
2025-05-27 01:39:26,373 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonLightsail",
              productFamily: "Lightsail Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/-BundleUsage:0.5GB$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:26,374 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:26,550 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:39:26,550 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00672","unit":"Hrs","description":"$0.00672 / Hour of 0.5GB bundle Instance including public IPv4 address","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:26,550 - INFO - ✅ AWS::Lightsail::Instance in us-east-1: Query successful
2025-05-27 01:39:26,551 - INFO - Testing AWS::Lightsail::Instance in ca-central-1
2025-05-27 01:39:26,551 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonLightsail",
              productFamily: "Lightsail Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/-BundleUsage:0.5GB$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:26,552 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:26,724 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:39:26,724 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00672","unit":"Hrs","description":"$0.00672 / Hour of 0.5GB bundle Instance including public IPv4 address","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:26,724 - INFO - ✅ AWS::Lightsail::Instance in ca-central-1: Query successful
2025-05-27 01:39:26,724 - INFO - Testing AWS::MQ::Broker in us-east-1
2025-05-27 01:39:26,724 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMQ",
              productFamily: "Broker Instances",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/mq.t3.micro/" },
                { key: "brokerEngine", value_regex: "/ActiveMQ/" },
                { key: "deploymentOption", value_regex: "/Single-AZ/" },
                { key: "operation", value_regex: "/CreateBroker/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:26,726 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:26,894 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 223
2025-05-27 01:39:26,895 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.02704","unit":"Hrs","description":"single-instance mq.t3.micro hour (or partial hour) running ActiveMQ in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:26,895 - INFO - ✅ AWS::MQ::Broker in us-east-1: Query successful
2025-05-27 01:39:26,895 - INFO - Testing AWS::MQ::Broker in ca-central-1
2025-05-27 01:39:26,895 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMQ",
              productFamily: "Broker Instances",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/mq.t3.micro/" },
                { key: "brokerEngine", value_regex: "/ActiveMQ/" },
                { key: "deploymentOption", value_regex: "/Single-AZ/" },
                { key: "operation", value_regex: "/CreateBroker/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:26,897 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:27,065 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 218
2025-05-27 01:39:27,065 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.03016","unit":"Hrs","description":"single-instance mq.t3.micro hour (or partial hour) running ActiveMQ in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:27,066 - INFO - ✅ AWS::MQ::Broker in ca-central-1: Query successful
2025-05-27 01:39:27,066 - INFO - Testing AWS::MSK::Cluster in us-east-1
2025-05-27 01:39:27,066 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMSK",
              productFamily: "Managed Streaming for Apache Kafka (MSK)",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/kafka.t3.small/i" },
                { key: "locationType", value: "AWS Region" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:27,067 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:27,227 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 198
2025-05-27 01:39:27,227 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0456","unit":"hours","description":"USD 0.0456 per Kafka.t3.small broker hour in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:27,227 - INFO - ✅ AWS::MSK::Cluster in us-east-1: Query successful
2025-05-27 01:39:27,227 - INFO - Testing AWS::MSK::Cluster in ca-central-1
2025-05-27 01:39:27,227 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMSK",
              productFamily: "Managed Streaming for Apache Kafka (MSK)",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/kafka.t3.small/i" },
                { key: "locationType", value: "AWS Region" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:27,229 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:27,402 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 193
2025-05-27 01:39:27,403 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0508","unit":"hours","description":"USD 0.0508 per Kafka.t3.small broker hour in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:27,403 - INFO - ✅ AWS::MSK::Cluster in ca-central-1: Query successful
2025-05-27 01:39:27,403 - INFO - Testing AWS::Config::ConfigRule in us-east-1
2025-05-27 01:39:27,403 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:27,405 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:27,570 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 220
2025-05-27 01:39:27,571 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"ConfigurationItemRecorded","description":"$0.003 per Configuration Item recorded in US East (N.Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:27,572 - INFO - ✅ AWS::Config::ConfigRule in us-east-1: Query successful
2025-05-27 01:39:27,572 - INFO - Testing AWS::Config::ConfigRule in ca-central-1
2025-05-27 01:39:27,572 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:27,575 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:27,750 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 222
2025-05-27 01:39:27,750 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"CAN1-ConfigurationItemRecorded","description":"$0.003 per  Configuration Item recorded in Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:27,751 - INFO - ✅ AWS::Config::ConfigRule in ca-central-1: Query successful
2025-05-27 01:39:27,751 - INFO - Testing AWS::Config::ConfigurationRecorder in us-east-1
2025-05-27 01:39:27,751 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:27,753 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:27,926 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 220
2025-05-27 01:39:27,926 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"ConfigurationItemRecorded","description":"$0.003 per Configuration Item recorded in US East (N.Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:27,926 - INFO - ✅ AWS::Config::ConfigurationRecorder in us-east-1: Query successful
2025-05-27 01:39:27,926 - INFO - Testing AWS::Config::ConfigurationRecorder in ca-central-1
2025-05-27 01:39:27,927 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:27,928 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:28,096 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 222
2025-05-27 01:39:28,096 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"CAN1-ConfigurationItemRecorded","description":"$0.003 per  Configuration Item recorded in Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:28,097 - INFO - ✅ AWS::Config::ConfigurationRecorder in ca-central-1: Query successful
2025-05-27 01:39:28,097 - INFO - Testing AWS::DMS::ReplicationInstance in us-east-1
2025-05-27 01:39:28,097 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDataMigrationSvc",
              productFamily: "Database Migration Service",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "availabilityZone", value: "Single" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:28,099 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:28,275 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:28,275 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:28,275 - ERROR - ❌ AWS::DMS::ReplicationInstance in us-east-1: No products found in response
2025-05-27 01:39:28,275 - INFO - Testing AWS::DMS::ReplicationInstance in ca-central-1
2025-05-27 01:39:28,275 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDataMigrationSvc",
              productFamily: "Database Migration Service",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "availabilityZone", value: "Single" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:28,276 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:28,448 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:28,448 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:28,448 - ERROR - ❌ AWS::DMS::ReplicationInstance in ca-central-1: No products found in response
2025-05-27 01:39:28,448 - INFO - Testing AWS::ApiGateway::Stage in us-east-1
2025-05-27 01:39:28,448 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "USE1-ApiGatewayRequest" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:28,450 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:28,619 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1475
2025-05-27 01:39:28,619 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"Requests","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"Requests","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"Requests","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"USE1-AmazonApiGateway-Request","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"USE1-AmazonApiGateway-Request","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"USE1-AmazonApiGateway-Request","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"USE1-AmazonApiGateway-Request","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:28,620 - INFO - ✅ AWS::ApiGateway::Stage in us-east-1: Query successful
2025-05-27 01:39:28,620 - INFO - Testing AWS::ApiGateway::Stage in ca-central-1
2025-05-27 01:39:28,620 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "CAN1-ApiGatewayRequest" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:28,622 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:28,793 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1473
2025-05-27 01:39:28,793 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"CAN1-AmazonApiGatewayRequest","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"CAN1-AmazonApiGatewayRequest","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"Requests","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"Requests","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"Requests","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:28,794 - INFO - ✅ AWS::ApiGateway::Stage in ca-central-1: Query successful
2025-05-27 01:39:28,794 - INFO - Testing AWS::CertificateManager::Certificate in us-east-1
2025-05-27 01:39:28,794 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCertificateManager",
              productFamily: "AWS Certificate Manager",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "PublicCertificate" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:28,796 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:28,965 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:28,966 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:28,966 - ERROR - ❌ AWS::CertificateManager::Certificate in us-east-1: No products found in response
2025-05-27 01:39:28,966 - INFO - Testing AWS::CertificateManager::Certificate in ca-central-1
2025-05-27 01:39:28,966 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCertificateManager",
              productFamily: "AWS Certificate Manager",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "PublicCertificate" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:28,968 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:29,132 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:29,132 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:29,133 - ERROR - ❌ AWS::CertificateManager::Certificate in ca-central-1: No products found in response
2025-05-27 01:39:29,133 - INFO - Testing AWS::DirectConnect::Connection in us-east-1
2025-05-27 01:39:29,133 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Direct Connect",
              region: "us-east-1",
              attributeFilters: [
                { key: "capacity", value: "1G" },
                { key: "usagetype", value_regex: "/PortUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:29,135 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:29,317 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 5589
2025-05-27 01:39:29,317 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (Ohio), CyrusOne Aurora A1)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), Equinix MI1, Miami, FL)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), KIO Newtorks QRO 1, Queretaro)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (US East (N. Virginia), Equinix MI1, Miami, FL)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), Equinix NY5, Secaucus, NJ)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), QTS ATL1, Atlanta, GA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), Digital Realty ATL13, Atlanta, GA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), Equinix NY5, Secaucus, NJ)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), Equinix DA2, Dallas, TX)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (US East 1 in Markley Boston)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), Crown Castle, Philadelphia, PA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) ((US East (N. Virginia) in 165 Halsey Street","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (US East in Coresite Reston)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (US East in CoreSite 32 Avenue of Americas)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), KIO Newtorks QRO 1, Queretaro)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), QTS ATL1, Atlanta, GA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (US East in Equinix DC2)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (US East (N. Virginia) in 165 Halsey Street","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (US East in CoreSite Reston)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (US East in Equinix DC2)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), Digital Realty ATL13, Atlanta, GA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), Digital Realty IAD38, Ashburn, VA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), Digital Realty IAD38, Ashburn, VA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), Equinix DA2, Dallas, TX)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (US East 1 in Markley Boston)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (US East in CoreSite 32 Avenue of Americas)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), Crown Castle, Philadelphia, PA)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:29,318 - INFO - ✅ AWS::DirectConnect::Connection in us-east-1: Query successful
2025-05-27 01:39:29,318 - INFO - Testing AWS::DirectConnect::Connection in ca-central-1
2025-05-27 01:39:29,318 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Direct Connect",
              region: "ca-central-1",
              attributeFilters: [
                { key: "capacity", value: "1G" },
                { key: "usagetype", value_regex: "/PortUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:29,319 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:29,498 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 2245
2025-05-27 01:39:29,499 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (Canada (Central), Cologix VAN2, Vancouver, CA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (Canada in Netelligent Montreal)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (Canada in Netelligent Montreal)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (Canada (Central) in Telehouse,","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (Canada (Central), Equinix TR2, Toronto)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (Canada (Central), Cologix VAN3, Vancouver, CAN)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (Canada in Cologix MTL3)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (Canada in Cologix MTL3)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (Canada (Central) in Telehouse, Toronto, CAN)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (Canada (Central), Equinix TR2, Toronto)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected OneGig port-hour (or partial hour) (Canada (Central), Cologix VAN2, Vancouver, CA)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:29,499 - INFO - ✅ AWS::DirectConnect::Connection in ca-central-1: Query successful
2025-05-27 01:39:29,499 - INFO - Testing AWS::DirectConnect::VirtualInterface in us-east-1
2025-05-27 01:39:29,499 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Virtual Interface",
              region: "us-east-1",
              attributeFilters: [
                { key: "operation", value: "VirtualInterface" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:29,502 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:29,675 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:29,675 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:29,675 - ERROR - ❌ AWS::DirectConnect::VirtualInterface in us-east-1: No products found in response
2025-05-27 01:39:29,675 - INFO - Testing AWS::DirectConnect::VirtualInterface in ca-central-1
2025-05-27 01:39:29,675 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Virtual Interface",
              region: "ca-central-1",
              attributeFilters: [
                { key: "operation", value: "VirtualInterface" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:29,677 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:29,851 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:29,852 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:29,852 - ERROR - ❌ AWS::DirectConnect::VirtualInterface in ca-central-1: No products found in response
2025-05-27 01:39:29,852 - INFO - Testing AWS::DirectoryService::MicrosoftAD in us-east-1
2025-05-27 01:39:29,852 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "us-east-1",
              attributeFilters: [
                { key: "directoryType", value: "Microsoft AD" },
                { key: "directorySize", value: "Standard" },
                { key: "location", value: "US East (N. Virginia)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:29,853 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:30,020 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 234
2025-05-27 01:39:30,020 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.06","unit":"Hrs","description":"$0.060 per hour for Microsoft AD (Standard Edition) domain controllers in the US East (N. Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:30,021 - INFO - ✅ AWS::DirectoryService::MicrosoftAD in us-east-1: Query successful
2025-05-27 01:39:30,021 - INFO - Testing AWS::DirectoryService::MicrosoftAD in ca-central-1
2025-05-27 01:39:30,021 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "ca-central-1",
              attributeFilters: [
                { key: "directoryType", value: "Microsoft AD" },
                { key: "directorySize", value: "Standard" },
                { key: "location", value: "Canada (Central)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:30,023 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:30,215 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 230
2025-05-27 01:39:30,215 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.064","unit":"Hrs","description":"$0.064 per hour for Microsoft AD (Standard Edition) domain controllers in the Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:30,215 - INFO - ✅ AWS::DirectoryService::MicrosoftAD in ca-central-1: Query successful
2025-05-27 01:39:30,215 - INFO - Testing AWS::DirectoryService::SimpleAD in us-east-1
2025-05-27 01:39:30,215 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "us-east-1",
              attributeFilters: [
                { key: "directoryType", value_regex: "/Simple AD/i" },
                { key: "directorySize", value: "Small" },
                { key: "location", value: "US East (N. Virginia)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:30,217 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:30,379 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 206
2025-05-27 01:39:30,380 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per hour for a small directory in the US East (Northern Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:30,380 - INFO - ✅ AWS::DirectoryService::SimpleAD in us-east-1: Query successful
2025-05-27 01:39:30,380 - INFO - Testing AWS::DirectoryService::SimpleAD in ca-central-1
2025-05-27 01:39:30,380 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "ca-central-1",
              attributeFilters: [
                { key: "directoryType", value_regex: "/Simple AD/i" },
                { key: "directorySize", value: "Small" },
                { key: "location", value: "Canada (Central)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:30,381 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:30,547 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:30,548 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:30,548 - ERROR - ❌ AWS::DirectoryService::SimpleAD in ca-central-1: No products found in response
2025-05-27 01:39:30,548 - INFO - Testing AWS::EC2::ClientVpnEndpoint in us-east-1
2025-05-27 01:39:30,548 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "VPN Connection",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ClientVPN-EndpointHours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:30,550 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:30,718 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:30,718 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:30,718 - ERROR - ❌ AWS::EC2::ClientVpnEndpoint in us-east-1: No products found in response
2025-05-27 01:39:30,718 - INFO - Testing AWS::EC2::ClientVpnEndpoint in ca-central-1
2025-05-27 01:39:30,718 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "VPN Connection",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ClientVPN-EndpointHours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:30,721 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:30,894 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:30,895 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:30,895 - ERROR - ❌ AWS::EC2::ClientVpnEndpoint in ca-central-1: No products found in response
2025-05-27 01:39:30,895 - INFO - Testing AWS::EC2::DedicatedHost in us-east-1
2025-05-27 01:39:30,895 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Dedicated Host",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/HostUsage:m5$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:30,898 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:31,078 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 186
2025-05-27 01:39:31,078 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5.069","unit":"Hrs","description":"$5.069 per On Demand M5 Dedicated Host Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]}]}}

2025-05-27 01:39:31,078 - INFO - ✅ AWS::EC2::DedicatedHost in us-east-1: Query successful
2025-05-27 01:39:31,078 - INFO - Testing AWS::EC2::DedicatedHost in ca-central-1
2025-05-27 01:39:31,078 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Dedicated Host",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/HostUsage:m5$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:31,080 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:31,249 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 184
2025-05-27 01:39:31,250 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5.65","unit":"Hrs","description":"$5.65 per On Demand M5 Dedicated Host Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]}]}}

2025-05-27 01:39:31,250 - INFO - ✅ AWS::EC2::DedicatedHost in ca-central-1: Query successful
2025-05-27 01:39:31,250 - INFO - Testing AWS::EC2::SpotFleet in us-east-1
2025-05-27 01:39:31,250 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "m5.large" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "spot"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:31,252 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:31,436 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 662
2025-05-27 01:39:31,436 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[{"USD":"0.0434","unit":"Hrs","description":"","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]},{"prices":[]}]}}

2025-05-27 01:39:31,437 - INFO - ✅ AWS::EC2::SpotFleet in us-east-1: Query successful
2025-05-27 01:39:31,437 - INFO - Testing AWS::EC2::SpotFleet in ca-central-1
2025-05-27 01:39:31,437 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "m5.large" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "spot"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:31,438 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:31,612 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 662
2025-05-27 01:39:31,612 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[{"USD":"0.0481","unit":"Hrs","description":"","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]},{"prices":[]}]}}

2025-05-27 01:39:31,612 - INFO - ✅ AWS::EC2::SpotFleet in ca-central-1: Query successful
2025-05-27 01:39:31,613 - INFO - Testing AWS::EC2::TransitGateway in us-east-1
2025-05-27 01:39:31,613 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "Cloud Connectivity",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/TransitGateway-Hours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:31,614 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:31,787 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:31,788 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:31,788 - ERROR - ❌ AWS::EC2::TransitGateway in us-east-1: No products found in response
2025-05-27 01:39:31,788 - INFO - Testing AWS::EC2::TransitGateway in ca-central-1
2025-05-27 01:39:31,788 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "Cloud Connectivity",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/TransitGateway-Hours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:31,790 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:31,973 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:31,974 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:31,974 - ERROR - ❌ AWS::EC2::TransitGateway in ca-central-1: No products found in response
2025-05-27 01:39:31,974 - INFO - Testing AWS::EC2::TransitGatewayVpcAttachment in us-east-1
2025-05-27 01:39:31,974 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "Cloud Connectivity",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/TransitGateway-Hours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:31,976 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:32,135 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:32,135 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:32,136 - ERROR - ❌ AWS::EC2::TransitGatewayVpcAttachment in us-east-1: No products found in response
2025-05-27 01:39:32,136 - INFO - Testing AWS::EC2::TransitGatewayVpcAttachment in ca-central-1
2025-05-27 01:39:32,136 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "Cloud Connectivity",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/TransitGateway-Hours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:32,138 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:32,312 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:32,312 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:32,312 - ERROR - ❌ AWS::EC2::TransitGatewayVpcAttachment in ca-central-1: No products found in response
2025-05-27 01:39:32,312 - INFO - Testing AWS::ECS::Service in us-east-1
2025-05-27 01:39:32,312 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECS",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:32,314 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:32,486 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 174
2025-05-27 01:39:32,486 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04048","unit":"hours","description":"AWS Fargate - vCPU - US East (N.Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:32,486 - INFO - ✅ AWS::ECS::Service in us-east-1: Query successful
2025-05-27 01:39:32,486 - INFO - Testing AWS::ECS::Service in ca-central-1
2025-05-27 01:39:32,486 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECS",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:32,488 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:32,654 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 171
2025-05-27 01:39:32,654 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04456","unit":"hours","description":"AWS Fargate - vCPU  - Central (Canada)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:32,655 - INFO - ✅ AWS::ECS::Service in ca-central-1: Query successful
2025-05-27 01:39:32,655 - INFO - Testing AWS::EKS::FargateProfile in us-east-1
2025-05-27 01:39:32,655 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:32,656 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:32,827 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:39:32,827 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04048","unit":"hours","description":"AWS Fargate - vCPU - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:32,827 - INFO - ✅ AWS::EKS::FargateProfile in us-east-1: Query successful
2025-05-27 01:39:32,827 - INFO - Testing AWS::EKS::FargateProfile in ca-central-1
2025-05-27 01:39:32,827 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:32,830 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:32,997 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 170
2025-05-27 01:39:32,997 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04456","unit":"hours","description":"AWS Fargate - vCPU - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:32,998 - INFO - ✅ AWS::EKS::FargateProfile in ca-central-1: Query successful
2025-05-27 01:39:32,998 - INFO - Testing AWS::Events::EventBus in us-east-1
2025-05-27 01:39:32,998 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSEvents",
              productFamily: "EventBridge",
              region: "us-east-1",
              attributeFilters: [
                { key: "eventType", value: "Custom Event" },
                { key: "usagetype", value_regex: "/Event-64K-Chunks/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:33,000 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:33,157 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 216
2025-05-27 01:39:33,157 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"64K-Chunks","description":"$1.00 per million EventBridge custom events received in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:33,157 - INFO - ✅ AWS::Events::EventBus in us-east-1: Query successful
2025-05-27 01:39:33,157 - INFO - Testing AWS::Events::EventBus in ca-central-1
2025-05-27 01:39:33,158 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSEvents",
              productFamily: "EventBridge",
              region: "ca-central-1",
              attributeFilters: [
                { key: "eventType", value: "Custom Event" },
                { key: "usagetype", value_regex: "/Event-64K-Chunks/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:33,159 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:33,316 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 211
2025-05-27 01:39:33,317 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"64K-Chunks","description":"$1.00 per million EventBridge custom events received in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:33,317 - INFO - ✅ AWS::Events::EventBus in ca-central-1: Query successful
2025-05-27 01:39:33,317 - INFO - Testing AWS::FSx::FileSystem in us-east-1
2025-05-27 01:39:33,317 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonFSx",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "deploymentOption", value: "Single-AZ" },
                { key: "fileSystemType", value: "Windows" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:33,320 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:33,487 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 609
2025-05-27 01:39:33,488 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.13","unit":"GB-Mo","description":"$0.130 per GB-Month of provisioned Windows File Server storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.05","unit":"GB-Mo","description":"$0.05 per GB-Month of Windows File Server backup storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.013","unit":"GB-Mo","description":"$0.013 per GB-Month of provisioned Windows File Server Single-AZ HDD storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:33,488 - INFO - ✅ AWS::FSx::FileSystem in us-east-1: Query successful
2025-05-27 01:39:33,488 - INFO - Testing AWS::FSx::FileSystem in ca-central-1
2025-05-27 01:39:33,489 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonFSx",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "deploymentOption", value: "Single-AZ" },
                { key: "fileSystemType", value: "Windows" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:33,492 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:33,674 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 597
2025-05-27 01:39:33,675 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.014","unit":"GB-Mo","description":"$0.014 per GB-Month of provisioned Windows File Server Single-AZ HDD storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.143","unit":"GB-Mo","description":"$0.143 per GB-Month of provisioned Windows File Server storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.055","unit":"GB-Mo","description":"$0.055 per GB-Month of Windows File Server backup storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:33,676 - INFO - ✅ AWS::FSx::FileSystem in ca-central-1: Query successful
2025-05-27 01:39:33,676 - INFO - Testing AWS::GlobalAccelerator::Accelerator in us-east-1
2025-05-27 01:39:33,676 - WARNING - Missing required element in query: region
2025-05-27 01:39:33,676 - INFO - Testing AWS::GlobalAccelerator::Accelerator in ca-central-1
2025-05-27 01:39:33,676 - WARNING - Missing required element in query: region
2025-05-27 01:39:33,676 - INFO - Testing AWS::GlobalAccelerator::EndpointGroup in us-east-1
2025-05-27 01:39:33,676 - WARNING - Missing required element in query: region
2025-05-27 01:39:33,676 - INFO - Testing AWS::GlobalAccelerator::EndpointGroup in ca-central-1
2025-05-27 01:39:33,676 - WARNING - Missing required element in query: region
2025-05-27 01:39:33,676 - INFO - Testing AWS::Glue::Crawler in us-east-1
2025-05-27 01:39:33,676 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "us-east-1",
              attributeFilters: [
                { key: "operation", value_regex: "/^crawlerrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:33,679 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:33,856 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:39:33,857 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue crawler","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:33,857 - INFO - ✅ AWS::Glue::Crawler in us-east-1: Query successful
2025-05-27 01:39:33,857 - INFO - Testing AWS::Glue::Crawler in ca-central-1
2025-05-27 01:39:33,857 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "ca-central-1",
              attributeFilters: [
                { key: "operation", value_regex: "/^crawlerrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:33,859 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:34,034 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:39:34,034 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue crawler","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:34,035 - INFO - ✅ AWS::Glue::Crawler in ca-central-1: Query successful
2025-05-27 01:39:34,035 - INFO - Testing AWS::Glue::Database in us-east-1
2025-05-27 01:39:34,035 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value_regex: "/^data catalog storage$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:34,037 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:34,198 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 203
2025-05-27 01:39:34,199 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00001","unit":"Obj-Month","description":"$1 per 100,000 objects per month for AWS Glue Data Catalog storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:34,199 - INFO - ✅ AWS::Glue::Database in us-east-1: Query successful
2025-05-27 01:39:34,199 - INFO - Testing AWS::Glue::Database in ca-central-1
2025-05-27 01:39:34,199 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value_regex: "/^data catalog storage$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:34,202 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:34,366 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 203
2025-05-27 01:39:34,366 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00001","unit":"Obj-Month","description":"$1 per 100,000 objects per month for AWS Glue Data Catalog storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:34,367 - INFO - ✅ AWS::Glue::Database in ca-central-1: Query successful
2025-05-27 01:39:34,367 - INFO - Testing AWS::Glue::Job in us-east-1
2025-05-27 01:39:34,367 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value: "ETL Job run" },
                { key: "operation", value_regex: "/^jobrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:34,369 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:34,529 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:39:34,530 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue ETL job","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:34,530 - INFO - ✅ AWS::Glue::Job in us-east-1: Query successful
2025-05-27 01:39:34,530 - INFO - Testing AWS::Glue::Job in ca-central-1
2025-05-27 01:39:34,530 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value: "ETL Job run" },
                { key: "operation", value_regex: "/^jobrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:34,533 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:34,699 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:39:34,700 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue ETL job","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:34,701 - INFO - ✅ AWS::Glue::Job in ca-central-1: Query successful
2025-05-27 01:39:34,701 - INFO - Testing AWS::KinesisAnalytics::Application in us-east-1
2025-05-27 01:39:34,701 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisAnalytics",
              productFamily: "Kinesis Analytics",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/KPU-Hour-Java/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:34,705 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:34,887 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:39:34,888 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.11","unit":"KPU-Hour","description":"$0.11 per Kinesis Processing Unit-hour for Apache Flink applications","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:34,889 - INFO - ✅ AWS::KinesisAnalytics::Application in us-east-1: Query successful
2025-05-27 01:39:34,889 - INFO - Testing AWS::KinesisAnalytics::Application in ca-central-1
2025-05-27 01:39:34,889 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisAnalytics",
              productFamily: "Kinesis Analytics",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/KPU-Hour-Java/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:34,893 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:35,065 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 203
2025-05-27 01:39:35,065 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.123","unit":"KPU-Hour","description":"$0.123 per Kinesis Processing Unit-hour for Apache Flink applications","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:35,066 - INFO - ✅ AWS::KinesisAnalytics::Application in ca-central-1: Query successful
2025-05-27 01:39:35,066 - INFO - Testing AWS::KinesisFirehose::DeliveryStream in us-east-1
2025-05-27 01:39:35,066 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisFirehose",
              productFamily: "Kinesis Firehose",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value: "Event-by-Event Processing" },
                { key: "sourcetype", value: "" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:35,069 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:35,222 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 994
2025-05-27 01:39:35,223 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.075","unit":"GB","description":"Tier 1 $0.075 per GB of data ingested ","startUsageAmount":"0","endUsageAmount":"256000"},{"USD":"0.064","unit":"GB","description":"Tier 2 $0.064 per GB of data ingested ","startUsageAmount":"256000","endUsageAmount":"1024000"},{"USD":"0.053","unit":"GB","description":"Tier 3 $0.053 per GB of data ingested","startUsageAmount":"1024000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.08","unit":"GB","description":"Per GB of data ingested or delivered","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.029","unit":"GB","description":"Tier 1 $0.029 per GB of data ingested","startUsageAmount":"0","endUsageAmount":"512000"},{"USD":"0.025","unit":"GB","description":"Tier 2 $0.025 per GB of data ingested","startUsageAmount":"512000","endUsageAmount":"2048000"},{"USD":"0.02","unit":"GB","description":"Tier 3 $0.020 per GB of data ingested","startUsageAmount":"2048000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:35,223 - INFO - ✅ AWS::KinesisFirehose::DeliveryStream in us-east-1: Query successful
2025-05-27 01:39:35,224 - INFO - Testing AWS::KinesisFirehose::DeliveryStream in ca-central-1
2025-05-27 01:39:35,224 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisFirehose",
              productFamily: "Kinesis Firehose",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value: "Event-by-Event Processing" },
                { key: "sourcetype", value: "" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:35,227 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:35,388 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 996
2025-05-27 01:39:35,389 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.083","unit":"GB","description":"Tier 1 $0.083 per GB of data ingested ","startUsageAmount":"0","endUsageAmount":"256000"},{"USD":"0.07","unit":"GB","description":"Tier 2 $0.070 per GB of data ingested ","startUsageAmount":"256000","endUsageAmount":"1024000"},{"USD":"0.058","unit":"GB","description":"Tier 3 $0.058 per GB of data ingested","startUsageAmount":"1024000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.032","unit":"GB","description":"Tier 1 $0.032 per GB of data ingested","startUsageAmount":"0","endUsageAmount":"512000"},{"USD":"0.028","unit":"GB","description":"Tier 2 $0.028 per GB of data ingested","startUsageAmount":"512000","endUsageAmount":"2048000"},{"USD":"0.022","unit":"GB","description":"Tier 3 $0.022 per GB of data ingested","startUsageAmount":"2048000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0883","unit":"GB","description":"Per GB of data ingested or delivered","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:35,390 - INFO - ✅ AWS::KinesisFirehose::DeliveryStream in ca-central-1: Query successful
2025-05-27 01:39:35,390 - INFO - Testing AWS::MWAA::Environment in us-east-1
2025-05-27 01:39:35,390 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMWAA",
              productFamily: "Managed Workflows for Apache Airflow",
              region: "us-east-1",
              attributeFilters: [
                { key: "size", value_regex: "/^Small$/i" },
                { key: "type", value: "Environment" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:35,394 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:35,558 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:35,558 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:35,559 - ERROR - ❌ AWS::MWAA::Environment in us-east-1: No products found in response
2025-05-27 01:39:35,559 - INFO - Testing AWS::MWAA::Environment in ca-central-1
2025-05-27 01:39:35,559 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMWAA",
              productFamily: "Managed Workflows for Apache Airflow",
              region: "ca-central-1",
              attributeFilters: [
                { key: "size", value_regex: "/^Small$/i" },
                { key: "type", value: "Environment" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:35,561 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:35,723 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:39:35,724 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:39:35,724 - ERROR - ❌ AWS::MWAA::Environment in ca-central-1: No products found in response
2025-05-27 01:39:35,724 - INFO - Testing AWS::NetworkFirewall::Firewall in us-east-1
2025-05-27 01:39:35,724 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSNetworkFirewall",
              productFamily: "AWS Firewall",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-Endpoint-Hour$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:35,727 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:35,888 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 206
2025-05-27 01:39:35,889 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.395","unit":"Hourly","description":"$0.395 per endpoint hour for AWS Network Firewall in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:35,889 - INFO - ✅ AWS::NetworkFirewall::Firewall in us-east-1: Query successful
2025-05-27 01:39:35,889 - INFO - Testing AWS::NetworkFirewall::Firewall in ca-central-1
2025-05-27 01:39:35,889 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSNetworkFirewall",
              productFamily: "AWS Firewall",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-Endpoint-Hour$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:35,892 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:36,060 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:39:36,061 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.395","unit":"Hourly","description":"$0.395 per endpoint hour for AWS Network Firewall in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:36,061 - INFO - ✅ AWS::NetworkFirewall::Firewall in ca-central-1: Query successful
2025-05-27 01:39:36,062 - INFO - Testing AWS::Route53::RecordSet in us-east-1
2025-05-27 01:39:36,062 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              attributeFilters: [
                { key: "usagetype", value: "DNS-Queries" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:36,064 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:36,219 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 352
2025-05-27 01:39:36,220 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"4e-7","unit":"Queries","description":"$0.40 per 1,000,000 queries for the first 1 Billion queries","startUsageAmount":"0","endUsageAmount":"1000000000"},{"USD":"2e-7","unit":"Queries","description":"$0.20 per 1,000,000 queries over 1 Billion queries","startUsageAmount":"1000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:36,220 - INFO - ✅ AWS::Route53::RecordSet in us-east-1: Query successful
2025-05-27 01:39:36,220 - INFO - Testing AWS::Route53::RecordSet in ca-central-1
2025-05-27 01:39:36,220 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              attributeFilters: [
                { key: "usagetype", value: "DNS-Queries" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:36,223 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:36,387 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 352
2025-05-27 01:39:36,388 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"4e-7","unit":"Queries","description":"$0.40 per 1,000,000 queries for the first 1 Billion queries","startUsageAmount":"0","endUsageAmount":"1000000000"},{"USD":"2e-7","unit":"Queries","description":"$0.20 per 1,000,000 queries over 1 Billion queries","startUsageAmount":"1000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:36,388 - INFO - ✅ AWS::Route53::RecordSet in ca-central-1: Query successful
2025-05-27 01:39:36,388 - INFO - Testing AWS::Route53Resolver::ResolverEndpoint in us-east-1
2025-05-27 01:39:36,388 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ResolverNetworkInterface$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:36,390 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:36,548 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:39:36,548 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.125","unit":"Hours","description":"$0.125 per hour per Resolver Network Interface","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:36,548 - INFO - ✅ AWS::Route53Resolver::ResolverEndpoint in us-east-1: Query successful
2025-05-27 01:39:36,549 - INFO - Testing AWS::Route53Resolver::ResolverEndpoint in ca-central-1
2025-05-27 01:39:36,549 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ResolverNetworkInterface$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:36,551 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:36,732 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:39:36,733 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.125","unit":"Hours","description":"$0.125 per hour per Resolver Network Interface","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:36,733 - INFO - ✅ AWS::Route53Resolver::ResolverEndpoint in ca-central-1: Query successful
2025-05-27 01:39:36,733 - INFO - Testing AWS::SNS::Subscription in us-east-1
2025-05-27 01:39:36,733 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "Requests-Tier1" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:36,735 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:36,911 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:39:36,912 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:36,912 - INFO - ✅ AWS::SNS::Subscription in us-east-1: Query successful
2025-05-27 01:39:36,912 - INFO - Testing AWS::SNS::Subscription in ca-central-1
2025-05-27 01:39:36,912 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "CAN1-Requests-Tier1" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:39:36,915 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:39:37,086 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:39:37,086 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:39:37,086 - INFO - ✅ AWS::SNS::Subscription in ca-central-1: Query successful
2025-05-27 01:39:37,098 - INFO - Test completed. Detailed results saved to comprehensive_test_results.json
2025-05-27 01:40:50,536 - INFO - Starting comprehensive query validation test
2025-05-27 01:40:50,536 - INFO - Testing AWS::EC2::Instance in us-east-1
2025-05-27 01:40:50,536 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:50,569 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:50,748 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:40:50,748 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0104","unit":"Hrs","description":"$0.0104 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:50,749 - INFO - ✅ AWS::EC2::Instance in us-east-1: Query successful
2025-05-27 01:40:50,749 - INFO - Testing AWS::EC2::Instance in ca-central-1
2025-05-27 01:40:50,749 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:50,751 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:50,927 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:40:50,927 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0116","unit":"Hrs","description":"$0.0116 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:50,928 - INFO - ✅ AWS::EC2::Instance in ca-central-1: Query successful
2025-05-27 01:40:50,928 - INFO - Testing AWS::EC2::Volume in us-east-1
2025-05-27 01:40:50,928 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "volumeApiName", value: "gp3" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:50,930 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:51,103 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 217
2025-05-27 01:40:51,104 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.08","unit":"GB-Mo","description":"$0.08 per GB-month of General Purpose (gp3) provisioned storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:51,104 - INFO - ✅ AWS::EC2::Volume in us-east-1: Query successful
2025-05-27 01:40:51,104 - INFO - Testing AWS::EC2::Volume in ca-central-1
2025-05-27 01:40:51,104 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "volumeApiName", value: "gp3" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:51,106 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:51,281 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 214
2025-05-27 01:40:51,281 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.088","unit":"GB-Mo","description":"$0.088 per GB-month of General Purpose (gp3) provisioned storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:51,281 - INFO - ✅ AWS::EC2::Volume in ca-central-1: Query successful
2025-05-27 01:40:51,281 - INFO - Testing AWS::EC2::EIP in us-east-1
2025-05-27 01:40:51,281 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "IP Address",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ElasticIP:IdleAddress/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:51,283 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:51,461 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 381
2025-05-27 01:40:51,461 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Hrs","description":"$0.00 per Elastic IP address not attached to a running instance for the first hour","startUsageAmount":"0","endUsageAmount":"1"},{"USD":"0.005","unit":"Hrs","description":"$0.005 per Elastic IP address not attached to a running instance per hour (prorated)","startUsageAmount":"1","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:51,462 - INFO - ✅ AWS::EC2::EIP in us-east-1: Query successful
2025-05-27 01:40:51,462 - INFO - Testing AWS::EC2::EIP in ca-central-1
2025-05-27 01:40:51,462 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "IP Address",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ElasticIP:IdleAddress/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:51,464 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:51,628 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 381
2025-05-27 01:40:51,629 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Hrs","description":"$0.00 per Elastic IP address not attached to a running instance for the first hour","startUsageAmount":"0","endUsageAmount":"1"},{"USD":"0.005","unit":"Hrs","description":"$0.005 per Elastic IP address not attached to a running instance per hour (prorated)","startUsageAmount":"1","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:51,630 - INFO - ✅ AWS::EC2::EIP in ca-central-1: Query successful
2025-05-27 01:40:51,630 - INFO - Testing AWS::EC2::Snapshot in us-east-1
2025-05-27 01:40:51,630 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage Snapshot",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EBS:SnapshotUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:51,633 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:51,806 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 202
2025-05-27 01:40:51,807 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"GB-Mo","description":"$0.05 per GB-Month of snapshot data stored - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:51,807 - INFO - ✅ AWS::EC2::Snapshot in us-east-1: Query successful
2025-05-27 01:40:51,807 - INFO - Testing AWS::EC2::Snapshot in ca-central-1
2025-05-27 01:40:51,807 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Storage Snapshot",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EBS:SnapshotUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:51,809 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:51,983 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 193
2025-05-27 01:40:51,983 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.055","unit":"GB-Mo","description":"$0.055 per GB-Month of snapshot data stored - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:51,983 - INFO - ✅ AWS::EC2::Snapshot in ca-central-1: Query successful
2025-05-27 01:40:51,983 - INFO - Testing AWS::RDS::DBInstance in us-east-1
2025-05-27 01:40:51,984 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.micro" },
                { key: "databaseEngine", value: "MySQL" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:51,985 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:52,161 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 395
2025-05-27 01:40:52,161 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.034","unit":"Hrs","description":"USD 0.034 per db.t3.micro Multi-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.017","unit":"Hrs","description":"USD 0.017 per db.t3.micro Single-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:52,161 - INFO - ✅ AWS::RDS::DBInstance in us-east-1: Query successful
2025-05-27 01:40:52,161 - INFO - Testing AWS::RDS::DBInstance in ca-central-1
2025-05-27 01:40:52,161 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.micro" },
                { key: "databaseEngine", value: "MySQL" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:52,163 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:52,319 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 395
2025-05-27 01:40:52,320 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.019","unit":"Hrs","description":"USD 0.019 per db.t3.micro Single-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.037","unit":"Hrs","description":"USD 0.037 per db.t3.micro Multi-AZ instance hour (or partial hour) running MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:52,320 - INFO - ✅ AWS::RDS::DBInstance in ca-central-1: Query successful
2025-05-27 01:40:52,320 - INFO - Testing AWS::RDS::DBCluster in us-east-1
2025-05-27 01:40:52,320 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "databaseEngine", value: "Any" },
                { key: "usagetype", value_regex: "/Aurora.*StorageUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:52,323 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:52,494 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 354
2025-05-27 01:40:52,495 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.225","unit":"GB-Mo","description":"USD 0.225 per GB-month of I/O-Optimized consumed storage (Aurora MySQL)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.10 per GB-month of consumed storage (Aurora)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:52,495 - INFO - ✅ AWS::RDS::DBCluster in us-east-1: Query successful
2025-05-27 01:40:52,495 - INFO - Testing AWS::RDS::DBCluster in ca-central-1
2025-05-27 01:40:52,495 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRDS",
              productFamily: "Database Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "databaseEngine", value: "Any" },
                { key: "usagetype", value_regex: "/Aurora.*StorageUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:52,497 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:52,671 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 366
2025-05-27 01:40:52,671 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.11","unit":"GB-Mo","description":"USD 0.11 per GB-month of consumed storage for Aurora MySQL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.248","unit":"GB-Mo","description":"USD 0.248 per GB-month of I/O-Optimized consumed storage (Aurora MySQL)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:52,672 - INFO - ✅ AWS::RDS::DBCluster in ca-central-1: Query successful
2025-05-27 01:40:52,672 - INFO - Testing AWS::S3::Bucket in us-east-1
2025-05-27 01:40:52,672 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonS3",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/TimedStorage-ByteHrs/" },
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:52,674 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:52,864 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 483
2025-05-27 01:40:52,865 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.023","unit":"GB-Mo","description":"$0.023 per GB - first 50 TB / month of storage used","startUsageAmount":"0","endUsageAmount":"51200"},{"USD":"0.022","unit":"GB-Mo","description":"$0.022 per GB - next 450 TB / month of storage used","startUsageAmount":"51200","endUsageAmount":"512000"},{"USD":"0.021","unit":"GB-Mo","description":"$0.021 per GB - storage used / month over 500 TB","startUsageAmount":"512000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:52,865 - INFO - ✅ AWS::S3::Bucket in us-east-1: Query successful
2025-05-27 01:40:52,865 - INFO - Testing AWS::S3::Bucket in ca-central-1
2025-05-27 01:40:52,865 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonS3",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/TimedStorage-ByteHrs/" },
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:52,868 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:53,039 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 483
2025-05-27 01:40:53,040 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.025","unit":"GB-Mo","description":"$0.025 per GB - first 50 TB / month of storage used","startUsageAmount":"0","endUsageAmount":"51200"},{"USD":"0.024","unit":"GB-Mo","description":"$0.024 per GB - next 450 TB / month of storage used","startUsageAmount":"51200","endUsageAmount":"512000"},{"USD":"0.023","unit":"GB-Mo","description":"$0.023 per GB - storage used / month over 500 TB","startUsageAmount":"512000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:53,040 - INFO - ✅ AWS::S3::Bucket in ca-central-1: Query successful
2025-05-27 01:40:53,040 - INFO - Testing AWS::Lambda::Function in us-east-1
2025-05-27 01:40:53,040 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSLambda",
              productFamily: "Serverless",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/GB-Second/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:53,042 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:53,215 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 2069
2025-05-27 01:40:53,215 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"3.09e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage for ARM - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000166667","unit":"seconds","description":"AWS Lambda - Total Compute - US East (Northern Virginia)-Tier-1","startUsageAmount":"0","endUsageAmount":"6000000000"},{"USD":"0.000015","unit":"seconds","description":"AWS Lambda - Total Compute - US East (Northern Virginia)-Tier-2","startUsageAmount":"6000000000","endUsageAmount":"15000000000"},{"USD":"0.0000133334","unit":"seconds","description":"AWS Lambda - Total Compute - US East (Northern Virginia)-Tier-3","startUsageAmount":"15000000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00005001","unit":"Lambda-GB-Second","description":"AWS Lambda Edge - Total Compute - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000133334","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - US East (Northern Virginia)-Tier-1","startUsageAmount":"0","endUsageAmount":"7500000000"},{"USD":"0.0000120001","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - US East (Northern Virginia)-Tier-2","startUsageAmount":"7500000000","endUsageAmount":"18750000000"},{"USD":"0.0000106667","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - US East (Northern Virginia)-Tier-3","startUsageAmount":"18750000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000077778","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute (Provisioned) for ARM - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3.09e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000097222","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute (Provisioned) - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:53,215 - INFO - ✅ AWS::Lambda::Function in us-east-1: Query successful
2025-05-27 01:40:53,215 - INFO - Testing AWS::Lambda::Function in ca-central-1
2025-05-27 01:40:53,215 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSLambda",
              productFamily: "Serverless",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/GB-Second/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:53,217 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:53,385 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 2003
2025-05-27 01:40:53,386 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000166667","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute - Canada (Central)-Tier-1","startUsageAmount":"0","endUsageAmount":"6000000000"},{"USD":"0.000015","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute - Canada (Central)-Tier-2","startUsageAmount":"6000000000","endUsageAmount":"15000000000"},{"USD":"0.0000133334","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute - Canada (Central)-Tier-3","startUsageAmount":"15000000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000133334","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - Canada (Central)-Tier-1","startUsageAmount":"0","endUsageAmount":"7500000000"},{"USD":"0.0000120001","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - Canada (Central)-Tier-2","startUsageAmount":"7500000000","endUsageAmount":"18750000000"},{"USD":"0.0000106667","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM - Canada (Central)-Tier-3","startUsageAmount":"18750000000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3.4e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage for ARM - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00005001","unit":"Lambda-GB-Second","description":"AWS Lambda Edge - Total Compute - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3.4e-8","unit":"GB-Seconds","description":"AWS Lambda - Ephemeral Storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000108407","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute (Provisioned) - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0000086726","unit":"Lambda-GB-Second","description":"AWS Lambda - Total Compute for ARM (Provisioned) - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:53,386 - INFO - ✅ AWS::Lambda::Function in ca-central-1: Query successful
2025-05-27 01:40:53,386 - INFO - Testing AWS::ElasticLoadBalancingV2::LoadBalancer in us-east-1
2025-05-27 01:40:53,386 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" },
                { key: "operation", value: "LoadBalancing" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:53,388 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:53,553 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:40:53,553 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.025","unit":"Hrs","description":"$0.025 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:53,553 - INFO - ✅ AWS::ElasticLoadBalancingV2::LoadBalancer in us-east-1: Query successful
2025-05-27 01:40:53,553 - INFO - Testing AWS::ElasticLoadBalancingV2::LoadBalancer in ca-central-1
2025-05-27 01:40:53,554 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" },
                { key: "operation", value: "LoadBalancing" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:53,556 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:53,715 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:40:53,715 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0275","unit":"Hrs","description":"$0.0275 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:53,716 - INFO - ✅ AWS::ElasticLoadBalancingV2::LoadBalancer in ca-central-1: Query successful
2025-05-27 01:40:53,716 - INFO - Testing AWS::ElasticLoadBalancing::LoadBalancer in us-east-1
2025-05-27 01:40:53,716 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "us-east-1",
              attributeFilters: [
                { key: "locationType", value: "AWS Region" },
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:53,718 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:53,884 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:40:53,885 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.025","unit":"Hrs","description":"$0.025 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:53,885 - INFO - ✅ AWS::ElasticLoadBalancing::LoadBalancer in us-east-1: Query successful
2025-05-27 01:40:53,885 - INFO - Testing AWS::ElasticLoadBalancing::LoadBalancer in ca-central-1
2025-05-27 01:40:53,885 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSELB",
              productFamily: "Load Balancer",
              region: "ca-central-1",
              attributeFilters: [
                { key: "locationType", value: "AWS Region" },
                { key: "usagetype", value_regex: "/LoadBalancerUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:53,887 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:54,060 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:40:54,061 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0275","unit":"Hrs","description":"$0.0275 per LoadBalancer-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:54,061 - INFO - ✅ AWS::ElasticLoadBalancing::LoadBalancer in ca-central-1: Query successful
2025-05-27 01:40:54,061 - INFO - Testing AWS::Logs::LogGroup in us-east-1
2025-05-27 01:40:54,061 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Data Payload",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/DataProcessing-Bytes/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:54,064 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:54,244 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 406
2025-05-27 01:40:54,245 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.5","unit":"GB","description":"$0.50 per GB custom log data ingested in Standard log class - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.5","unit":"GB","description":"$0.50 per GB custom log data ingested in Standard log class - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:54,245 - INFO - ✅ AWS::Logs::LogGroup in us-east-1: Query successful
2025-05-27 01:40:54,245 - INFO - Testing AWS::Logs::LogGroup in ca-central-1
2025-05-27 01:40:54,245 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Data Payload",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/DataProcessing-Bytes/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:54,247 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:54,414 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 205
2025-05-27 01:40:54,414 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.55","unit":"GB","description":"$0.55 per GB custom log data ingested in Standard log class - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:54,415 - INFO - ✅ AWS::Logs::LogGroup in ca-central-1: Query successful
2025-05-27 01:40:54,415 - INFO - Testing AWS::CloudWatch::Dashboard in us-east-1
2025-05-27 01:40:54,415 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Dashboard",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Dashboard/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:54,417 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:54,584 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 730
2025-05-27 01:40:54,584 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"2.834112","unit":"Dashboards","description":"20.36 CNY Dashboard per Month","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"2.834112","unit":"Dashboards","description":"20.36 CNY per Dashboard per Month (>50 metrics)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3","unit":"Dashboards","description":"$3.00 per Dashboard per Month (>50 metrics)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3","unit":"Dashboards","description":"$3.00 per Dashboard per Month","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0","unit":"Dashboards","description":"Global","startUsageAmount":"0","endUsageAmount":"3"}]}]}}

2025-05-27 01:40:54,584 - INFO - ✅ AWS::CloudWatch::Dashboard in us-east-1: Query successful
2025-05-27 01:40:54,584 - INFO - Testing AWS::CloudWatch::Dashboard in ca-central-1
2025-05-27 01:40:54,585 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Dashboard",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Dashboard/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:54,587 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:54,759 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 730
2025-05-27 01:40:54,760 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"2.834112","unit":"Dashboards","description":"20.36 CNY Dashboard per Month","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"2.834112","unit":"Dashboards","description":"20.36 CNY per Dashboard per Month (>50 metrics)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3","unit":"Dashboards","description":"$3.00 per Dashboard per Month (>50 metrics)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"3","unit":"Dashboards","description":"$3.00 per Dashboard per Month","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0","unit":"Dashboards","description":"Global","startUsageAmount":"0","endUsageAmount":"3"}]}]}}

2025-05-27 01:40:54,760 - INFO - ✅ AWS::CloudWatch::Dashboard in ca-central-1: Query successful
2025-05-27 01:40:54,760 - INFO - Testing AWS::CloudWatch::Alarm in us-east-1
2025-05-27 01:40:54,760 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Alarm",
              region: "us-east-1",
              attributeFilters: [
                { key: "alarmType", value_regex: "/Standard/" },
                { key: "usagetype", value_regex: "/AlarmMonitorUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:54,762 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:54,923 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 210
2025-05-27 01:40:54,924 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Alarms","description":"$0.10 per alarm metric month (standard resolution) - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:54,924 - INFO - ✅ AWS::CloudWatch::Alarm in us-east-1: Query successful
2025-05-27 01:40:54,924 - INFO - Testing AWS::CloudWatch::Alarm in ca-central-1
2025-05-27 01:40:54,924 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonCloudWatch",
              productFamily: "Alarm",
              region: "ca-central-1",
              attributeFilters: [
                { key: "alarmType", value_regex: "/Standard/" },
                { key: "usagetype", value_regex: "/AlarmMonitorUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:54,926 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:55,107 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 199
2025-05-27 01:40:55,107 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Alarms","description":"$0.10 per alarm metric month (standard resolution) - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:55,107 - INFO - ✅ AWS::CloudWatch::Alarm in ca-central-1: Query successful
2025-05-27 01:40:55,108 - INFO - Testing AWS::DynamoDB::Table in us-east-1
2025-05-27 01:40:55,108 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDynamoDB",
              productFamily: "Amazon DynamoDB PayPerRequest Throughput",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value: "DDB-ReadUnits" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:55,110 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:55,281 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 195
2025-05-27 01:40:55,282 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1.25e-7","unit":"ReadRequestUnits","description":"$0.125 per million read request units (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:55,282 - INFO - ✅ AWS::DynamoDB::Table in us-east-1: Query successful
2025-05-27 01:40:55,282 - INFO - Testing AWS::DynamoDB::Table in ca-central-1
2025-05-27 01:40:55,282 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDynamoDB",
              productFamily: "Amazon DynamoDB PayPerRequest Throughput",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value: "DDB-ReadUnits" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:55,284 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:55,452 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 202
2025-05-27 01:40:55,453 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1.375e-7","unit":"ReadRequestUnits","description":"$0.1375 per million read request units (Canada (Central))","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:55,453 - INFO - ✅ AWS::DynamoDB::Table in ca-central-1: Query successful
2025-05-27 01:40:55,453 - INFO - Testing AWS::ApiGateway::RestApi in us-east-1
2025-05-27 01:40:55,453 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:55,455 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:55,629 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1475
2025-05-27 01:40:55,629 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"Requests","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"Requests","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"Requests","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"USE1-AmazonApiGateway-Request","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"USE1-AmazonApiGateway-Request","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"USE1-AmazonApiGateway-Request","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"USE1-AmazonApiGateway-Request","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:55,630 - INFO - ✅ AWS::ApiGateway::RestApi in us-east-1: Query successful
2025-05-27 01:40:55,630 - INFO - Testing AWS::ApiGateway::RestApi in ca-central-1
2025-05-27 01:40:55,630 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:55,632 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:55,806 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1473
2025-05-27 01:40:55,807 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"CAN1-AmazonApiGatewayRequest","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"CAN1-AmazonApiGatewayRequest","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"Requests","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"Requests","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"Requests","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:55,807 - INFO - ✅ AWS::ApiGateway::RestApi in ca-central-1: Query successful
2025-05-27 01:40:55,807 - INFO - Testing AWS::ApiGatewayV2::Api in us-east-1
2025-05-27 01:40:55,807 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayHttpRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:55,809 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:55,978 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 377
2025-05-27 01:40:55,978 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"Requests","description":"$1/million requests - API Gateway HTTP API (first 300 million)","startUsageAmount":"0","endUsageAmount":"300000000"},{"USD":"9e-7","unit":"Requests","description":"$0.9/million requests - API Gateway HTTP API (more than 300 million)","startUsageAmount":"300000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:55,979 - INFO - ✅ AWS::ApiGatewayV2::Api in us-east-1: Query successful
2025-05-27 01:40:55,979 - INFO - Testing AWS::ApiGatewayV2::Api in ca-central-1
2025-05-27 01:40:55,979 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ApiGatewayHttpRequest/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:55,980 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:56,149 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 384
2025-05-27 01:40:56,149 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00000111","unit":"Requests","description":"$1.11/million requests - API Gateway HTTP API (first 300 million)","startUsageAmount":"0","endUsageAmount":"300000000"},{"USD":"0.000001","unit":"Requests","description":"$1/million requests - API Gateway HTTP API (more than 300 million)","startUsageAmount":"300000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:56,150 - INFO - ✅ AWS::ApiGatewayV2::Api in ca-central-1: Query successful
2025-05-27 01:40:56,150 - INFO - Testing AWS::KMS::Key in us-east-1
2025-05-27 01:40:56,150 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awskms",
              productFamily: "Encryption Key",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "us-east-1-KMS-Keys" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:56,151 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:56,324 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 190
2025-05-27 01:40:56,325 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1","unit":"Keys","description":"$1 per customer managed KMS key version in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:56,325 - INFO - ✅ AWS::KMS::Key in us-east-1: Query successful
2025-05-27 01:40:56,325 - INFO - Testing AWS::KMS::Key in ca-central-1
2025-05-27 01:40:56,325 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awskms",
              productFamily: "Encryption Key",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "ca-central-1-KMS-Keys" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:56,326 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:56,501 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 185
2025-05-27 01:40:56,501 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"1","unit":"Keys","description":"$1 per customer managed KMS key version in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:56,501 - INFO - ✅ AWS::KMS::Key in ca-central-1: Query successful
2025-05-27 01:40:56,501 - INFO - Testing AWS::EKS::Cluster in us-east-1
2025-05-27 01:40:56,501 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EKS.*Cluster/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:56,502 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:56,684 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 329
2025-05-27 01:40:56,684 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Hours","description":"Amazon EKS cluster usage in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.1","unit":"hours","description":"Amazon EKS local cluster usage on AWS Outposts","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:56,684 - INFO - ✅ AWS::EKS::Cluster in us-east-1: Query successful
2025-05-27 01:40:56,684 - INFO - Testing AWS::EKS::Cluster in ca-central-1
2025-05-27 01:40:56,684 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/EKS.*Cluster/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:56,685 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:56,868 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 324
2025-05-27 01:40:56,868 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"Hours","description":"Amazon EKS cluster usage in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.1","unit":"hours","description":"Amazon EKS local cluster usage on AWS Outposts","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:56,868 - INFO - ✅ AWS::EKS::Cluster in ca-central-1: Query successful
2025-05-27 01:40:56,868 - INFO - Testing AWS::EKS::Nodegroup in us-east-1
2025-05-27 01:40:56,868 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.medium" },
                { key: "tenancy", value: "Shared" },
                { key: "operatingSystem", value: "Linux" },
                { key: "preInstalledSw", value: "NA" },
                { key: "licenseModel", value: "No License required" },
                { key: "capacitystatus", value: "Used" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:56,870 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:57,033 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 181
2025-05-27 01:40:57,033 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0416","unit":"Hrs","description":"$0.0416 per On Demand Linux t3.medium Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:57,033 - INFO - ✅ AWS::EKS::Nodegroup in us-east-1: Query successful
2025-05-27 01:40:57,033 - INFO - Testing AWS::EKS::Nodegroup in ca-central-1
2025-05-27 01:40:57,033 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.medium" },
                { key: "tenancy", value: "Shared" },
                { key: "operatingSystem", value: "Linux" },
                { key: "preInstalledSw", value: "NA" },
                { key: "licenseModel", value: "No License required" },
                { key: "capacitystatus", value: "Used" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:57,034 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:57,201 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 181
2025-05-27 01:40:57,201 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0464","unit":"Hrs","description":"$0.0464 per On Demand Linux t3.medium Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:57,201 - INFO - ✅ AWS::EKS::Nodegroup in ca-central-1: Query successful
2025-05-27 01:40:57,201 - INFO - Testing AWS::ElastiCache::CacheCluster in us-east-1
2025-05-27 01:40:57,201 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:57,203 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:57,368 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:40:57,368 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.017","unit":"Hrs","description":"$0.017 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:57,369 - INFO - ✅ AWS::ElastiCache::CacheCluster in us-east-1: Query successful
2025-05-27 01:40:57,369 - INFO - Testing AWS::ElastiCache::CacheCluster in ca-central-1
2025-05-27 01:40:57,369 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:57,371 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:57,541 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:40:57,542 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.019","unit":"Hrs","description":"$0.019 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:57,542 - INFO - ✅ AWS::ElastiCache::CacheCluster in ca-central-1: Query successful
2025-05-27 01:40:57,542 - INFO - Testing AWS::ElastiCache::ReplicationGroup in us-east-1
2025-05-27 01:40:57,542 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:57,544 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:57,778 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:40:57,779 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.017","unit":"Hrs","description":"$0.017 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:57,779 - INFO - ✅ AWS::ElastiCache::ReplicationGroup in us-east-1: Query successful
2025-05-27 01:40:57,779 - INFO - Testing AWS::ElastiCache::ReplicationGroup in ca-central-1
2025-05-27 01:40:57,779 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonElastiCache",
              productFamily: "Cache Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "cache.t3.micro" },
                { key: "locationType", value: "AWS Region" },
                { key: "cacheEngine", value: "Redis" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:57,781 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:57,948 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 196
2025-05-27 01:40:57,948 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.019","unit":"Hrs","description":"$0.019 per T3 Micro Cache node-hour (or partial hour) running Redis","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:57,948 - INFO - ✅ AWS::ElastiCache::ReplicationGroup in ca-central-1: Query successful
2025-05-27 01:40:57,948 - INFO - Testing AWS::Redshift::Cluster in us-east-1
2025-05-27 01:40:57,948 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRedshift",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "dc2.large" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:57,950 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:58,175 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 211
2025-05-27 01:40:58,175 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.25","unit":"Hrs","description":"$0.250 per Redshift Dense Compute Large (DC2.L) Compute Node-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:58,175 - INFO - ✅ AWS::Redshift::Cluster in us-east-1: Query successful
2025-05-27 01:40:58,175 - INFO - Testing AWS::Redshift::Cluster in ca-central-1
2025-05-27 01:40:58,175 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRedshift",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "dc2.large" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:58,177 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:58,348 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 212
2025-05-27 01:40:58,348 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.275","unit":"Hrs","description":"$0.275 per Redshift Dense Compute Large (DC2.L) Compute Node-hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:58,348 - INFO - ✅ AWS::Redshift::Cluster in ca-central-1: Query successful
2025-05-27 01:40:58,348 - INFO - Testing AWS::Route53::HostedZone in us-east-1
2025-05-27 01:40:58,348 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Zone",
              attributeFilters: [
                { key: "usagetype", value: "HostedZone" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:58,349 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:58,515 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 331
2025-05-27 01:40:58,515 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.5","unit":"HostedZone","description":"$0.50 per Hosted Zone for the first 25 Hosted Zones","startUsageAmount":"0","endUsageAmount":"25"},{"USD":"0.1","unit":"HostedZone","description":"$0.10 per Hosted Zone for additional Hosted Zones","startUsageAmount":"25","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:58,515 - INFO - ✅ AWS::Route53::HostedZone in us-east-1: Query successful
2025-05-27 01:40:58,515 - INFO - Testing AWS::Route53::HostedZone in ca-central-1
2025-05-27 01:40:58,515 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Zone",
              attributeFilters: [
                { key: "usagetype", value: "HostedZone" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:58,517 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:58,692 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 331
2025-05-27 01:40:58,693 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.5","unit":"HostedZone","description":"$0.50 per Hosted Zone for the first 25 Hosted Zones","startUsageAmount":"0","endUsageAmount":"25"},{"USD":"0.1","unit":"HostedZone","description":"$0.10 per Hosted Zone for additional Hosted Zones","startUsageAmount":"25","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:58,693 - INFO - ✅ AWS::Route53::HostedZone in ca-central-1: Query successful
2025-05-27 01:40:58,693 - INFO - Testing AWS::Route53::HealthCheck in us-east-1
2025-05-27 01:40:58,693 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Health Check",
              attributeFilters: [
                { key: "usagetype", value: "Health-Check-AWS" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:58,695 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:58,870 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 339
2025-05-27 01:40:58,870 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Mo","description":"First 50 Health Checks of AWS endpoints are free of charge","startUsageAmount":"0","endUsageAmount":"50"},{"USD":"0.5","unit":"Mo","description":"$0.50 per Health Check for additional Health Checks of AWS endpoints","startUsageAmount":"50","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:58,870 - INFO - ✅ AWS::Route53::HealthCheck in us-east-1: Query successful
2025-05-27 01:40:58,870 - INFO - Testing AWS::Route53::HealthCheck in ca-central-1
2025-05-27 01:40:58,870 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Health Check",
              attributeFilters: [
                { key: "usagetype", value: "Health-Check-AWS" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:58,871 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:59,056 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 339
2025-05-27 01:40:59,056 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Mo","description":"First 50 Health Checks of AWS endpoints are free of charge","startUsageAmount":"0","endUsageAmount":"50"},{"USD":"0.5","unit":"Mo","description":"$0.50 per Health Check for additional Health Checks of AWS endpoints","startUsageAmount":"50","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:59,056 - INFO - ✅ AWS::Route53::HealthCheck in ca-central-1: Query successful
2025-05-27 01:40:59,056 - INFO - Testing AWS::SNS::Topic in us-east-1
2025-05-27 01:40:59,056 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:59,058 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:59,234 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:40:59,235 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:59,235 - INFO - ✅ AWS::SNS::Topic in us-east-1: Query successful
2025-05-27 01:40:59,235 - INFO - Testing AWS::SNS::Topic in ca-central-1
2025-05-27 01:40:59,235 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:59,236 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:59,414 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:40:59,414 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:59,414 - INFO - ✅ AWS::SNS::Topic in ca-central-1: Query successful
2025-05-27 01:40:59,414 - INFO - Testing AWS::SQS::Queue in us-east-1
2025-05-27 01:40:59,414 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:59,416 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:59,603 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:40:59,603 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:59,603 - INFO - ✅ AWS::SQS::Queue in us-east-1: Query successful
2025-05-27 01:40:59,603 - INFO - Testing AWS::SQS::Queue in ca-central-1
2025-05-27 01:40:59,603 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Requests-Tier1$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:59,605 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:59,779 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:40:59,779 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:59,779 - INFO - ✅ AWS::SQS::Queue in ca-central-1: Query successful
2025-05-27 01:40:59,779 - INFO - Testing AWS::SecretsManager::Secret in us-east-1
2025-05-27 01:40:59,779 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSecretsManager",
              productFamily: "Secret",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:59,781 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:40:59,964 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 147
2025-05-27 01:40:59,964 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.4","unit":"Secrets","description":"$0.40 per Secret","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:40:59,964 - INFO - ✅ AWS::SecretsManager::Secret in us-east-1: Query successful
2025-05-27 01:40:59,964 - INFO - Testing AWS::SecretsManager::Secret in ca-central-1
2025-05-27 01:40:59,964 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSecretsManager",
              productFamily: "Secret",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:40:59,965 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:00,122 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 147
2025-05-27 01:41:00,122 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.4","unit":"Secrets","description":"$0.40 per Secret","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:00,123 - INFO - ✅ AWS::SecretsManager::Secret in ca-central-1: Query successful
2025-05-27 01:41:00,123 - INFO - Testing AWS::StepFunctions::StateMachine in us-east-1
2025-05-27 01:41:00,123 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonStates",
              productFamily: "AWS Step Functions",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/StateTransition/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:00,124 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:00,293 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:41:00,294 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000025","unit":"StateTransitions","description":"$0.000025 per state transition","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:00,294 - INFO - ✅ AWS::StepFunctions::StateMachine in us-east-1: Query successful
2025-05-27 01:41:00,294 - INFO - Testing AWS::StepFunctions::StateMachine in ca-central-1
2025-05-27 01:41:00,294 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonStates",
              productFamily: "AWS Step Functions",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/StateTransition/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:00,296 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:00,471 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:41:00,471 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000025","unit":"StateTransitions","description":"$0.000025 per state transition","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:00,472 - INFO - ✅ AWS::StepFunctions::StateMachine in ca-central-1: Query successful
2025-05-27 01:41:00,472 - INFO - Testing AWS::EC2::NatGateway in us-east-1
2025-05-27 01:41:00,472 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "NAT Gateway",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/NatGateway-Hours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:00,473 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:00,635 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 156
2025-05-27 01:41:00,636 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.045","unit":"Hrs","description":"$0.045 per NAT Gateway Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:00,636 - INFO - ✅ AWS::EC2::NatGateway in us-east-1: Query successful
2025-05-27 01:41:00,636 - INFO - Testing AWS::EC2::NatGateway in ca-central-1
2025-05-27 01:41:00,636 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "NAT Gateway",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/NatGateway-Hours/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:00,637 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:00,811 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 154
2025-05-27 01:41:00,811 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per NAT Gateway Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:00,811 - INFO - ✅ AWS::EC2::NatGateway in ca-central-1: Query successful
2025-05-27 01:41:00,811 - INFO - Testing AWS::EC2::VPNConnection in us-east-1
2025-05-27 01:41:00,811 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "Cloud Connectivity",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:00,812 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:01,005 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 157
2025-05-27 01:41:01,005 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per VPN Connection-Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:01,005 - INFO - ✅ AWS::EC2::VPNConnection in us-east-1: Query successful
2025-05-27 01:41:01,005 - INFO - Testing AWS::EC2::VPNConnection in ca-central-1
2025-05-27 01:41:01,005 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "Cloud Connectivity",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:01,007 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:01,176 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 157
2025-05-27 01:41:01,176 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per VPN Connection-Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:01,176 - INFO - ✅ AWS::EC2::VPNConnection in ca-central-1: Query successful
2025-05-27 01:41:01,177 - INFO - Testing AWS::EC2::VPCEndpoint in us-east-1
2025-05-27 01:41:01,177 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "VpcEndpoint",
              region: "us-east-1",
              attributeFilters: [
                { key: "endpointType", value: "PrivateLink" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:01,178 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:01,336 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 689
2025-05-27 01:41:01,336 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.01","unit":"GB","description":"$0.01 per GB for upto 1 PB monthly data processed by VPC Endpoints","startUsageAmount":"0","endUsageAmount":"1048576"},{"USD":"0.006","unit":"GB","description":"$0.006 per GB for more than 1 PB and less than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"1048576","endUsageAmount":"5242880"},{"USD":"0.004","unit":"GB","description":"$0.004 per GB for more than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"5242880","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.01","unit":"Hrs","description":"$0.01 per VPC Endpoint Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:01,336 - INFO - ✅ AWS::EC2::VPCEndpoint in us-east-1: Query successful
2025-05-27 01:41:01,336 - INFO - Testing AWS::EC2::VPCEndpoint in ca-central-1
2025-05-27 01:41:01,336 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonVPC",
              productFamily: "VpcEndpoint",
              region: "ca-central-1",
              attributeFilters: [
                { key: "endpointType", value: "PrivateLink" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:01,337 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:01,503 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 691
2025-05-27 01:41:01,503 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.011","unit":"Hrs","description":"$0.011 per VPC Endpoint Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.01","unit":"GB","description":"$0.01 per GB for upto 1 PB monthly data processed by VPC Endpoints","startUsageAmount":"0","endUsageAmount":"1048576"},{"USD":"0.006","unit":"GB","description":"$0.006 per GB for more than 1 PB and less than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"1048576","endUsageAmount":"5242880"},{"USD":"0.004","unit":"GB","description":"$0.004 per GB for more than 5 PB monthly data processed by VPC Endpoints","startUsageAmount":"5242880","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:01,503 - INFO - ✅ AWS::EC2::VPCEndpoint in ca-central-1: Query successful
2025-05-27 01:41:01,503 - INFO - Testing AWS::WAF::WebACL in us-east-1
2025-05-27 01:41:01,503 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:01,505 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:01,692 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:41:01,692 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:01,692 - INFO - ✅ AWS::WAF::WebACL in us-east-1: Query successful
2025-05-27 01:41:01,692 - INFO - Testing AWS::WAF::WebACL in ca-central-1
2025-05-27 01:41:01,692 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:01,694 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:01,878 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:41:01,878 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:01,879 - INFO - ✅ AWS::WAF::WebACL in ca-central-1: Query successful
2025-05-27 01:41:01,879 - INFO - Testing AWS::WAFv2::WebACL in us-east-1
2025-05-27 01:41:01,879 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:01,880 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:02,055 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:41:02,056 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:02,056 - INFO - ✅ AWS::WAFv2::WebACL in us-east-1: Query successful
2025-05-27 01:41:02,056 - INFO - Testing AWS::WAFv2::WebACL in ca-central-1
2025-05-27 01:41:02,056 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "awswaf",
              productFamily: "Web Application Firewall",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-(?!ShieldProtected-)WebACL/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:02,057 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:02,227 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 289
2025-05-27 01:41:02,227 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5","unit":"Month","description":"$5.00 per web ACL created (prorated hourly)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"5","unit":"month","description":"Price per WebACL","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:02,228 - INFO - ✅ AWS::WAFv2::WebACL in ca-central-1: Query successful
2025-05-27 01:41:02,228 - INFO - Testing AWS::AutoScaling::AutoScalingGroup in us-east-1
2025-05-27 01:41:02,228 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:02,229 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:02,403 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:41:02,403 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0104","unit":"Hrs","description":"$0.0104 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:02,404 - INFO - ✅ AWS::AutoScaling::AutoScalingGroup in us-east-1: Query successful
2025-05-27 01:41:02,404 - INFO - Testing AWS::AutoScaling::AutoScalingGroup in ca-central-1
2025-05-27 01:41:02,404 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "t3.micro" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" },
                { key: "capacitystatus", value: "Used" },
                { key: "preInstalledSw", value: "NA" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:02,405 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:02,581 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 180
2025-05-27 01:41:02,581 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0116","unit":"Hrs","description":"$0.0116 per On Demand Linux t3.micro Instance Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:02,581 - INFO - ✅ AWS::AutoScaling::AutoScalingGroup in ca-central-1: Query successful
2025-05-27 01:41:02,581 - INFO - Testing AWS::ECR::Repository in us-east-1
2025-05-27 01:41:02,581 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECR",
              productFamily: "EC2 Container Registry",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:02,583 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:02,745 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 163
2025-05-27 01:41:02,745 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.10 per GB-month of data storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:02,746 - INFO - ✅ AWS::ECR::Repository in us-east-1: Query successful
2025-05-27 01:41:02,746 - INFO - Testing AWS::ECR::Repository in ca-central-1
2025-05-27 01:41:02,746 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECR",
              productFamily: "EC2 Container Registry",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:02,747 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:02,920 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 163
2025-05-27 01:41:02,920 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.10 per GB-month of data storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:02,920 - INFO - ✅ AWS::ECR::Repository in ca-central-1: Query successful
2025-05-27 01:41:02,920 - INFO - Testing AWS::EFS::FileSystem in us-east-1
2025-05-27 01:41:02,920 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEFS",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:02,922 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:03,091 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 176
2025-05-27 01:41:03,091 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.3","unit":"GB-Mo","description":"USD $0.30 per GB-Mo for Standard storage (USE1)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:03,092 - INFO - ✅ AWS::EFS::FileSystem in us-east-1: Query successful
2025-05-27 01:41:03,092 - INFO - Testing AWS::EFS::FileSystem in ca-central-1
2025-05-27 01:41:03,092 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEFS",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "storageClass", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:03,093 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:03,264 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:41:03,264 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.33","unit":"GB-Mo","description":"USD $0.33 per GB-Mo for Standard storage (CAN1)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:03,265 - INFO - ✅ AWS::EFS::FileSystem in ca-central-1: Query successful
2025-05-27 01:41:03,265 - INFO - Testing AWS::CodeBuild::Project in us-east-1
2025-05-27 01:41:03,265 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "CodeBuild",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Linux:g1.small/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:03,266 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:03,441 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 587
2025-05-27 01:41:03,441 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Docker-Sec:Linux:g1.small in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.005","unit":"minutes","description":"AWS CodeBuild - Build minutes on build.general1.small - US East (Northern Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Sandbox-Sec:Linux:g1.small in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:03,442 - INFO - ✅ AWS::CodeBuild::Project in us-east-1: Query successful
2025-05-27 01:41:03,442 - INFO - Testing AWS::CodeBuild::Project in ca-central-1
2025-05-27 01:41:03,442 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "CodeBuild",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Linux:g1.small/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:03,443 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:03,603 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 566
2025-05-27 01:41:03,603 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.005","unit":"minutes","description":"AWS CodeBuild - Build minutes on build.general1.small - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Docker-Sec:Linux:g1.small in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.00003","unit":"seconds","description":"$0.00003 per second for Sandbox-Sec:Linux:g1.small in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:03,604 - INFO - ✅ AWS::CodeBuild::Project in ca-central-1: Query successful
2025-05-27 01:41:03,604 - INFO - Testing AWS::Kinesis::Stream in us-east-1
2025-05-27 01:41:03,604 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesis",
              productFamily: "Kinesis Streams",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ShardHour/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:03,605 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:03,771 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 308
2025-05-27 01:41:03,772 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.02","unit":"ShardHour","description":"$0.020 per extended shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.015","unit":"ShardHour","description":"$0.015 per provisioned shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:03,772 - INFO - ✅ AWS::Kinesis::Stream in us-east-1: Query successful
2025-05-27 01:41:03,772 - INFO - Testing AWS::Kinesis::Stream in ca-central-1
2025-05-27 01:41:03,772 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesis",
              productFamily: "Kinesis Streams",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ShardHour/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:03,773 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:03,930 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 311
2025-05-27 01:41:03,930 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0165","unit":"ShardHour","description":"$0.0165 per provisioned shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.022","unit":"ShardHour","description":"$0.022 per extended shard-hour","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:03,931 - INFO - ✅ AWS::Kinesis::Stream in ca-central-1: Query successful
2025-05-27 01:41:03,931 - INFO - Testing AWS::CloudTrail::Trail in us-east-1
2025-05-27 01:41:03,931 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCloudTrail",
              productFamily: "Management Tools - AWS CloudTrail Data Events Recorded",
              region: "us-east-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:03,932 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:04,099 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 198
2025-05-27 01:41:04,099 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"Events","description":"0.000001 per data event recorded in US East (N.Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:04,099 - INFO - ✅ AWS::CloudTrail::Trail in us-east-1: Query successful
2025-05-27 01:41:04,099 - INFO - Testing AWS::CloudTrail::Trail in ca-central-1
2025-05-27 01:41:04,100 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSCloudTrail",
              productFamily: "Management Tools - AWS CloudTrail Data Events Recorded",
              region: "ca-central-1",
              attributeFilters: [
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:04,101 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:04,284 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:41:04,285 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"Events","description":"0.000001 per data event recorded in Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:04,285 - INFO - ✅ AWS::CloudTrail::Trail in ca-central-1: Query successful
2025-05-27 01:41:04,285 - INFO - Testing AWS::Backup::BackupVault in us-east-1
2025-05-27 01:41:04,285 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSBackup",
              productFamily: "AWS Backup Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/WarmStorage-ByteHrs-EFS$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:04,287 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:04,471 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 183
2025-05-27 01:41:04,472 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"GB-month","description":"$0.05 per GB-month for warm backup storage for EFS","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:04,472 - INFO - ✅ AWS::Backup::BackupVault in us-east-1: Query successful
2025-05-27 01:41:04,472 - INFO - Testing AWS::Backup::BackupVault in ca-central-1
2025-05-27 01:41:04,472 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSBackup",
              productFamily: "AWS Backup Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/WarmStorage-ByteHrs-EFS$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:04,474 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:04,643 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 185
2025-05-27 01:41:04,643 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.055","unit":"GB-month","description":"$0.055 per GB-month for warm backup storage for EFS","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:04,644 - INFO - ✅ AWS::Backup::BackupVault in ca-central-1: Query successful
2025-05-27 01:41:04,644 - INFO - Testing AWS::Transfer::Server in us-east-1
2025-05-27 01:41:04,644 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSTransfer",
              productFamily: "AWS Transfer Family",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-ProtocolHours$/" },
                { key: "operation", value_regex: "/^FTP:S3$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:04,645 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:04,817 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 176
2025-05-27 01:41:04,818 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.3","unit":"Hourly","description":"$0.3 per Hour for FTP in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:04,818 - INFO - ✅ AWS::Transfer::Server in us-east-1: Query successful
2025-05-27 01:41:04,818 - INFO - Testing AWS::Transfer::Server in ca-central-1
2025-05-27 01:41:04,818 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSTransfer",
              productFamily: "AWS Transfer Family",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-ProtocolHours$/" },
                { key: "operation", value_regex: "/^FTP:S3$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:04,819 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:05,000 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 171
2025-05-27 01:41:05,000 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.3","unit":"Hourly","description":"$0.3 per Hour for FTP in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:05,000 - INFO - ✅ AWS::Transfer::Server in ca-central-1: Query successful
2025-05-27 01:41:05,000 - INFO - Testing AWS::SSM::Parameter in us-east-1
2025-05-27 01:41:05,000 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/PS-Advanced-Param-Tier1/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:05,001 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:05,165 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 195
2025-05-27 01:41:05,165 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00007","unit":"Hour","description":"$0.05 per Advanced Parameter per Month in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:05,165 - INFO - ✅ AWS::SSM::Parameter in us-east-1: Query successful
2025-05-27 01:41:05,165 - INFO - Testing AWS::SSM::Parameter in ca-central-1
2025-05-27 01:41:05,165 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/PS-Advanced-Param-Tier1/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:05,167 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:05,336 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 190
2025-05-27 01:41:05,337 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00007","unit":"Hour","description":"$0.05 per Advanced Parameter per Month in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:05,337 - INFO - ✅ AWS::SSM::Parameter in ca-central-1: Query successful
2025-05-27 01:41:05,337 - INFO - Testing AWS::SSM::Activation in us-east-1
2025-05-27 01:41:05,338 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/MI-AdvInstances-Hrs/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:05,340 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:05,513 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:41:05,513 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00695","unit":"Hrs","description":"$0.00695 per Advanced Instance Hr in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:05,513 - INFO - ✅ AWS::SSM::Activation in us-east-1: Query successful
2025-05-27 01:41:05,513 - INFO - Testing AWS::SSM::Activation in ca-central-1
2025-05-27 01:41:05,513 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSSystemsManager",
              productFamily: "AWS Systems Manager",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/MI-AdvInstances-Hrs/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:05,514 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:05,683 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 184
2025-05-27 01:41:05,683 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00695","unit":"Hrs","description":"$0.00695 per Advanced Instance Hr in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:05,683 - INFO - ✅ AWS::SSM::Activation in ca-central-1: Query successful
2025-05-27 01:41:05,683 - INFO - Testing AWS::DocDB::DBCluster in us-east-1
2025-05-27 01:41:05,683 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Storage Snapshot",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/(^|-)BackupUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:05,685 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:05,853 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 227
2025-05-27 01:41:05,853 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.021","unit":"GB-Mo","description":"$0.021 per additional GB-month of backup storage exceeding free allocation for Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:05,853 - INFO - ✅ AWS::DocDB::DBCluster in us-east-1: Query successful
2025-05-27 01:41:05,853 - INFO - Testing AWS::DocDB::DBCluster in ca-central-1
2025-05-27 01:41:05,853 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Storage Snapshot",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/(^|-)BackupUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:05,855 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:06,024 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 227
2025-05-27 01:41:06,024 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.023","unit":"GB-Mo","description":"$0.023 per additional GB-month of backup storage exceeding free allocation for Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:06,024 - INFO - ✅ AWS::DocDB::DBCluster in ca-central-1: Query successful
2025-05-27 01:41:06,024 - INFO - Testing AWS::DocDB::DBInstance in us-east-1
2025-05-27 01:41:06,024 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Database Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "volumeType", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:06,025 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:06,208 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 210
2025-05-27 01:41:06,208 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.078","unit":"Hrs","description":"$0.078 per db.t3.medium instance hour (or partial hour) running Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:06,208 - INFO - ✅ AWS::DocDB::DBInstance in us-east-1: Query successful
2025-05-27 01:41:06,208 - INFO - Testing AWS::DocDB::DBInstance in ca-central-1
2025-05-27 01:41:06,209 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonDocDB",
              productFamily: "Database Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "volumeType", value: "General Purpose" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:06,210 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:06,395 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 210
2025-05-27 01:41:06,395 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.086","unit":"Hrs","description":"$0.086 per db.t3.medium instance hour (or partial hour) running Amazon DocumentDB","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:06,395 - INFO - ✅ AWS::DocDB::DBInstance in ca-central-1: Query successful
2025-05-27 01:41:06,395 - INFO - Testing AWS::Neptune::DBCluster in us-east-1
2025-05-27 01:41:06,395 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonNeptune",
              productFamily: "Database Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^([A-Z]{3}[0-9]-|Global-|EU-)?StorageUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:06,397 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:06,578 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 167
2025-05-27 01:41:06,578 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.1","unit":"GB-Mo","description":"$0.100 per GB / month (Amazon Neptune)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:06,578 - INFO - ✅ AWS::Neptune::DBCluster in us-east-1: Query successful
2025-05-27 01:41:06,578 - INFO - Testing AWS::Neptune::DBCluster in ca-central-1
2025-05-27 01:41:06,578 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonNeptune",
              productFamily: "Database Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^([A-Z]{3}[0-9]-|Global-|EU-)?StorageUsage$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:06,580 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:06,750 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 167
2025-05-27 01:41:06,750 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.11","unit":"GB-Mo","description":"$0.11 per GB / month (Amazon Neptune)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:06,750 - INFO - ✅ AWS::Neptune::DBCluster in ca-central-1: Query successful
2025-05-27 01:41:06,750 - INFO - Testing AWS::Neptune::DBInstance in us-east-1
2025-05-27 01:41:06,750 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonNeptune",
              productFamily: "Database Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "usagetype", value_regex: "/InstanceUsage:db.t3.medium$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:06,751 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:06,930 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:41:06,930 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.098","unit":"Hrs","description":"$0.098 per instance hour (or partial hour) running Amazon Neptune","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:06,930 - INFO - ✅ AWS::Neptune::DBInstance in us-east-1: Query successful
2025-05-27 01:41:06,931 - INFO - Testing AWS::Neptune::DBInstance in ca-central-1
2025-05-27 01:41:06,931 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonNeptune",
              productFamily: "Database Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "db.t3.medium" },
                { key: "usagetype", value_regex: "/InstanceUsage:db.t3.medium$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:06,932 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:07,114 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:41:07,114 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.108","unit":"Hrs","description":"$0.108 per instance hour (or partial hour) running Amazon Neptune","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:07,115 - INFO - ✅ AWS::Neptune::DBInstance in ca-central-1: Query successful
2025-05-27 01:41:07,115 - INFO - Testing AWS::Elasticsearch::Domain in us-east-1
2025-05-27 01:41:07,115 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonES",
              productFamily: "Amazon OpenSearch Service Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ESInstance/" },
                { key: "instanceType", value: "m4.large.search" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:07,116 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:07,293 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 187
2025-05-27 01:41:07,293 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.151","unit":"Hrs","description":"$0.151 per m4.large.search instance hour (or partial hour)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:07,293 - INFO - ✅ AWS::Elasticsearch::Domain in us-east-1: Query successful
2025-05-27 01:41:07,293 - INFO - Testing AWS::Elasticsearch::Domain in ca-central-1
2025-05-27 01:41:07,293 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonES",
              productFamily: "Amazon OpenSearch Service Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ESInstance/" },
                { key: "instanceType", value: "m4.large.search" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:07,294 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:07,469 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 194
2025-05-27 01:41:07,469 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.176","unit":"Hrs","description":"$0.176 per m4.large.search instance hour (or partial hour) - CAN1","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:07,469 - INFO - ✅ AWS::Elasticsearch::Domain in ca-central-1: Query successful
2025-05-27 01:41:07,469 - INFO - Testing AWS::Lightsail::Instance in us-east-1
2025-05-27 01:41:07,469 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonLightsail",
              productFamily: "Lightsail Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/-BundleUsage:0.5GB$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:07,470 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:07,660 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:41:07,660 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00672","unit":"Hrs","description":"$0.00672 / Hour of 0.5GB bundle Instance including public IPv4 address","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:07,660 - INFO - ✅ AWS::Lightsail::Instance in us-east-1: Query successful
2025-05-27 01:41:07,660 - INFO - Testing AWS::Lightsail::Instance in ca-central-1
2025-05-27 01:41:07,660 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonLightsail",
              productFamily: "Lightsail Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/-BundleUsage:0.5GB$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:07,662 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:07,839 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:41:07,839 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00672","unit":"Hrs","description":"$0.00672 / Hour of 0.5GB bundle Instance including public IPv4 address","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:07,839 - INFO - ✅ AWS::Lightsail::Instance in ca-central-1: Query successful
2025-05-27 01:41:07,839 - INFO - Testing AWS::MQ::Broker in us-east-1
2025-05-27 01:41:07,839 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMQ",
              productFamily: "Broker Instances",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/mq.t3.micro/" },
                { key: "brokerEngine", value_regex: "/ActiveMQ/" },
                { key: "deploymentOption", value_regex: "/Single-AZ/" },
                { key: "operation", value_regex: "/CreateBroker/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:07,840 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:08,008 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 223
2025-05-27 01:41:08,009 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.02704","unit":"Hrs","description":"single-instance mq.t3.micro hour (or partial hour) running ActiveMQ in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:08,009 - INFO - ✅ AWS::MQ::Broker in us-east-1: Query successful
2025-05-27 01:41:08,009 - INFO - Testing AWS::MQ::Broker in ca-central-1
2025-05-27 01:41:08,009 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMQ",
              productFamily: "Broker Instances",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/mq.t3.micro/" },
                { key: "brokerEngine", value_regex: "/ActiveMQ/" },
                { key: "deploymentOption", value_regex: "/Single-AZ/" },
                { key: "operation", value_regex: "/CreateBroker/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:08,010 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:08,188 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 218
2025-05-27 01:41:08,189 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.03016","unit":"Hrs","description":"single-instance mq.t3.micro hour (or partial hour) running ActiveMQ in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:08,189 - INFO - ✅ AWS::MQ::Broker in ca-central-1: Query successful
2025-05-27 01:41:08,189 - INFO - Testing AWS::MSK::Cluster in us-east-1
2025-05-27 01:41:08,189 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMSK",
              productFamily: "Managed Streaming for Apache Kafka (MSK)",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/kafka.t3.small/i" },
                { key: "locationType", value: "AWS Region" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:08,190 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:08,372 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 198
2025-05-27 01:41:08,372 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0456","unit":"hours","description":"USD 0.0456 per Kafka.t3.small broker hour in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:08,372 - INFO - ✅ AWS::MSK::Cluster in us-east-1: Query successful
2025-05-27 01:41:08,373 - INFO - Testing AWS::MSK::Cluster in ca-central-1
2025-05-27 01:41:08,373 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonMSK",
              productFamily: "Managed Streaming for Apache Kafka (MSK)",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/kafka.t3.small/i" },
                { key: "locationType", value: "AWS Region" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:08,374 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:08,550 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 193
2025-05-27 01:41:08,550 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0508","unit":"hours","description":"USD 0.0508 per Kafka.t3.small broker hour in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:08,550 - INFO - ✅ AWS::MSK::Cluster in ca-central-1: Query successful
2025-05-27 01:41:08,550 - INFO - Testing AWS::Config::ConfigRule in us-east-1
2025-05-27 01:41:08,550 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:08,551 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:08,724 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 220
2025-05-27 01:41:08,725 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"ConfigurationItemRecorded","description":"$0.003 per Configuration Item recorded in US East (N.Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:08,725 - INFO - ✅ AWS::Config::ConfigRule in us-east-1: Query successful
2025-05-27 01:41:08,725 - INFO - Testing AWS::Config::ConfigRule in ca-central-1
2025-05-27 01:41:08,725 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:08,728 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:08,891 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 222
2025-05-27 01:41:08,891 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"CAN1-ConfigurationItemRecorded","description":"$0.003 per  Configuration Item recorded in Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:08,891 - INFO - ✅ AWS::Config::ConfigRule in ca-central-1: Query successful
2025-05-27 01:41:08,891 - INFO - Testing AWS::Config::ConfigurationRecorder in us-east-1
2025-05-27 01:41:08,891 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:08,893 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:09,061 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 220
2025-05-27 01:41:09,061 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"ConfigurationItemRecorded","description":"$0.003 per Configuration Item recorded in US East (N.Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:09,062 - INFO - ✅ AWS::Config::ConfigurationRecorder in us-east-1: Query successful
2025-05-27 01:41:09,062 - INFO - Testing AWS::Config::ConfigurationRecorder in ca-central-1
2025-05-27 01:41:09,062 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSConfig",
              productFamily: "Management Tools - AWS Config",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ConfigurationItemRecorded$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:09,063 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:09,240 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 222
2025-05-27 01:41:09,241 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.003","unit":"CAN1-ConfigurationItemRecorded","description":"$0.003 per  Configuration Item recorded in Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:09,241 - INFO - ✅ AWS::Config::ConfigurationRecorder in ca-central-1: Query successful
2025-05-27 01:41:09,241 - INFO - Testing AWS::ApiGateway::Stage in us-east-1
2025-05-27 01:41:09,241 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "USE1-ApiGatewayRequest" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:09,244 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:09,420 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1475
2025-05-27 01:41:09,421 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"Requests","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"Requests","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"Requests","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"USE1-AmazonApiGateway-Request","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.0000028","unit":"USE1-AmazonApiGateway-Request","description":"$2.80/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000238","unit":"USE1-AmazonApiGateway-Request","description":"$2.38/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000151","unit":"USE1-AmazonApiGateway-Request","description":"$1.51/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:09,421 - INFO - ✅ AWS::ApiGateway::Stage in us-east-1: Query successful
2025-05-27 01:41:09,421 - INFO - Testing AWS::ApiGateway::Stage in ca-central-1
2025-05-27 01:41:09,421 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonApiGateway",
              productFamily: "API Calls",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "CAN1-ApiGatewayRequest" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:09,423 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:09,601 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 1473
2025-05-27 01:41:09,601 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.0000035","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"CAN1-AmazonApiGatewayRequest","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"CAN1-AmazonApiGatewayRequest","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"CAN1-AmazonApiGatewayRequest","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"},{"USD":"0.0000035","unit":"Requests","description":"$3.50/million requests - first 333 million requests/month","startUsageAmount":"0","endUsageAmount":"333000000"},{"USD":"0.00000308","unit":"Requests","description":"$3.08/million requests - next 667 million requests/month","startUsageAmount":"333000000","endUsageAmount":"1000000000"},{"USD":"0.00000262","unit":"Requests","description":"$2.62/million requests - next 19 billion requests/month","startUsageAmount":"1000000000","endUsageAmount":"20000000000"},{"USD":"0.00000166","unit":"Requests","description":"$1.66/million requests - over 20 billion requests/month","startUsageAmount":"20000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:09,602 - INFO - ✅ AWS::ApiGateway::Stage in ca-central-1: Query successful
2025-05-27 01:41:09,602 - INFO - Testing AWS::DirectConnect::Connection in us-east-1
2025-05-27 01:41:09,602 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Direct Connect",
              region: "us-east-1",
              attributeFilters: [
                { key: "capacity", value: "1G" },
                { key: "usagetype", value_regex: "/PortUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:09,603 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:09,786 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 5589
2025-05-27 01:41:09,786 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (Ohio), CyrusOne Aurora A1)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), Equinix MI1, Miami, FL)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), KIO Newtorks QRO 1, Queretaro)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (US East (N. Virginia), Equinix MI1, Miami, FL)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), Equinix NY5, Secaucus, NJ)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), QTS ATL1, Atlanta, GA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), Digital Realty ATL13, Atlanta, GA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), Equinix NY5, Secaucus, NJ)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), Equinix DA2, Dallas, TX)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (US East 1 in Markley Boston)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), Crown Castle, Philadelphia, PA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) ((US East (N. Virginia) in 165 Halsey Street","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (US East in Coresite Reston)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (US East in CoreSite 32 Avenue of Americas)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), KIO Newtorks QRO 1, Queretaro)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), QTS ATL1, Atlanta, GA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (US East in Equinix DC2)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (US East (N. Virginia) in 165 Halsey Street","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (US East in CoreSite Reston)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (US East in Equinix DC2)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), Digital Realty ATL13, Atlanta, GA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), Digital Realty IAD38, Ashburn, VA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (US East (N. Virginia), Digital Realty IAD38, Ashburn, VA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), Equinix DA2, Dallas, TX)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (US East 1 in Markley Boston)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (US East in CoreSite 32 Avenue of Americas)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (US East (N. Virginia), Crown Castle, Philadelphia, PA)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:09,786 - INFO - ✅ AWS::DirectConnect::Connection in us-east-1: Query successful
2025-05-27 01:41:09,786 - INFO - Testing AWS::DirectConnect::Connection in ca-central-1
2025-05-27 01:41:09,786 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectConnect",
              productFamily: "Direct Connect",
              region: "ca-central-1",
              attributeFilters: [
                { key: "capacity", value: "1G" },
                { key: "usagetype", value_regex: "/PortUsage/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:09,788 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:09,956 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 2245
2025-05-27 01:41:09,957 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (Canada (Central), Cologix VAN2, Vancouver, CA)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (Canada in Netelligent Montreal)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (Canada in Netelligent Montreal)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (Canada (Central) in Telehouse,","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (Canada (Central), Equinix TR2, Toronto)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.33 per connected HC-1G port-hour (or partial hour) (Canada (Central), Cologix VAN3, Vancouver, CAN)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.33","unit":"hours","description":"$0.3300 per connected 1G hosted connection port-hour (or partial hour) (Canada in Cologix MTL3)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (Canada in Cologix MTL3)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected 1G port-hour (or partial hour) (Canada (Central) in Telehouse, Toronto, CAN)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.3 per connected 1G port-hour (or partial hour) (Canada (Central), Equinix TR2, Toronto)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.3","unit":"hours","description":"$0.30 per connected OneGig port-hour (or partial hour) (Canada (Central), Cologix VAN2, Vancouver, CA)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:09,957 - INFO - ✅ AWS::DirectConnect::Connection in ca-central-1: Query successful
2025-05-27 01:41:09,957 - INFO - Testing AWS::DirectoryService::MicrosoftAD in us-east-1
2025-05-27 01:41:09,957 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "us-east-1",
              attributeFilters: [
                { key: "directoryType", value: "Microsoft AD" },
                { key: "directorySize", value: "Standard" },
                { key: "location", value: "US East (N. Virginia)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:09,958 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:10,139 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 234
2025-05-27 01:41:10,139 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.06","unit":"Hrs","description":"$0.060 per hour for Microsoft AD (Standard Edition) domain controllers in the US East (N. Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:10,140 - INFO - ✅ AWS::DirectoryService::MicrosoftAD in us-east-1: Query successful
2025-05-27 01:41:10,140 - INFO - Testing AWS::DirectoryService::MicrosoftAD in ca-central-1
2025-05-27 01:41:10,140 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "ca-central-1",
              attributeFilters: [
                { key: "directoryType", value: "Microsoft AD" },
                { key: "directorySize", value: "Standard" },
                { key: "location", value: "Canada (Central)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:10,141 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:10,329 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 230
2025-05-27 01:41:10,330 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.064","unit":"Hrs","description":"$0.064 per hour for Microsoft AD (Standard Edition) domain controllers in the Canada (Central) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:10,330 - INFO - ✅ AWS::DirectoryService::MicrosoftAD in ca-central-1: Query successful
2025-05-27 01:41:10,330 - INFO - Testing AWS::DirectoryService::SimpleAD in us-east-1
2025-05-27 01:41:10,330 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "us-east-1",
              attributeFilters: [
                { key: "directoryType", value_regex: "/Simple AD/i" },
                { key: "directorySize", value: "Small" },
                { key: "location", value: "US East (N. Virginia)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:10,331 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:10,502 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 206
2025-05-27 01:41:10,503 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.05","unit":"Hrs","description":"$0.05 per hour for a small directory in the US East (Northern Virginia) region","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:10,503 - INFO - ✅ AWS::DirectoryService::SimpleAD in us-east-1: Query successful
2025-05-27 01:41:10,503 - INFO - Testing AWS::DirectoryService::SimpleAD in ca-central-1
2025-05-27 01:41:10,503 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSDirectoryService",
              productFamily: "AWS Directory Service",
              region: "ca-central-1",
              attributeFilters: [
                { key: "directoryType", value_regex: "/Simple AD/i" },
                { key: "directorySize", value: "Small" },
                { key: "location", value: "Canada (Central)" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:10,505 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:10,681 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 25
2025-05-27 01:41:10,681 - DEBUG - GraphQL response: {"data":{"products":[]}}

2025-05-27 01:41:10,682 - ERROR - ❌ AWS::DirectoryService::SimpleAD in ca-central-1: No products found in response
2025-05-27 01:41:10,682 - INFO - Testing AWS::EC2::DedicatedHost in us-east-1
2025-05-27 01:41:10,682 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Dedicated Host",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/HostUsage:m5$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:10,684 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:10,860 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 186
2025-05-27 01:41:10,860 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5.069","unit":"Hrs","description":"$5.069 per On Demand M5 Dedicated Host Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]}]}}

2025-05-27 01:41:10,860 - INFO - ✅ AWS::EC2::DedicatedHost in us-east-1: Query successful
2025-05-27 01:41:10,861 - INFO - Testing AWS::EC2::DedicatedHost in ca-central-1
2025-05-27 01:41:10,861 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Dedicated Host",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/HostUsage:m5$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:10,862 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:11,036 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 184
2025-05-27 01:41:11,037 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"5.65","unit":"Hrs","description":"$5.65 per On Demand M5 Dedicated Host Hour","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]}]}}

2025-05-27 01:41:11,037 - INFO - ✅ AWS::EC2::DedicatedHost in ca-central-1: Query successful
2025-05-27 01:41:11,037 - INFO - Testing AWS::EC2::SpotFleet in us-east-1
2025-05-27 01:41:11,037 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "us-east-1",
              attributeFilters: [
                { key: "instanceType", value: "m5.large" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "spot"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:11,038 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:11,225 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 662
2025-05-27 01:41:11,226 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[{"USD":"0.0434","unit":"Hrs","description":"","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]},{"prices":[]}]}}

2025-05-27 01:41:11,226 - INFO - ✅ AWS::EC2::SpotFleet in us-east-1: Query successful
2025-05-27 01:41:11,226 - INFO - Testing AWS::EC2::SpotFleet in ca-central-1
2025-05-27 01:41:11,226 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEC2",
              productFamily: "Compute Instance",
              region: "ca-central-1",
              attributeFilters: [
                { key: "instanceType", value: "m5.large" },
                { key: "operatingSystem", value: "Linux" },
                { key: "tenancy", value: "Shared" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "spot"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:11,227 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:11,400 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 662
2025-05-27 01:41:11,401 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[]},{"prices":[{"USD":"0.0481","unit":"Hrs","description":"","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[]},{"prices":[]}]}}

2025-05-27 01:41:11,401 - INFO - ✅ AWS::EC2::SpotFleet in ca-central-1: Query successful
2025-05-27 01:41:11,401 - INFO - Testing AWS::ECS::Service in us-east-1
2025-05-27 01:41:11,401 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECS",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:11,402 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:11,578 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 174
2025-05-27 01:41:11,578 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04048","unit":"hours","description":"AWS Fargate - vCPU - US East (N.Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:11,578 - INFO - ✅ AWS::ECS::Service in us-east-1: Query successful
2025-05-27 01:41:11,578 - INFO - Testing AWS::ECS::Service in ca-central-1
2025-05-27 01:41:11,578 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonECS",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:11,580 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:11,763 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 171
2025-05-27 01:41:11,763 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04456","unit":"hours","description":"AWS Fargate - vCPU  - Central (Canada)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:11,763 - INFO - ✅ AWS::ECS::Service in ca-central-1: Query successful
2025-05-27 01:41:11,763 - INFO - Testing AWS::EKS::FargateProfile in us-east-1
2025-05-27 01:41:11,763 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:11,764 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:11,936 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 175
2025-05-27 01:41:11,936 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04048","unit":"hours","description":"AWS Fargate - vCPU - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:11,936 - INFO - ✅ AWS::EKS::FargateProfile in us-east-1: Query successful
2025-05-27 01:41:11,936 - INFO - Testing AWS::EKS::FargateProfile in ca-central-1
2025-05-27 01:41:11,936 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonEKS",
              productFamily: "Compute",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/Fargate-vCPU-Hours:perCPU/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:11,938 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:12,110 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 170
2025-05-27 01:41:12,110 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.04456","unit":"hours","description":"AWS Fargate - vCPU - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:12,110 - INFO - ✅ AWS::EKS::FargateProfile in ca-central-1: Query successful
2025-05-27 01:41:12,110 - INFO - Testing AWS::Events::EventBus in us-east-1
2025-05-27 01:41:12,110 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSEvents",
              productFamily: "EventBridge",
              region: "us-east-1",
              attributeFilters: [
                { key: "eventType", value: "Custom Event" },
                { key: "usagetype", value_regex: "/Event-64K-Chunks/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:12,111 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:12,284 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 216
2025-05-27 01:41:12,285 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"64K-Chunks","description":"$1.00 per million EventBridge custom events received in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:12,285 - INFO - ✅ AWS::Events::EventBus in us-east-1: Query successful
2025-05-27 01:41:12,285 - INFO - Testing AWS::Events::EventBus in ca-central-1
2025-05-27 01:41:12,285 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSEvents",
              productFamily: "EventBridge",
              region: "ca-central-1",
              attributeFilters: [
                { key: "eventType", value: "Custom Event" },
                { key: "usagetype", value_regex: "/Event-64K-Chunks/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:12,286 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:12,459 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 211
2025-05-27 01:41:12,459 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.000001","unit":"64K-Chunks","description":"$1.00 per million EventBridge custom events received in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:12,460 - INFO - ✅ AWS::Events::EventBus in ca-central-1: Query successful
2025-05-27 01:41:12,460 - INFO - Testing AWS::FSx::FileSystem in us-east-1
2025-05-27 01:41:12,460 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonFSx",
              productFamily: "Storage",
              region: "us-east-1",
              attributeFilters: [
                { key: "deploymentOption", value: "Single-AZ" },
                { key: "fileSystemType", value: "Windows" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:12,461 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:12,635 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 609
2025-05-27 01:41:12,635 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.13","unit":"GB-Mo","description":"$0.130 per GB-Month of provisioned Windows File Server storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.05","unit":"GB-Mo","description":"$0.05 per GB-Month of Windows File Server backup storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.013","unit":"GB-Mo","description":"$0.013 per GB-Month of provisioned Windows File Server Single-AZ HDD storage - US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:12,636 - INFO - ✅ AWS::FSx::FileSystem in us-east-1: Query successful
2025-05-27 01:41:12,636 - INFO - Testing AWS::FSx::FileSystem in ca-central-1
2025-05-27 01:41:12,636 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonFSx",
              productFamily: "Storage",
              region: "ca-central-1",
              attributeFilters: [
                { key: "deploymentOption", value: "Single-AZ" },
                { key: "fileSystemType", value: "Windows" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:12,637 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:12,826 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 597
2025-05-27 01:41:12,826 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.014","unit":"GB-Mo","description":"$0.014 per GB-Month of provisioned Windows File Server Single-AZ HDD storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.143","unit":"GB-Mo","description":"$0.143 per GB-Month of provisioned Windows File Server storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.055","unit":"GB-Mo","description":"$0.055 per GB-Month of Windows File Server backup storage - Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:12,827 - INFO - ✅ AWS::FSx::FileSystem in ca-central-1: Query successful
2025-05-27 01:41:12,827 - INFO - Testing AWS::Glue::Crawler in us-east-1
2025-05-27 01:41:12,827 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "us-east-1",
              attributeFilters: [
                { key: "operation", value_regex: "/^crawlerrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:12,828 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:13,000 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:41:13,000 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue crawler","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:13,000 - INFO - ✅ AWS::Glue::Crawler in us-east-1: Query successful
2025-05-27 01:41:13,000 - INFO - Testing AWS::Glue::Crawler in ca-central-1
2025-05-27 01:41:13,000 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "ca-central-1",
              attributeFilters: [
                { key: "operation", value_regex: "/^crawlerrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:13,002 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:13,178 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:41:13,178 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue crawler","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:13,178 - INFO - ✅ AWS::Glue::Crawler in ca-central-1: Query successful
2025-05-27 01:41:13,178 - INFO - Testing AWS::Glue::Database in us-east-1
2025-05-27 01:41:13,178 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value_regex: "/^data catalog storage$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:13,180 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:13,354 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 203
2025-05-27 01:41:13,354 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00001","unit":"Obj-Month","description":"$1 per 100,000 objects per month for AWS Glue Data Catalog storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:13,354 - INFO - ✅ AWS::Glue::Database in us-east-1: Query successful
2025-05-27 01:41:13,354 - INFO - Testing AWS::Glue::Database in ca-central-1
2025-05-27 01:41:13,354 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value_regex: "/^data catalog storage$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:13,356 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:13,523 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 203
2025-05-27 01:41:13,524 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.00001","unit":"Obj-Month","description":"$1 per 100,000 objects per month for AWS Glue Data Catalog storage","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:13,524 - INFO - ✅ AWS::Glue::Database in ca-central-1: Query successful
2025-05-27 01:41:13,524 - INFO - Testing AWS::Glue::Job in us-east-1
2025-05-27 01:41:13,524 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value: "ETL Job run" },
                { key: "operation", value_regex: "/^jobrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:13,526 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:13,698 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:41:13,698 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue ETL job","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:13,698 - INFO - ✅ AWS::Glue::Job in us-east-1: Query successful
2025-05-27 01:41:13,698 - INFO - Testing AWS::Glue::Job in ca-central-1
2025-05-27 01:41:13,698 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSGlue",
              productFamily: "AWS Glue",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value: "ETL Job run" },
                { key: "operation", value_regex: "/^jobrun$/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:13,700 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:13,881 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 189
2025-05-27 01:41:13,881 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.44","unit":"DPU-Hour","description":"$0.44 per Data Processing Unit-Hour for AWS Glue ETL job","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:13,881 - INFO - ✅ AWS::Glue::Job in ca-central-1: Query successful
2025-05-27 01:41:13,881 - INFO - Testing AWS::KinesisAnalytics::Application in us-east-1
2025-05-27 01:41:13,881 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisAnalytics",
              productFamily: "Kinesis Analytics",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/KPU-Hour-Java/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:13,883 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:14,067 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:41:14,068 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.11","unit":"KPU-Hour","description":"$0.11 per Kinesis Processing Unit-hour for Apache Flink applications","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:14,068 - INFO - ✅ AWS::KinesisAnalytics::Application in us-east-1: Query successful
2025-05-27 01:41:14,068 - INFO - Testing AWS::KinesisAnalytics::Application in ca-central-1
2025-05-27 01:41:14,068 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisAnalytics",
              productFamily: "Kinesis Analytics",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/KPU-Hour-Java/i" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:14,069 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:14,242 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 203
2025-05-27 01:41:14,242 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.123","unit":"KPU-Hour","description":"$0.123 per Kinesis Processing Unit-hour for Apache Flink applications","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:14,242 - INFO - ✅ AWS::KinesisAnalytics::Application in ca-central-1: Query successful
2025-05-27 01:41:14,242 - INFO - Testing AWS::KinesisFirehose::DeliveryStream in us-east-1
2025-05-27 01:41:14,243 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisFirehose",
              productFamily: "Kinesis Firehose",
              region: "us-east-1",
              attributeFilters: [
                { key: "group", value: "Event-by-Event Processing" },
                { key: "sourcetype", value: "" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:14,244 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:14,433 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 994
2025-05-27 01:41:14,434 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.075","unit":"GB","description":"Tier 1 $0.075 per GB of data ingested ","startUsageAmount":"0","endUsageAmount":"256000"},{"USD":"0.064","unit":"GB","description":"Tier 2 $0.064 per GB of data ingested ","startUsageAmount":"256000","endUsageAmount":"1024000"},{"USD":"0.053","unit":"GB","description":"Tier 3 $0.053 per GB of data ingested","startUsageAmount":"1024000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.08","unit":"GB","description":"Per GB of data ingested or delivered","startUsageAmount":"0","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.029","unit":"GB","description":"Tier 1 $0.029 per GB of data ingested","startUsageAmount":"0","endUsageAmount":"512000"},{"USD":"0.025","unit":"GB","description":"Tier 2 $0.025 per GB of data ingested","startUsageAmount":"512000","endUsageAmount":"2048000"},{"USD":"0.02","unit":"GB","description":"Tier 3 $0.020 per GB of data ingested","startUsageAmount":"2048000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:14,434 - INFO - ✅ AWS::KinesisFirehose::DeliveryStream in us-east-1: Query successful
2025-05-27 01:41:14,434 - INFO - Testing AWS::KinesisFirehose::DeliveryStream in ca-central-1
2025-05-27 01:41:14,435 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonKinesisFirehose",
              productFamily: "Kinesis Firehose",
              region: "ca-central-1",
              attributeFilters: [
                { key: "group", value: "Event-by-Event Processing" },
                { key: "sourcetype", value: "" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:14,437 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:14,612 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 996
2025-05-27 01:41:14,613 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.083","unit":"GB","description":"Tier 1 $0.083 per GB of data ingested ","startUsageAmount":"0","endUsageAmount":"256000"},{"USD":"0.07","unit":"GB","description":"Tier 2 $0.070 per GB of data ingested ","startUsageAmount":"256000","endUsageAmount":"1024000"},{"USD":"0.058","unit":"GB","description":"Tier 3 $0.058 per GB of data ingested","startUsageAmount":"1024000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.032","unit":"GB","description":"Tier 1 $0.032 per GB of data ingested","startUsageAmount":"0","endUsageAmount":"512000"},{"USD":"0.028","unit":"GB","description":"Tier 2 $0.028 per GB of data ingested","startUsageAmount":"512000","endUsageAmount":"2048000"},{"USD":"0.022","unit":"GB","description":"Tier 3 $0.022 per GB of data ingested","startUsageAmount":"2048000","endUsageAmount":"Inf"}]},{"prices":[{"USD":"0.0883","unit":"GB","description":"Per GB of data ingested or delivered","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:14,613 - INFO - ✅ AWS::KinesisFirehose::DeliveryStream in ca-central-1: Query successful
2025-05-27 01:41:14,613 - INFO - Testing AWS::NetworkFirewall::Firewall in us-east-1
2025-05-27 01:41:14,613 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSNetworkFirewall",
              productFamily: "AWS Firewall",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-Endpoint-Hour$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:14,615 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:14,792 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 206
2025-05-27 01:41:14,792 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.395","unit":"Hourly","description":"$0.395 per endpoint hour for AWS Network Firewall in US East (N. Virginia)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:14,793 - INFO - ✅ AWS::NetworkFirewall::Firewall in us-east-1: Query successful
2025-05-27 01:41:14,793 - INFO - Testing AWS::NetworkFirewall::Firewall in ca-central-1
2025-05-27 01:41:14,793 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AWSNetworkFirewall",
              productFamily: "AWS Firewall",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/^[A-Z0-9]*-Endpoint-Hour$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:14,795 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:14,977 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 201
2025-05-27 01:41:14,977 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.395","unit":"Hourly","description":"$0.395 per endpoint hour for AWS Network Firewall in Canada (Central)","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:14,978 - INFO - ✅ AWS::NetworkFirewall::Firewall in ca-central-1: Query successful
2025-05-27 01:41:14,978 - INFO - Testing AWS::Route53::RecordSet in us-east-1
2025-05-27 01:41:14,978 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              attributeFilters: [
                { key: "usagetype", value: "DNS-Queries" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:14,980 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:15,153 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 352
2025-05-27 01:41:15,154 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"4e-7","unit":"Queries","description":"$0.40 per 1,000,000 queries for the first 1 Billion queries","startUsageAmount":"0","endUsageAmount":"1000000000"},{"USD":"2e-7","unit":"Queries","description":"$0.20 per 1,000,000 queries over 1 Billion queries","startUsageAmount":"1000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:15,154 - INFO - ✅ AWS::Route53::RecordSet in us-east-1: Query successful
2025-05-27 01:41:15,154 - INFO - Testing AWS::Route53::RecordSet in ca-central-1
2025-05-27 01:41:15,154 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              attributeFilters: [
                { key: "usagetype", value: "DNS-Queries" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:15,157 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:15,324 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 352
2025-05-27 01:41:15,325 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"4e-7","unit":"Queries","description":"$0.40 per 1,000,000 queries for the first 1 Billion queries","startUsageAmount":"0","endUsageAmount":"1000000000"},{"USD":"2e-7","unit":"Queries","description":"$0.20 per 1,000,000 queries over 1 Billion queries","startUsageAmount":"1000000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:15,326 - INFO - ✅ AWS::Route53::RecordSet in ca-central-1: Query successful
2025-05-27 01:41:15,326 - INFO - Testing AWS::Route53Resolver::ResolverEndpoint in us-east-1
2025-05-27 01:41:15,326 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ResolverNetworkInterface$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:15,329 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:15,496 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:41:15,497 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.125","unit":"Hours","description":"$0.125 per hour per Resolver Network Interface","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:15,497 - INFO - ✅ AWS::Route53Resolver::ResolverEndpoint in us-east-1: Query successful
2025-05-27 01:41:15,497 - INFO - Testing AWS::Route53Resolver::ResolverEndpoint in ca-central-1
2025-05-27 01:41:15,497 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonRoute53",
              productFamily: "DNS Query",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value_regex: "/ResolverNetworkInterface$/" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:15,500 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:15,660 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 177
2025-05-27 01:41:15,661 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0.125","unit":"Hours","description":"$0.125 per hour per Resolver Network Interface","startUsageAmount":"0","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:15,661 - INFO - ✅ AWS::Route53Resolver::ResolverEndpoint in ca-central-1: Query successful
2025-05-27 01:41:15,661 - INFO - Testing AWS::SNS::Subscription in us-east-1
2025-05-27 01:41:15,661 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "us-east-1",
              attributeFilters: [
                { key: "usagetype", value: "Requests-Tier1" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:15,663 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:15,842 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:41:15,842 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:15,843 - INFO - ✅ AWS::SNS::Subscription in us-east-1: Query successful
2025-05-27 01:41:15,843 - INFO - Testing AWS::SNS::Subscription in ca-central-1
2025-05-27 01:41:15,843 - DEBUG - GraphQL query: 
        {
          products(
            filter: {
              vendorName: "aws",
              service: "AmazonSNS",
              productFamily: "API Request",
              region: "ca-central-1",
              attributeFilters: [
                { key: "usagetype", value: "CAN1-Requests-Tier1" }
                
              ]
            }
          ) {
            prices(filter: {purchaseOption: "on_demand"}) { 
              USD 
              unit
              description
              startUsageAmount
              endUsageAmount
            }
          }
        }
        
2025-05-27 01:41:15,845 - DEBUG - Starting new HTTPS connection (1): pricing.api.infracost.io:443
2025-05-27 01:41:16,028 - DEBUG - https://pricing.api.infracost.io:443 "POST /graphql HTTP/1.1" 200 358
2025-05-27 01:41:16,028 - DEBUG - GraphQL response: {"data":{"products":[{"prices":[{"USD":"0","unit":"Requests","description":"First 1,000,000 Amazon SNS API Requests per month are free","startUsageAmount":"0","endUsageAmount":"1000000"},{"USD":"5e-7","unit":"Requests","description":"$0.50 per 1,000,000 Amazon SNS API Requests per month thereafter","startUsageAmount":"1000000","endUsageAmount":"Inf"}]}]}}

2025-05-27 01:41:16,029 - INFO - ✅ AWS::SNS::Subscription in ca-central-1: Query successful
2025-05-27 01:41:16,042 - INFO - Test completed. Detailed results saved to comprehensive_test_results.json
